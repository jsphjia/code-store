C0 C0 FF EE       # magic number
00 17             # version 11, arch = 1 (64 bits)

00 04             # int pool count
# int pool
7F FF FF FF
80 00 00 00
7F FF FF FF
80 00 00 00

86 C8             # string pool total size
# string pool
72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 31 36 2D 31 34 2E 32 31 29 00  # "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 36 2D 31 34 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 2E 34 2D 31 33 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 13.4-13.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 69 73 5F 69 6E 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 2E 32 34 2D 31 36 2E 34 36 29 00  # "int_is_in (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 16.24-16.46)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 30 2E 34 2D 32 30 2E 33 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 20.4-20.38: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 31 2E 34 2D 32 31 2E 33 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 21.4-21.38: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 29.4-29.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 67 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 33 32 2E 32 33 2D 33 32 2E 34 39 29 00  # "int_gt_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 32.23-32.49)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 33 36 2E 34 2D 33 36 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 36.4-36.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 67 65 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 33 39 2E 32 34 2D 33 39 2E 35 30 29 00  # "int_ge_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 39.24-39.50)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 34 33 2E 34 2D 34 33 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 43.4-43.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 6C 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 34 36 2E 32 33 2D 34 36 2E 34 39 29 00  # "int_lt_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 46.23-46.49)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 35 30 2E 34 2D 35 30 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 50.4-50.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 6C 65 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 35 33 2E 32 34 2D 35 33 2E 35 30 29 00  # "int_le_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 53.24-53.50)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 35 39 2E 34 2D 35 39 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 59.4-59.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 69 73 5F 73 6F 72 74 65 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 36 32 2E 31 30 2D 36 32 2E 34 30 29 00  # "int_is_sorted (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 62.10-62.40)"
69 6E 74 5F 69 73 5F 73 6F 72 74 65 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 36 32 2E 34 34 2D 36 32 2E 37 30 29 00  # "int_is_sorted (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 62.44-62.70)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 36 36 2E 34 2D 36 36 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 66.4-66.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 36 37 2E 34 2D 36 37 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 67.4-67.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 67 74 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 37 30 2E 31 30 2D 37 30 2E 34 31 29 00  # "int_gt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 70.10-70.41)"
69 6E 74 5F 67 74 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 37 31 2E 31 30 2D 37 31 2E 34 39 29 00  # "int_gt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 71.10-71.49)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 37 35 2E 34 2D 37 35 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 75.4-75.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 37 36 2E 34 2D 37 36 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 76.4-76.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 67 65 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 37 39 2E 31 30 2D 37 39 2E 34 31 29 00  # "int_ge_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 79.10-79.41)"
69 6E 74 5F 67 65 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 38 30 2E 31 30 2D 38 30 2E 34 39 29 00  # "int_ge_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 80.10-80.49)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 38 34 2E 34 2D 38 34 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 84.4-84.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 38 35 2E 34 2D 38 35 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 85.4-85.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 6C 74 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 38 38 2E 31 30 2D 38 38 2E 34 31 29 00  # "int_lt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 88.10-88.41)"
69 6E 74 5F 6C 74 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 38 39 2E 31 30 2D 38 39 2E 34 39 29 00  # "int_lt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 89.10-89.49)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 39 33 2E 34 2D 39 33 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 93.4-93.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 39 34 2E 34 2D 39 34 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 94.4-94.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 6C 65 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 39 37 2E 31 30 2D 39 37 2E 34 31 29 00  # "int_le_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 97.10-97.41)"
69 6E 74 5F 6C 65 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 39 38 2E 31 30 2D 39 38 2E 34 39 29 00  # "int_le_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 98.10-98.49)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 32 2E 34 2D 31 30 32 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 102.4-102.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
61 72 72 61 79 5B 00  # "array["
69 6E 74 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 34 2E 33 2D 31 30 34 2E 33 37 29 00  # "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)"
69 6E 74 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 34 2E 33 2D 31 30 34 2E 33 37 29 00  # "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)"
2C 00  # ","
69 6E 74 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 34 2E 33 2D 31 30 34 2E 33 37 29 00  # "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)"
69 6E 74 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 34 2E 33 2D 31 30 34 2E 33 37 29 00  # "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)"
29 20 3D 20 5B 00  # ") = ["
69 6E 74 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 34 2E 33 2D 31 30 34 2E 33 37 29 00  # "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 36 2E 36 2D 31 30 36 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 106.6-106.40: @loop_invariant annotation failed"
00  # ""
69 6E 74 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 38 2E 35 2D 31 30 38 2E 32 33 29 00  # "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 108.5-108.23)"
69 6E 74 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 38 2E 35 2D 31 30 38 2E 32 33 29 00  # "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 108.5-108.23)"
00  # ""
69 6E 74 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 38 2E 35 2D 31 30 38 2E 32 33 29 00  # "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 108.5-108.23)"
2C 20 00  # ", "
69 6E 74 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 39 2E 32 30 2D 31 30 39 2E 33 32 29 00  # "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 109.20-109.32)"
5D 00  # "]"
69 6E 74 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 31 31 2E 33 2D 31 31 31 2E 31 34 29 00  # "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 111.3-111.14)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 32 32 2E 34 2D 31 32 32 2E 35 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 122.4-122.54: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 69 73 5F 69 6E 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 32 31 2E 31 2D 31 32 32 2E 36 30 29 00  # "int_is_in__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 121.1-122.60)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 32 36 2E 34 2D 31 32 36 2E 35 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 126.4-126.54: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 69 73 5F 73 6F 72 74 65 64 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 32 35 2E 31 2D 31 32 36 2E 36 30 29 00  # "int_is_sorted__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 125.1-126.60)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 30 2E 35 2D 31 33 30 2E 36 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 130.5-130.67: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 73 77 61 70 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 32 39 2E 31 2D 31 33 30 2E 37 33 29 00  # "int_swap__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 129.1-130.73)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 35 2E 34 2D 31 33 35 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 135.4-135.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 67 74 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 34 2E 31 2D 31 33 35 2E 35 39 29 00  # "int_gt_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 134.1-135.59)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 39 2E 34 2D 31 33 39 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 139.4-139.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 67 65 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 38 2E 31 2D 31 33 39 2E 35 39 29 00  # "int_ge_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 138.1-139.59)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 33 2E 34 2D 31 34 33 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 143.4-143.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 6C 74 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 32 2E 31 2D 31 34 33 2E 35 39 29 00  # "int_lt_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 142.1-143.59)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 37 2E 34 2D 31 34 37 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 147.4-147.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 6C 65 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 36 2E 31 2D 31 34 37 2E 35 39 29 00  # "int_le_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 146.1-147.59)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 33 2E 34 2D 31 35 33 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 153.4-153.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 34 2E 34 2D 31 35 34 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 154.4-154.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 67 74 5F 73 65 67 73 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 31 2E 31 2D 31 35 34 2E 36 33 29 00  # "int_gt_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 151.1-154.63)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 39 2E 34 2D 31 35 39 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 159.4-159.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 30 2E 34 2D 31 36 30 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 160.4-160.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 67 65 5F 73 65 67 73 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 37 2E 31 2D 31 36 30 2E 36 33 29 00  # "int_ge_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 157.1-160.63)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 35 2E 34 2D 31 36 35 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 165.4-165.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 36 2E 34 2D 31 36 36 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 166.4-166.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 6C 74 5F 73 65 67 73 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 33 2E 31 2D 31 36 36 2E 36 33 29 00  # "int_lt_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 163.1-166.63)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 37 31 2E 34 2D 31 37 31 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 171.4-171.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 37 32 2E 34 2D 31 37 32 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 172.4-172.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 6C 65 5F 73 65 67 73 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 39 2E 31 2D 31 37 32 2E 36 33 29 00  # "int_le_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 169.1-172.63)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 37 36 2E 34 2D 31 37 36 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 176.4-176.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 70 72 69 6E 74 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 69 6E 74 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 37 35 2E 31 2D 31 37 36 2E 35 39 29 00  # "int_print_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 175.1-176.59)"
73 74 72 69 6E 67 5F 63 68 61 72 61 74 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 33 33 2D 31 39 2E 34 39 29 00  # "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 31 34 2D 32 33 2E 33 36 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 31 39 2D 32 34 2E 33 35 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 33 38 2D 32 34 2E 35 34 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 36 2D 32 34 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 35 32 2D 33 31 2E 36 38 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 36 2D 33 31 2E 36 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 31 34 2D 33 32 2E 33 36 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 36 2D 33 32 2E 35 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 37 2E 36 2D 33 37 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 33 2E 36 2D 34 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 31 34 2D 34 34 2E 33 36 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 36 2D 34 34 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 31 34 2D 34 35 2E 33 39 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 36 2D 34 35 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 32 2E 36 2D 35 32 2E 34 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 33 34 2D 35 36 2E 35 30 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 36 2D 35 36 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 34 31 2D 35 37 2E 35 37 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 31 34 2D 35 37 2E 36 32 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 36 2D 35 37 2E 36 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 31 35 2D 36 32 2E 34 37 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 36 2D 36 32 2E 34 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 31 34 2D 36 33 2E 33 36 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 36 2D 36 33 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 37 2E 36 2D 36 37 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 39 2E 36 2D 36 39 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 30 2E 36 2D 31 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 35 2E 33 34 2D 31 35 2E 35 34 29 00  # "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 35 2E 36 2D 31 35 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 15.6-15.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 31 2E 31 36 2D 32 31 2E 33 30 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 31 2E 36 2D 32 31 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 31 34 2D 32 32 2E 32 38 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 36 2D 32 32 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 31 34 2D 32 32 2E 32 38 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 36 2D 32 32 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 36 2E 36 2D 32 36 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 65 6F 66 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 37 2E 31 36 2D 32 37 2E 33 30 29 00  # "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 37 2E 36 2D 32 37 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 34 2E 36 2D 33 34 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 35 2E 31 36 2D 33 35 2E 33 30 29 00  # "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 35 2E 36 2D 33 35 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 36 2E 31 36 2D 33 36 2E 32 37 29 00  # "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 36 2E 36 2D 33 36 2E 32 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 74 5F 73 69 7A 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 38 2E 31 2D 39 2E 33 33 29 00  # "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 39 2E 36 2D 39 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
69 6E 74 5F 6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 30 2E 31 2D 31 31 2E 34 32 29 00  # "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 31 2E 36 2D 31 31 2E 33 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
69 6E 74 5F 6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 32 2E 31 2D 31 33 2E 34 33 29 00  # "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 31 39 2D 31 37 2E 32 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 36 2D 31 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 36 2E 31 2D 31 39 2E 34 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 38 2E 36 2D 31 38 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 32 2E 31 2D 32 34 2E 34 39 29 00  # "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 34 2E 36 2D 32 34 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 37 2E 31 2D 32 39 2E 34 39 29 00  # "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 38 2E 36 2D 32 38 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 39 2E 36 2D 32 39 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 33 2E 34 2D 31 33 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 34 2E 34 2D 31 34 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 31 2E 34 2D 32 31 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 32 2E 34 2D 32 32 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
61 62 73 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 31 37 2D 32 39 2E 32 36 29 00  # "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 30 2E 34 2D 33 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 37 2E 34 2D 33 37 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 32 31 2D 34 30 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 31 32 2D 34 30 2E 33 39 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 32 31 2D 34 32 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 31 32 2D 34 32 2E 34 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 31 2E 31 38 2D 35 31 2E 32 38 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 35 2E 38 2D 35 35 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 37 2E 32 33 2D 35 37 2E 34 33 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 36 30 2E 31 30 2D 36 30 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 31 32 2D 34 39 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 30 2D 34 39 2E 35 30 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 2D 34 39 2E 35 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 33 2E 32 37 2D 33 33 2E 35 30 29 00  # "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 33.27-33.50)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 33 2E 34 2D 33 33 2E 35 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 33.4-33.51: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 34 2E 32 33 2D 33 34 2E 34 39 29 00  # "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 34.23-34.49)"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 34 2E 31 34 2D 33 34 2E 35 30 29 00  # "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 34.14-34.50)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 34 2E 34 2D 33 34 2E 35 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 34.4-34.51: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 39 2E 31 33 2D 33 39 2E 33 36 29 00  # "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 39.13-39.36)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 34 32 2E 38 2D 34 32 2E 34 32 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 42.8-42.42: @loop_invariant annotation failed"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 34 31 2E 33 31 2D 34 31 2E 35 37 29 00  # "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 41.31-41.57)"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 34 31 2E 32 32 2D 34 31 2E 35 38 29 00  # "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 41.22-41.58)"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 34 37 2E 32 35 2D 34 37 2E 35 31 29 00  # "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 47.25-47.51)"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 34 37 2E 31 30 2D 34 37 2E 35 32 29 00  # "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 47.10-47.52)"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 35 2E 31 32 2D 33 35 2E 33 34 29 00  # "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 35.12-35.34)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 35 2E 34 2D 33 35 2E 33 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 35.4-35.39: @ensures annotation failed"
77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 36 2E 32 31 2D 33 36 2E 34 34 29 00  # "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 36.21-36.44)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 33 36 2E 34 2D 33 36 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 36.4-36.45: @ensures annotation failed"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 31 2E 32 38 2D 35 31 2E 35 31 29 00  # "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 51.28-51.51)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 31 2E 34 2D 35 31 2E 35 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 51.4-51.52: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 36 2E 31 34 2D 35 36 2E 33 37 29 00  # "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 56.14-56.37)"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 36 2E 35 30 2D 35 36 2E 37 36 29 00  # "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 56.50-56.76)"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 36 2E 34 31 2D 35 36 2E 37 37 29 00  # "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 56.41-56.77)"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 32 2E 32 33 2D 35 32 2E 34 36 29 00  # "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 52.23-52.46)"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 33 2E 32 32 2D 35 33 2E 35 34 29 00  # "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 53.22-53.54)"
73 6B 69 70 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 33 2E 31 33 2D 35 33 2E 35 35 29 00  # "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 53.13-53.55)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 35 32 2E 34 2D 35 33 2E 35 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 52.4-53.56: @ensures annotation failed"
72 65 61 64 65 72 5F 76 61 6C 69 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 37 35 2E 35 30 2D 37 35 2E 37 35 29 00  # "reader_valid (/tmp/tmp.s2zpkBvenI/readfile.c0: 75.50-75.75)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 37 39 2E 34 2D 37 39 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 79.4-79.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
61 74 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 31 2E 32 37 2D 38 31 2E 35 32 29 00  # "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 81.27-81.52)"
61 74 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 32 2E 31 37 2D 38 32 2E 35 38 29 00  # "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 82.17-82.58)"
61 74 5F 73 70 61 63 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 32 2E 38 2D 38 32 2E 35 39 29 00  # "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 82.8-82.59)"
67 65 74 5F 72 65 61 64 65 72 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 38 2E 31 37 2D 38 38 2E 33 33 29 00  # "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 88.17-88.33)"
67 65 74 5F 72 65 61 64 65 72 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 36 2E 33 32 2D 38 36 2E 34 39 29 00  # "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 86.32-86.49)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 36 2E 34 2D 38 36 2E 35 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 86.4-86.50: @ensures annotation failed"
67 65 74 5F 72 65 61 64 65 72 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 39 35 2E 37 2D 39 35 2E 32 31 29 00  # "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 95.7-95.21)"
00  # ""
67 65 74 5F 72 65 61 64 65 72 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 30 2E 31 38 2D 31 30 30 2E 33 37 29 00  # "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 100.18-100.37)"
67 65 74 5F 72 65 61 64 65 72 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 31 2E 32 32 2D 31 30 31 2E 34 37 29 00  # "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 101.22-101.47)"
67 65 74 5F 72 65 61 64 65 72 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 36 2E 33 32 2D 38 36 2E 34 39 29 00  # "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 86.32-86.49)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 38 36 2E 34 2D 38 36 2E 35 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 86.4-86.50: @ensures annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 37 2E 32 37 2D 31 30 37 2E 33 38 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 107.27-107.38)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 37 2E 34 2D 31 30 37 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 107.4-107.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
00  # ""
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 38 2E 32 36 2D 31 30 38 2E 33 37 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 38 2E 34 2D 31 30 38 2E 33 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 108.4-108.38: @ensures annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 31 35 2E 32 34 2D 31 31 35 2E 33 35 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 115.24-115.35)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 31 35 2E 38 2D 31 31 35 2E 33 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 115.8-115.36: @loop_invariant annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 31 34 2E 32 38 2D 31 31 34 2E 35 33 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 114.28-114.53)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 31 34 2E 35 38 2D 31 31 34 2E 37 35 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 114.58-114.75)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 31 37 2E 32 30 2D 31 31 37 2E 34 32 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 117.20-117.42)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 31 38 2E 32 34 2D 31 31 38 2E 34 39 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 118.24-118.49)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 32 2E 33 31 2D 31 32 32 2E 35 36 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 122.31-122.56)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 33 2E 32 37 2D 31 32 33 2E 36 38 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 123.27-123.68)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 33 2E 31 38 2D 31 32 33 2E 36 39 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 123.18-123.69)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 34 2E 33 32 2D 31 32 34 2E 35 37 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 124.32-124.57)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 35 2E 31 37 2D 31 32 35 2E 33 34 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 125.17-125.34)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 32 2E 36 2D 31 32 35 2E 33 36 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 122.6-125.36: @assert annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 37 2E 32 34 2D 31 32 37 2E 34 39 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 127.24-127.49)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 39 2E 32 35 2D 31 32 39 2E 36 36 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 129.25-129.66)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 39 2E 31 36 2D 31 32 39 2E 36 37 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 129.16-129.67)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 32 39 2E 38 2D 31 32 39 2E 36 38 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 129.8-129.68: @assert annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 33 31 2E 31 36 2D 31 33 31 2E 35 34 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 131.16-131.54)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 33 32 2E 32 32 2D 31 33 32 2E 35 31 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 132.22-132.51)"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 38 2E 32 36 2D 31 30 38 2E 33 37 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 38 2E 34 2D 31 30 38 2E 33 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 108.4-108.38: @ensures annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 33 35 2E 33 34 2D 31 33 35 2E 35 39 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 135.34-135.59)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 33 35 2E 38 2D 31 33 35 2E 36 31 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 135.8-135.61: @assert annotation failed"
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 33 36 2E 31 35 2D 31 33 36 2E 33 32 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 136.15-136.32)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 33 36 2E 38 2D 31 33 36 2E 33 33 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 136.8-136.33: @assert annotation failed"
00  # ""
72 65 61 64 5F 77 6F 72 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 38 2E 32 36 2D 31 30 38 2E 33 37 29 00  # "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 30 38 2E 34 2D 31 30 38 2E 33 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 108.4-108.38: @ensures annotation failed"
72 65 76 5F 6C 69 73 74 5F 74 6F 5F 61 72 72 61 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 37 36 2E 31 33 2D 31 37 36 2E 32 37 29 00  # "rev_list_to_array (/tmp/tmp.s2zpkBvenI/readfile.c0: 176.13-176.27)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 38 31 2E 38 2D 31 38 31 2E 32 36 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 181.8-181.26: @assert annotation failed"
72 65 76 5F 6C 69 73 74 5F 74 6F 5F 61 72 72 61 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 37 34 2E 33 32 2D 31 37 34 2E 34 36 29 00  # "rev_list_to_array (/tmp/tmp.s2zpkBvenI/readfile.c0: 174.32-174.46)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 37 34 2E 34 2D 31 37 34 2E 34 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 174.4-174.47: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 31 39 37 2E 36 2D 31 39 37 2E 33 38 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 197.6-197.38: @assert annotation failed"
69 73 5F 73 74 72 69 6E 67 5F 62 75 6E 64 6C 65 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 30 33 2E 31 30 2D 32 30 33 2E 35 37 29 00  # "is_string_bundle (/tmp/tmp.s2zpkBvenI/readfile.c0: 203.10-203.57)"
73 74 72 69 6E 67 5F 62 75 6E 64 6C 65 5F 61 72 72 61 79 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 30 37 2E 31 33 2D 32 30 37 2E 33 33 29 00  # "string_bundle_array (/tmp/tmp.s2zpkBvenI/readfile.c0: 207.13-207.33)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 30 37 2E 34 2D 32 30 37 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 207.4-207.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 62 75 6E 64 6C 65 5F 6C 65 6E 67 74 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 31 33 2E 31 33 2D 32 31 33 2E 33 33 29 00  # "string_bundle_length (/tmp/tmp.s2zpkBvenI/readfile.c0: 213.13-213.33)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 31 33 2E 34 2D 32 31 33 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 213.4-213.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 32 32 2E 31 37 2D 32 32 32 2E 33 37 29 00  # "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 222.17-222.37)"
43 61 6E 6E 6F 74 20 6F 70 65 6E 20 66 69 6C 65 20 27 00  # "Cannot open file \'"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 32 34 2E 32 33 2D 32 32 34 2E 36 36 29 00  # "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 224.23-224.66)"
27 00  # "\'"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 32 34 2E 31 31 2D 32 32 34 2E 37 32 29 00  # "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 224.11-224.72)"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 32 38 2E 31 34 2D 32 32 38 2E 32 36 29 00  # "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 228.14-228.26)"
00  # ""
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 33 33 2E 31 31 2D 32 33 33 2E 33 30 29 00  # "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 233.11-233.30)"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 33 34 2E 39 2D 32 33 34 2E 32 34 29 00  # "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 234.9-234.24)"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 33 35 2E 39 2D 32 33 35 2E 32 31 29 00  # "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 235.9-235.21)"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 33 37 2E 31 38 2D 32 33 37 2E 32 37 29 00  # "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 237.18-237.27)"
54 6F 6F 20 6D 61 6E 79 20 77 6F 72 64 73 20 69 6E 20 69 6E 70 75 74 20 66 69 6C 65 00  # "Too many words in input file"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 34 36 2E 31 36 2D 32 34 36 2E 33 36 29 00  # "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 246.16-246.36)"
72 65 61 64 5F 77 6F 72 64 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 32 30 2E 31 32 2D 32 32 30 2E 33 37 29 00  # "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 220.12-220.37)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 32 30 2E 34 2D 32 32 30 2E 33 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 220.4-220.38: @ensures annotation failed"
73 74 72 69 6E 67 5F 62 75 6E 64 6C 65 5F 61 72 72 61 79 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 36 38 2E 31 2D 32 36 39 2E 36 33 29 00  # "string_bundle_array__1 (/tmp/tmp.s2zpkBvenI/readfile.c0: 268.1-269.63)"
73 74 72 69 6E 67 5F 62 75 6E 64 6C 65 5F 61 72 72 61 79 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 36 39 2E 33 32 2D 32 36 39 2E 35 36 29 00  # "string_bundle_array__1 (/tmp/tmp.s2zpkBvenI/readfile.c0: 269.32-269.56)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 72 65 61 64 66 69 6C 65 2E 63 30 3A 20 32 36 39 2E 34 2D 32 36 39 2E 35 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/readfile.c0: 269.4-269.57: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 2E 34 2D 31 33 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 13.4-13.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 2E 36 2D 31 36 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 16.6-16.40: @loop_invariant annotation failed"
73 74 72 69 6E 67 5F 69 73 5F 69 6E 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 38 2E 39 2D 31 38 2E 33 30 29 00  # "string_is_in (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 18.9-18.30)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 34 2E 34 2D 32 34 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 24.4-24.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 37 2E 36 2D 32 37 2E 32 39 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 27.6-27.29: @loop_invariant annotation failed"
73 74 72 69 6E 67 5F 69 73 5F 73 6F 72 74 65 64 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 39 2E 31 31 2D 32 39 2E 33 39 29 00  # "string_is_sorted (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 29.11-29.39)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 33 35 2E 34 2D 33 35 2E 33 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 35.4-35.38: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 33 36 2E 34 2D 33 36 2E 33 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 36.4-36.38: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 34 34 2E 34 2D 34 34 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 44.4-44.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 34 37 2E 36 2D 34 37 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 47.6-47.40: @loop_invariant annotation failed"
73 74 72 69 6E 67 5F 67 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 34 39 2E 31 31 2D 34 39 2E 33 34 29 00  # "string_gt_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 49.11-49.34)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 35 35 2E 34 2D 35 35 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 55.4-55.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 35 38 2E 36 2D 35 38 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 58.6-58.40: @loop_invariant annotation failed"
73 74 72 69 6E 67 5F 67 65 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 36 30 2E 31 31 2D 36 30 2E 33 34 29 00  # "string_ge_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 60.11-60.34)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 36 36 2E 34 2D 36 36 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 66.4-66.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 36 39 2E 36 2D 36 39 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 69.6-69.40: @loop_invariant annotation failed"
73 74 72 69 6E 67 5F 6C 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 37 31 2E 31 31 2D 37 31 2E 33 34 29 00  # "string_lt_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 71.11-71.34)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 37 37 2E 34 2D 37 37 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 77.4-77.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 38 30 2E 36 2D 38 30 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 80.6-80.40: @loop_invariant annotation failed"
73 74 72 69 6E 67 5F 6C 65 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 38 32 2E 31 31 2D 38 32 2E 33 34 29 00  # "string_le_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 82.11-82.34)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 38 39 2E 34 2D 38 39 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 89.4-89.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 39 30 2E 34 2D 39 30 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 90.4-90.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 39 33 2E 38 2D 39 33 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 93.8-93.46: @loop_invariant annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 39 35 2E 31 30 2D 39 35 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 95.10-95.48: @loop_invariant annotation failed"
73 74 72 69 6E 67 5F 67 74 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 39 36 2E 31 33 2D 39 36 2E 33 39 29 00  # "string_gt_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 96.13-96.39)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 32 2E 34 2D 31 30 32 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 102.4-102.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 33 2E 34 2D 31 30 33 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 103.4-103.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 36 2E 38 2D 31 30 36 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 106.8-106.46: @loop_invariant annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 38 2E 31 30 2D 31 30 38 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 108.10-108.48: @loop_invariant annotation failed"
73 74 72 69 6E 67 5F 67 65 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 30 39 2E 31 33 2D 31 30 39 2E 33 39 29 00  # "string_ge_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 109.13-109.39)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 31 35 2E 34 2D 31 31 35 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 115.4-115.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 31 36 2E 34 2D 31 31 36 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 116.4-116.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 31 39 2E 38 2D 31 31 39 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 119.8-119.46: @loop_invariant annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 32 31 2E 31 30 2D 31 32 31 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 121.10-121.48: @loop_invariant annotation failed"
73 74 72 69 6E 67 5F 6C 74 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 32 32 2E 31 33 2D 31 32 32 2E 33 39 29 00  # "string_lt_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 122.13-122.39)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 32 38 2E 34 2D 31 32 38 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 128.4-128.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 32 39 2E 34 2D 31 32 39 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 129.4-129.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 32 2E 38 2D 31 33 32 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 132.8-132.46: @loop_invariant annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 34 2E 31 30 2D 31 33 34 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 134.10-134.48: @loop_invariant annotation failed"
73 74 72 69 6E 67 5F 6C 65 5F 73 65 67 73 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 33 35 2E 31 33 2D 31 33 35 2E 33 39 29 00  # "string_le_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 135.13-135.39)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 30 2E 34 2D 31 34 30 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 140.4-140.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
61 72 72 61 79 5B 00  # "array["
73 74 72 69 6E 67 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 32 2E 33 2D 31 34 32 2E 33 37 29 00  # "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)"
73 74 72 69 6E 67 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 32 2E 33 2D 31 34 32 2E 33 37 29 00  # "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)"
2C 00  # ","
73 74 72 69 6E 67 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 32 2E 33 2D 31 34 32 2E 33 37 29 00  # "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)"
73 74 72 69 6E 67 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 32 2E 33 2D 31 34 32 2E 33 37 29 00  # "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)"
29 20 3D 20 5B 00  # ") = ["
73 74 72 69 6E 67 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 32 2E 33 2D 31 34 32 2E 33 37 29 00  # "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 34 2E 36 2D 31 34 34 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 144.6-144.40: @loop_invariant annotation failed"
00  # ""
73 74 72 69 6E 67 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 36 2E 35 2D 31 34 36 2E 32 33 29 00  # "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 146.5-146.23)"
73 74 72 69 6E 67 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 36 2E 35 2D 31 34 36 2E 32 33 29 00  # "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 146.5-146.23)"
00  # ""
73 74 72 69 6E 67 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 36 2E 35 2D 31 34 36 2E 32 33 29 00  # "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 146.5-146.23)"
2C 20 00  # ", "
73 74 72 69 6E 67 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 37 2E 32 30 2D 31 34 37 2E 33 32 29 00  # "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 147.20-147.32)"
5D 00  # "]"
73 74 72 69 6E 67 5F 70 72 69 6E 74 5F 73 65 67 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 34 39 2E 33 2D 31 34 39 2E 31 34 29 00  # "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 149.3-149.14)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 30 2E 34 2D 31 36 30 2E 35 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 160.4-160.54: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 69 73 5F 69 6E 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 35 39 2E 31 2D 31 36 30 2E 36 30 29 00  # "string_is_in__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 159.1-160.60)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 34 2E 34 2D 31 36 34 2E 35 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 164.4-164.54: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 69 73 5F 73 6F 72 74 65 64 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 33 2E 31 2D 31 36 34 2E 36 30 29 00  # "string_is_sorted__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 163.1-164.60)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 38 2E 34 2D 31 36 38 2E 36 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 168.4-168.66: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 73 77 61 70 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 36 37 2E 31 2D 31 36 38 2E 37 32 29 00  # "string_swap__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 167.1-168.72)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 37 33 2E 34 2D 31 37 33 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 173.4-173.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 67 74 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 37 32 2E 31 2D 31 37 33 2E 35 39 29 00  # "string_gt_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 172.1-173.59)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 37 37 2E 34 2D 31 37 37 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 177.4-177.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 67 65 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 37 36 2E 31 2D 31 37 37 2E 35 39 29 00  # "string_ge_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 176.1-177.59)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 38 31 2E 34 2D 31 38 31 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 181.4-181.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 6C 74 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 38 30 2E 31 2D 31 38 31 2E 35 39 29 00  # "string_lt_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 180.1-181.59)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 38 35 2E 34 2D 31 38 35 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 185.4-185.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 6C 65 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 38 34 2E 31 2D 31 38 35 2E 35 39 29 00  # "string_le_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 184.1-185.59)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 39 31 2E 34 2D 31 39 31 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 191.4-191.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 39 32 2E 34 2D 31 39 32 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 192.4-192.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 67 74 5F 73 65 67 73 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 38 39 2E 31 2D 31 39 32 2E 36 33 29 00  # "string_gt_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 189.1-192.63)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 39 37 2E 34 2D 31 39 37 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 197.4-197.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 39 38 2E 34 2D 31 39 38 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 198.4-198.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 67 65 5F 73 65 67 73 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 31 39 35 2E 31 2D 31 39 38 2E 36 33 29 00  # "string_ge_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 195.1-198.63)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 30 33 2E 34 2D 32 30 33 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 203.4-203.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 30 34 2E 34 2D 32 30 34 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 204.4-204.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 6C 74 5F 73 65 67 73 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 30 31 2E 31 2D 32 30 34 2E 36 33 29 00  # "string_lt_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 201.1-204.63)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 30 39 2E 34 2D 32 30 39 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 209.4-209.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 31 30 2E 34 2D 32 31 30 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 210.4-210.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 6C 65 5F 73 65 67 73 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 30 37 2E 31 2D 32 31 30 2E 36 33 29 00  # "string_le_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 207.1-210.63)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 31 34 2E 34 2D 32 31 34 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 214.4-214.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 70 72 69 6E 74 5F 73 65 67 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 5F 61 72 72 61 79 75 74 69 6C 2E 63 30 3A 20 32 31 33 2E 31 2D 32 31 34 2E 35 39 29 00  # "string_print_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 213.1-214.59)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 31 32 2E 34 2D 31 32 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 12.4-12.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 6E 73 65 61 72 63 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 31 33 2E 31 33 2D 31 33 2E 33 38 29 00  # "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 13.13-13.38)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 31 33 2E 34 2D 31 33 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 13.4-13.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 31 39 2E 38 2D 31 39 2E 34 30 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 19.8-19.40: @loop_invariant annotation failed"
6C 69 6E 73 65 61 72 63 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 32 30 2E 32 33 2D 32 30 2E 34 38 29 00  # "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 20.23-20.48)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 32 30 2E 38 2D 32 30 2E 34 39 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 20.8-20.49: @loop_invariant annotation failed"
6C 69 6E 73 65 61 72 63 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 32 32 2E 31 37 2D 32 32 2E 34 30 29 00  # "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 22.17-22.40)"
6C 69 6E 73 65 61 72 63 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 31 34 2E 33 31 2D 31 34 2E 35 35 29 00  # "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)"
6C 69 6E 73 65 61 72 63 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 31 36 2E 31 36 2D 31 36 2E 34 33 29 00  # "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 16.16-16.43)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 31 34 2E 34 2D 31 36 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.4-16.45: @ensures annotation failed"
6C 69 6E 73 65 61 72 63 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 32 36 2E 31 39 2D 32 36 2E 34 32 29 00  # "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 26.19-26.42)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 32 36 2E 31 32 2D 32 36 2E 34 37 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 26.12-26.47: @assert annotation failed"
6C 69 6E 73 65 61 72 63 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 31 34 2E 33 31 2D 31 34 2E 35 35 29 00  # "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)"
6C 69 6E 73 65 61 72 63 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 31 36 2E 31 36 2D 31 36 2E 34 33 29 00  # "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 16.16-16.43)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 31 34 2E 34 2D 31 36 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.4-16.45: @ensures annotation failed"
6C 69 6E 73 65 61 72 63 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 32 39 2E 31 37 2D 32 39 2E 34 30 29 00  # "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 29.17-29.40)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 32 39 2E 31 30 2D 32 39 2E 34 35 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 29.10-29.45: @assert annotation failed"
6C 69 6E 73 65 61 72 63 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 31 34 2E 33 31 2D 31 34 2E 35 35 29 00  # "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)"
6C 69 6E 73 65 61 72 63 68 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 31 36 2E 31 36 2D 31 36 2E 34 33 29 00  # "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 16.16-16.43)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 31 34 2E 34 2D 31 36 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.4-16.45: @ensures annotation failed"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 34 31 2E 34 2D 34 31 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 41.4-41.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 6E 73 65 61 72 63 68 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 34 32 2E 31 33 2D 34 32 2E 33 38 29 00  # "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 42.13-42.38)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 34 32 2E 34 2D 34 32 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 42.4-42.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 6E 73 65 61 72 63 68 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 34 30 2E 31 2D 34 35 2E 35 31 29 00  # "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 40.1-45.51)"
6C 69 6E 73 65 61 72 63 68 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 34 33 2E 33 31 2D 34 33 2E 35 35 29 00  # "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 43.31-43.55)"
6C 69 6E 73 65 61 72 63 68 5F 5F 31 20 28 2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 34 35 2E 31 36 2D 34 35 2E 34 33 29 00  # "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 45.16-45.43)"
2F 74 6D 70 2F 74 6D 70 2E 73 32 7A 70 6B 42 76 65 6E 49 2F 73 74 72 69 6E 67 73 65 61 72 63 68 2E 63 30 3A 20 34 33 2E 34 2D 34 35 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 43.4-45.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 61 72 73 65 5F 74 6F 6B 65 6E 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 33 2E 33 34 2D 32 33 2E 34 37 29 00  # "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0: 23.6-23.48: @ensures annotation failed"
70 61 72 73 65 5F 69 6E 74 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 37 2E 31 35 2D 32 37 2E 33 34 29 00  # "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 37 2E 36 2D 32 37 2E 33 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 61 72 73 65 5F 69 6E 74 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 38 2E 33 34 2D 32 38 2E 34 37 29 00  # "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 38 2E 36 2D 32 38 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0: 28.6-28.48: @ensures annotation failed"
00  # ""
70 72 69 6E 74 54 65 6D 70 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 30 2E 35 2D 31 30 2E 34 31 29 00  # "printTemp (doslingos.c0: 10.5-10.41)"
70 72 69 6E 74 54 65 6D 70 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 30 2E 35 2D 31 30 2E 34 31 29 00  # "printTemp (doslingos.c0: 10.5-10.41)"
20 00  # " "
70 72 69 6E 74 54 65 6D 70 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 30 2E 35 2D 31 30 2E 34 31 29 00  # "printTemp (doslingos.c0: 10.5-10.41)"
70 72 69 6E 74 54 65 6D 70 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 30 2E 35 2D 31 30 2E 34 31 29 00  # "printTemp (doslingos.c0: 10.5-10.41)"
0A 00  # "\n"
70 72 69 6E 74 54 65 6D 70 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 30 2E 35 2D 31 30 2E 34 31 29 00  # "printTemp (doslingos.c0: 10.5-10.41)"
70 72 69 6E 74 20 64 6F 6E 65 21 0A 0A 00  # "print done!\n\n"
70 72 69 6E 74 54 65 6D 70 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 32 2E 33 2D 31 32 2E 32 38 29 00  # "printTemp (doslingos.c0: 12.3-12.28)"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 38 2E 34 2D 31 38 2E 34 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos.c0: 18.4-18.45: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 39 2E 34 2D 32 30 2E 34 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos.c0: 19.4-20.47: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 33 32 2E 38 2D 33 32 2E 34 32 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "doslingos.c0: 32.8-32.42: @loop_invariant annotation failed"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 33 33 2E 38 2D 33 33 2E 34 39 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "doslingos.c0: 33.8-33.49: @loop_invariant annotation failed"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 33 34 2E 38 2D 33 34 2E 34 39 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "doslingos.c0: 34.8-34.49: @loop_invariant annotation failed"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 35 34 2E 38 2D 35 34 2E 34 31 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "doslingos.c0: 54.8-54.41: @assert annotation failed"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 38 34 2E 34 2D 38 34 2E 34 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos.c0: 84.4-84.45: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 38 35 2E 34 2D 38 35 2E 35 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos.c0: 85.4-85.57: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6D 65 72 67 65 73 6F 72 74 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 39 30 2E 35 2D 39 30 2E 34 34 29 00  # "mergesort (doslingos.c0: 90.5-90.44)"
6D 65 72 67 65 73 6F 72 74 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 39 31 2E 35 2D 39 31 2E 34 34 29 00  # "mergesort (doslingos.c0: 91.5-91.44)"
6D 65 72 67 65 73 6F 72 74 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 39 33 2E 35 2D 39 33 2E 33 36 29 00  # "mergesort (doslingos.c0: 93.5-93.36)"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 39 38 2E 34 2D 39 38 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos.c0: 98.4-98.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
62 69 6E 73 65 61 72 63 68 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 39 39 2E 31 33 2D 39 39 2E 33 38 29 00  # "binsearch (doslingos.c0: 99.13-99.38)"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 39 39 2E 34 2D 39 39 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos.c0: 99.4-99.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 31 31 2E 38 2D 31 31 31 2E 35 34 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "doslingos.c0: 111.8-111.54: @loop_invariant annotation failed"
62 69 6E 73 65 61 72 63 68 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 31 33 2E 31 32 2D 31 31 33 2E 33 35 29 00  # "binsearch (doslingos.c0: 113.12-113.35)"
62 69 6E 73 65 61 72 63 68 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 30 30 2E 33 31 2D 31 30 30 2E 35 35 29 00  # "binsearch (doslingos.c0: 100.31-100.55)"
62 69 6E 73 65 61 72 63 68 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 30 32 2E 31 36 2D 31 30 32 2E 34 33 29 00  # "binsearch (doslingos.c0: 102.16-102.43)"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 30 30 2E 34 2D 31 30 32 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "doslingos.c0: 100.4-102.45: @ensures annotation failed"
62 69 6E 73 65 61 72 63 68 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 31 36 2E 31 36 2D 31 31 36 2E 34 31 29 00  # "binsearch (doslingos.c0: 116.16-116.41)"
62 69 6E 73 65 61 72 63 68 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 30 30 2E 33 31 2D 31 30 30 2E 35 35 29 00  # "binsearch (doslingos.c0: 100.31-100.55)"
62 69 6E 73 65 61 72 63 68 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 30 32 2E 31 36 2D 31 30 32 2E 34 33 29 00  # "binsearch (doslingos.c0: 102.16-102.43)"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 30 30 2E 34 2D 31 30 32 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "doslingos.c0: 100.4-102.45: @ensures annotation failed"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 32 35 2E 34 2D 31 32 35 2E 35 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos.c0: 125.4-125.53: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
00  # ""
00  # ""
6E 6F 5F 64 75 70 65 73 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 33 35 2E 31 36 2D 31 33 35 2E 34 35 29 00  # "no_dupes (doslingos.c0: 135.16-135.45)"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 34 35 2E 34 2D 31 34 35 2E 35 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos.c0: 145.4-145.55: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 6F 75 6E 74 5F 76 6F 63 61 62 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 34 36 2E 31 33 2D 31 34 36 2E 34 32 29 00  # "count_vocab (doslingos.c0: 146.13-146.42)"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 34 36 2E 34 2D 31 34 36 2E 34 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos.c0: 146.4-146.43: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 6F 75 6E 74 5F 76 6F 63 61 62 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 34 37 2E 31 33 2D 31 34 37 2E 33 34 29 00  # "count_vocab (doslingos.c0: 147.13-147.34)"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 34 37 2E 34 2D 31 34 37 2E 33 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos.c0: 147.4-147.35: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 6F 75 6E 74 5F 76 6F 63 61 62 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 35 34 2E 32 32 2D 31 35 34 2E 34 30 29 00  # "count_vocab (doslingos.c0: 154.22-154.40)"
63 6F 75 6E 74 5F 76 6F 63 61 62 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 35 35 2E 31 38 2D 31 35 35 2E 34 35 29 00  # "count_vocab (doslingos.c0: 155.18-155.45)"
63 6F 75 6E 74 5F 76 6F 63 61 62 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 35 36 2E 32 38 2D 31 35 36 2E 35 34 29 00  # "count_vocab (doslingos.c0: 156.28-156.54)"
63 6F 75 6E 74 5F 76 6F 63 61 62 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 36 33 2E 32 39 2D 31 36 33 2E 35 37 29 00  # "count_vocab (doslingos.c0: 163.29-163.57)"
63 6F 75 6E 74 5F 76 6F 63 61 62 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 36 34 2E 32 35 2D 31 36 34 2E 35 33 29 00  # "count_vocab (doslingos.c0: 164.25-164.53)"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 37 36 2E 34 2D 31 37 36 2E 35 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos.c0: 176.4-176.55: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 6F 72 74 5F 62 79 5F 66 72 65 71 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 38 31 2E 35 2D 31 38 31 2E 33 36 29 00  # "sort_by_freq (doslingos.c0: 181.5-181.36)"
73 6F 72 74 5F 62 79 5F 66 72 65 71 20 28 64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 37 37 2E 31 32 2D 31 37 37 2E 33 37 29 00  # "sort_by_freq (doslingos.c0: 177.12-177.37)"
64 6F 73 6C 69 6E 67 6F 73 2E 63 30 3A 20 31 37 37 2E 34 2D 31 37 37 2E 33 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "doslingos.c0: 177.4-177.38: @ensures annotation failed"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 30 2E 34 2D 31 30 2E 33 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos-test.c0: 10.4-10.37: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
00  # ""
70 72 69 6E 74 46 72 65 71 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 34 2E 35 2D 31 34 2E 34 31 29 00  # "printFreq (doslingos-test.c0: 14.5-14.41)"
70 72 69 6E 74 46 72 65 71 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 34 2E 35 2D 31 34 2E 34 31 29 00  # "printFreq (doslingos-test.c0: 14.5-14.41)"
20 00  # " "
70 72 69 6E 74 46 72 65 71 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 34 2E 35 2D 31 34 2E 34 31 29 00  # "printFreq (doslingos-test.c0: 14.5-14.41)"
70 72 69 6E 74 46 72 65 71 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 34 2E 35 2D 31 34 2E 34 31 29 00  # "printFreq (doslingos-test.c0: 14.5-14.41)"
0A 00  # "\n"
70 72 69 6E 74 46 72 65 71 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 34 2E 35 2D 31 34 2E 34 31 29 00  # "printFreq (doslingos-test.c0: 14.5-14.41)"
70 72 69 6E 74 20 64 6F 6E 65 21 0A 0A 00  # "print done!\n\n"
70 72 69 6E 74 46 72 65 71 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 36 2E 33 2D 31 36 2E 32 38 29 00  # "printFreq (doslingos-test.c0: 16.3-16.28)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 32 30 2E 34 2D 32 30 2E 36 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos-test.c0: 20.4-20.68: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 32 31 2E 34 2D 32 31 2E 34 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos-test.c0: 21.4-21.46: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 32 32 2E 34 2D 32 32 2E 34 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "doslingos-test.c0: 22.4-22.47: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
65 71 75 61 6C 5F 61 72 72 61 79 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 32 36 2E 39 2D 32 36 2E 34 32 29 00  # "equal_array (doslingos-test.c0: 26.9-26.42)"
28 70 72 6F 67 72 61 6D 20 73 74 61 72 74 29 00  # "(program start)"
61 20 63 68 75 63 6B 20 63 6F 75 6C 64 20 77 6F 6F 64 20 77 6F 6F 64 63 68 75 63 6B 00  # "a chuck could wood woodchuck"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 33 34 2E 32 31 2D 33 34 2E 36 35 29 00  # "main (doslingos-test.c0: 34.21-34.65)"
61 20 62 20 63 20 64 20 65 00  # "a b c d e"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 33 35 2E 32 31 2D 33 35 2E 34 36 29 00  # "main (doslingos-test.c0: 35.21-35.46)"
61 73 20 68 6F 77 20 68 6F 77 65 76 65 72 20 69 66 20 77 6F 75 6C 64 63 68 75 63 6B 00  # "as how however if wouldchuck"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 33 36 2E 32 31 2D 33 36 2E 36 35 29 00  # "main (doslingos-test.c0: 36.21-36.65)"
61 78 6C 65 20 62 75 72 72 6F 77 20 66 61 69 6C 20 68 69 73 20 6A 61 6D 20 6F 75 74 00  # "axle burrow fail his jam out"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 33 37 2E 32 31 2D 33 37 2E 36 35 29 00  # "main (doslingos-test.c0: 37.21-37.65)"
62 75 72 72 6F 77 20 68 69 73 20 69 73 20 6F 66 20 6F 75 74 20 70 68 69 6C 00  # "burrow his is of out phil"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 33 39 2E 32 31 2D 33 39 2E 36 32 29 00  # "main (doslingos-test.c0: 39.21-39.62)"
74 65 78 74 73 2F 73 6D 61 6C 6C 5F 76 6F 63 61 62 2E 74 78 74 00  # "texts/small_vocab.txt"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 34 38 2E 32 30 2D 34 38 2E 35 35 29 00  # "main (doslingos-test.c0: 48.20-48.55)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 34 39 2E 31 36 2D 34 39 2E 34 33 29 00  # "main (doslingos-test.c0: 49.16-49.43)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 35 30 2E 32 31 2D 35 30 2E 34 37 29 00  # "main (doslingos-test.c0: 50.21-50.47)"
74 65 78 74 73 2F 73 6D 61 6C 6C 5F 76 6F 63 61 62 2E 74 78 74 00  # "texts/small_vocab.txt"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 35 33 2E 32 31 2D 35 33 2E 35 36 29 00  # "main (doslingos-test.c0: 53.21-53.56)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 35 34 2E 31 37 2D 35 34 2E 34 35 29 00  # "main (doslingos-test.c0: 54.17-54.45)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 35 35 2E 32 31 2D 35 35 2E 34 38 29 00  # "main (doslingos-test.c0: 55.21-55.48)"
74 65 78 74 73 2F 77 6F 6F 64 63 68 75 63 6B 2E 74 78 74 00  # "texts/woodchuck.txt"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 35 39 2E 31 30 2D 35 39 2E 36 38 29 00  # "main (doslingos-test.c0: 59.10-59.68)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 35 39 2E 33 2D 35 39 2E 37 33 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 59.3-59.73: assert failed"
34 20 34 20 34 20 34 20 34 00  # "4 4 4 4 4"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 36 30 2E 31 39 2D 36 30 2E 34 36 29 00  # "main (doslingos-test.c0: 60.19-60.46)"
61 20 63 68 75 63 6B 20 63 6F 75 6C 64 20 77 6F 6F 64 20 77 6F 6F 64 63 68 75 63 6B 00  # "a chuck could wood woodchuck"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 36 31 2E 32 32 2D 36 31 2E 36 36 29 00  # "main (doslingos-test.c0: 61.22-61.66)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 36 32 2E 31 30 2D 36 32 2E 35 37 29 00  # "main (doslingos-test.c0: 62.10-62.57)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 36 32 2E 33 2D 36 32 2E 35 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 62.3-62.59: assert failed"
74 65 78 74 73 2F 77 6F 6F 64 63 68 75 63 6B 2E 74 78 74 00  # "texts/woodchuck.txt"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 36 34 2E 31 30 2D 36 34 2E 36 38 29 00  # "main (doslingos-test.c0: 64.10-64.68)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 36 34 2E 33 2D 36 34 2E 37 34 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 64.3-64.74: assert failed"
34 20 30 20 30 20 30 20 30 00  # "4 0 0 0 0"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 36 35 2E 31 39 2D 36 35 2E 34 36 29 00  # "main (doslingos-test.c0: 65.19-65.46)"
61 20 62 20 63 20 64 20 65 00  # "a b c d e"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 36 36 2E 32 32 2D 36 36 2E 34 37 29 00  # "main (doslingos-test.c0: 66.22-66.47)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 36 37 2E 31 30 2D 36 37 2E 35 37 29 00  # "main (doslingos-test.c0: 67.10-67.57)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 36 37 2E 33 2D 36 37 2E 35 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 67.3-67.59: assert failed"
74 65 78 74 73 2F 77 6F 6F 64 63 68 75 63 6B 2E 74 78 74 00  # "texts/woodchuck.txt"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 36 39 2E 31 30 2D 36 39 2E 36 38 29 00  # "main (doslingos-test.c0: 69.10-69.68)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 36 39 2E 33 2D 36 39 2E 37 34 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 69.3-69.74: assert failed"
32 20 31 20 30 20 32 20 30 00  # "2 1 0 2 0"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 37 30 2E 31 39 2D 37 30 2E 34 36 29 00  # "main (doslingos-test.c0: 70.19-70.46)"
61 73 20 68 6F 77 20 68 6F 77 65 76 65 72 20 69 66 20 77 6F 75 6C 64 63 68 75 63 6B 00  # "as how however if wouldchuck"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 37 31 2E 32 32 2D 37 31 2E 36 36 29 00  # "main (doslingos-test.c0: 71.22-71.66)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 37 32 2E 31 30 2D 37 32 2E 35 37 29 00  # "main (doslingos-test.c0: 72.10-72.57)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 37 32 2E 33 2D 37 32 2E 35 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 72.3-72.59: assert failed"
74 65 78 74 73 2F 73 63 6F 74 74 5F 74 77 65 65 74 2E 74 78 74 00  # "texts/scott_tweet.txt"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 37 34 2E 31 30 2D 37 34 2E 37 30 29 00  # "main (doslingos-test.c0: 74.10-74.70)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 37 34 2E 33 2D 37 34 2E 37 37 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 74.3-74.77: assert failed"
30 20 31 20 30 20 31 20 30 20 31 00  # "0 1 0 1 0 1"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 37 35 2E 31 39 2D 37 35 2E 34 38 29 00  # "main (doslingos-test.c0: 75.19-75.48)"
61 78 6C 65 20 62 75 72 72 6F 77 20 66 61 69 6C 20 68 69 73 20 6A 61 6D 20 6F 75 74 00  # "axle burrow fail his jam out"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 37 36 2E 32 32 2D 37 36 2E 36 36 29 00  # "main (doslingos-test.c0: 76.22-76.66)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 37 37 2E 31 30 2D 37 37 2E 35 37 29 00  # "main (doslingos-test.c0: 77.10-77.57)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 37 37 2E 33 2D 37 37 2E 35 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 77.3-77.59: assert failed"
74 65 78 74 73 2F 73 63 6F 74 74 5F 74 77 65 65 74 2E 74 78 74 00  # "texts/scott_tweet.txt"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 37 39 2E 31 30 2D 37 39 2E 37 30 29 00  # "main (doslingos-test.c0: 79.10-79.70)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 37 39 2E 33 2D 37 39 2E 37 37 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 79.3-79.77: assert failed"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 38 32 2E 31 30 2D 38 32 2E 35 37 29 00  # "main (doslingos-test.c0: 82.10-82.57)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 38 32 2E 33 2D 38 32 2E 35 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 82.3-82.59: assert failed"
74 65 78 74 73 2F 73 63 6F 74 74 5F 74 77 65 65 74 2E 74 78 74 00  # "texts/scott_tweet.txt"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 38 34 2E 31 30 2D 38 34 2E 37 30 29 00  # "main (doslingos-test.c0: 84.10-84.70)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 38 34 2E 33 2D 38 34 2E 37 37 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 84.3-84.77: assert failed"
31 20 31 20 31 20 31 20 31 20 31 00  # "1 1 1 1 1 1"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 38 35 2E 31 39 2D 38 35 2E 34 38 29 00  # "main (doslingos-test.c0: 85.19-85.48)"
62 75 72 72 6F 77 20 68 69 73 20 69 73 20 6F 66 20 6F 75 74 20 70 68 69 6C 00  # "burrow his is of out phil"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 38 36 2E 32 32 2D 38 36 2E 36 33 29 00  # "main (doslingos-test.c0: 86.22-86.63)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 38 37 2E 31 30 2D 38 37 2E 35 37 29 00  # "main (doslingos-test.c0: 87.10-87.57)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 38 37 2E 33 2D 38 37 2E 35 39 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 87.3-87.59: assert failed"
74 65 78 74 73 2F 73 6F 6E 6E 65 74 73 2E 74 78 74 00  # "texts/sonnets.txt"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 38 39 2E 33 2D 38 39 2E 36 34 29 00  # "main (doslingos-test.c0: 89.3-89.64)"
74 65 78 74 73 2F 73 68 61 6B 65 73 70 65 61 72 65 2E 74 78 74 00  # "texts/shakespeare.txt"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 39 32 2E 33 2D 39 32 2E 36 39 29 00  # "main (doslingos-test.c0: 92.3-92.69)"
2D 2D 2D 2D 2D 53 4D 41 4C 4C 20 54 45 58 54 20 54 45 53 54 20 52 45 53 55 4C 54 53 2D 2D 2D 2D 2D 0A 00  # "-----SMALL TEXT TEST RESULTS-----\n"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 39 36 2E 33 2D 39 36 2E 34 38 29 00  # "main (doslingos-test.c0: 96.3-96.48)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 39 37 2E 33 2D 39 37 2E 33 33 29 00  # "main (doslingos-test.c0: 97.3-97.33)"
34 20 34 20 34 20 34 20 34 00  # "4 4 4 4 4"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 39 38 2E 32 32 2D 39 38 2E 34 39 29 00  # "main (doslingos-test.c0: 98.22-98.49)"
61 20 63 68 75 63 6B 20 63 6F 75 6C 64 20 77 6F 6F 64 20 77 6F 6F 64 63 68 75 63 6B 00  # "a chuck could wood woodchuck"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 39 39 2E 32 36 2D 39 39 2E 37 30 29 00  # "main (doslingos-test.c0: 99.26-99.70)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 30 30 2E 31 30 2D 31 30 30 2E 36 34 29 00  # "main (doslingos-test.c0: 100.10-100.64)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 30 30 2E 33 2D 31 30 30 2E 36 36 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 100.3-100.66: assert failed"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 30 33 2E 33 2D 31 30 33 2E 33 33 29 00  # "main (doslingos-test.c0: 103.3-103.33)"
30 20 30 20 30 20 30 20 34 00  # "0 0 0 0 4"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 30 34 2E 32 32 2D 31 30 34 2E 34 39 29 00  # "main (doslingos-test.c0: 104.22-104.49)"
62 20 63 20 64 20 65 20 61 00  # "b c d e a"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 30 35 2E 32 36 2D 31 30 35 2E 35 31 29 00  # "main (doslingos-test.c0: 105.26-105.51)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 30 36 2E 31 30 2D 31 30 36 2E 36 34 29 00  # "main (doslingos-test.c0: 106.10-106.64)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 30 36 2E 33 2D 31 30 36 2E 36 36 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 106.3-106.66: assert failed"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 30 39 2E 33 2D 31 30 39 2E 33 33 29 00  # "main (doslingos-test.c0: 109.3-109.33)"
30 20 30 20 31 20 32 20 32 00  # "0 0 1 2 2"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 31 30 2E 32 32 2D 31 31 30 2E 34 39 29 00  # "main (doslingos-test.c0: 110.22-110.49)"
68 6F 77 65 76 65 72 20 77 6F 75 6C 64 63 68 75 63 6B 20 68 6F 77 20 61 73 20 69 66 00  # "however wouldchuck how as if"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 31 31 2E 32 36 2D 31 31 31 2E 37 30 29 00  # "main (doslingos-test.c0: 111.26-111.70)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 31 32 2E 31 30 2D 31 31 32 2E 36 34 29 00  # "main (doslingos-test.c0: 112.10-112.64)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 31 32 2E 33 2D 31 31 32 2E 36 36 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 112.3-112.66: assert failed"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 31 35 2E 33 2D 31 31 35 2E 33 33 29 00  # "main (doslingos-test.c0: 115.3-115.33)"
30 20 30 20 30 20 31 20 31 20 31 00  # "0 0 0 1 1 1"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 31 36 2E 32 32 2D 31 31 36 2E 35 31 29 00  # "main (doslingos-test.c0: 116.22-116.51)"
61 78 6C 65 20 66 61 69 6C 20 6A 61 6D 20 62 75 72 72 6F 77 20 68 69 73 20 6F 75 74 00  # "axle fail jam burrow his out"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 31 37 2E 32 36 2D 31 31 37 2E 37 30 29 00  # "main (doslingos-test.c0: 117.26-117.70)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 31 38 2E 31 30 2D 31 31 38 2E 36 34 29 00  # "main (doslingos-test.c0: 118.10-118.64)"
64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 31 38 2E 33 2D 31 31 38 2E 36 36 3A 20 61 73 73 65 72 74 20 66 61 69 6C 65 64 00  # "doslingos-test.c0: 118.3-118.66: assert failed"
2D 2D 2D 2D 2D 53 4F 4E 4E 45 54 53 20 54 45 58 54 20 54 45 53 54 20 52 45 53 55 4C 54 2D 2D 2D 2D 2D 0A 00  # "-----SONNETS TEXT TEST RESULT-----\n"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 32 31 2E 33 2D 31 32 31 2E 34 39 29 00  # "main (doslingos-test.c0: 121.3-121.49)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 32 32 2E 33 2D 31 32 32 2E 33 38 29 00  # "main (doslingos-test.c0: 122.3-122.38)"
2D 2D 2D 2D 2D 53 48 41 4B 45 53 50 45 41 52 45 20 54 45 58 54 20 54 45 53 54 20 52 45 53 55 4C 54 2D 2D 2D 2D 2D 0A 00  # "-----SHAKESPEARE TEXT TEST RESULT-----\n"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 32 35 2E 33 2D 31 32 35 2E 35 33 29 00  # "main (doslingos-test.c0: 125.3-125.53)"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 32 36 2E 33 2D 31 32 36 2E 33 39 29 00  # "main (doslingos-test.c0: 126.3-126.39)"
41 6C 6C 20 74 65 73 74 73 20 70 61 73 73 65 64 21 0A 00  # "All tests passed!\n"
6D 61 69 6E 20 28 64 6F 73 6C 69 6E 67 6F 73 2D 74 65 73 74 2E 63 30 3A 20 31 33 31 2E 33 2D 31 33 31 2E 33 32 29 00  # "main (doslingos-test.c0: 131.3-131.32)"

00 7D             # function count
# function_pool

#<main>
00                # number of arguments = 0
2A                # number of local variables = 42
03 D5             # code length = 981 bytes
14 78 47 # aldc 30791         # s[30791] = "(program start)"
36 00    # vstore 0           # _caller = "(program start)";
14 78 57 # aldc 30807         # s[30807] = "a chuck could wood woodchuck"
14 78 74 # aldc 30836         # s[30836] = "main (doslingos-test.c0: 34.21-34.65)"
B8 00 72 # invokestatic 114   # parse_tokens__1("a chuck could wood woodchuck", "main (doslingos-test.c0: 34.21-34.65)")
36 02    # vstore 2           # vocab1 = parse_tokens__1("a chuck could wood woodchuck", "main (doslingos-test.c0: 34.21-34.65)");
14 78 9A # aldc 30874         # s[30874] = "a b c d e"
14 78 A4 # aldc 30884         # s[30884] = "main (doslingos-test.c0: 35.21-35.46)"
B8 00 72 # invokestatic 114   # parse_tokens__1("a b c d e", "main (doslingos-test.c0: 35.21-35.46)")
36 03    # vstore 3           # vocab2 = parse_tokens__1("a b c d e", "main (doslingos-test.c0: 35.21-35.46)");
14 78 CA # aldc 30922         # s[30922] = "as how however if wouldchuck"
14 78 E7 # aldc 30951         # s[30951] = "main (doslingos-test.c0: 36.21-36.65)"
B8 00 72 # invokestatic 114   # parse_tokens__1("as how however if wouldchuck", "main (doslingos-test.c0: 36.21-36.65)")
36 04    # vstore 4           # vocab3 = parse_tokens__1("as how however if wouldchuck", "main (doslingos-test.c0: 36.21-36.65)");
14 79 0D # aldc 30989         # s[30989] = "axle burrow fail his jam out"
14 79 2A # aldc 31018         # s[31018] = "main (doslingos-test.c0: 37.21-37.65)"
B8 00 72 # invokestatic 114   # parse_tokens__1("axle burrow fail his jam out", "main (doslingos-test.c0: 37.21-37.65)")
36 05    # vstore 5           # vocab6 = parse_tokens__1("axle burrow fail his jam out", "main (doslingos-test.c0: 37.21-37.65)");
10 00    # bipush 0           # 0
BC 08    # newarray 8         # alloc_array(string, 0)
36 06    # vstore 6           # vocab7 = alloc_array(string, 0);
14 79 50 # aldc 31056         # s[31056] = "burrow his is of out phil"
14 79 6A # aldc 31082         # s[31082] = "main (doslingos-test.c0: 39.21-39.62)"
B8 00 72 # invokestatic 114   # parse_tokens__1("burrow his is of out phil", "main (doslingos-test.c0: 39.21-39.62)")
36 07    # vstore 7           # vocab8 = parse_tokens__1("burrow his is of out phil", "main (doslingos-test.c0: 39.21-39.62)");
10 05    # bipush 5           # 5
BC 04    # newarray 4         # alloc_array(int, 5)
36 08    # vstore 8           # freq1 = alloc_array(int, 5);
10 05    # bipush 5           # 5
BC 04    # newarray 4         # alloc_array(int, 5)
36 09    # vstore 9           # freq2 = alloc_array(int, 5);
10 05    # bipush 5           # 5
BC 04    # newarray 4         # alloc_array(int, 5)
36 0A    # vstore 10          # freq3 = alloc_array(int, 5);
10 06    # bipush 6           # 6
BC 04    # newarray 4         # alloc_array(int, 6)
36 0B    # vstore 11          # freq6 = alloc_array(int, 6);
10 00    # bipush 0           # 0
BC 04    # newarray 4         # alloc_array(int, 0)
36 0C    # vstore 12          # freq7 = alloc_array(int, 0);
10 06    # bipush 6           # 6
BC 04    # newarray 4         # alloc_array(int, 6)
36 0D    # vstore 13          # freq8 = alloc_array(int, 6);
14 79 90 # aldc 31120         # s[31120] = "texts/small_vocab.txt"
14 79 A6 # aldc 31142         # s[31142] = "main (doslingos-test.c0: 48.20-48.55)"
B8 00 52 # invokestatic 82    # read_words("texts/small_vocab.txt", "main (doslingos-test.c0: 48.20-48.55)")
36 0E    # vstore 14          # words = read_words("texts/small_vocab.txt", "main (doslingos-test.c0: 48.20-48.55)");
15 0E    # vload 14           # words
14 79 CC # aldc 31180         # s[31180] = "main (doslingos-test.c0: 49.16-49.43)"
B8 00 51 # invokestatic 81    # string_bundle_length(words, "main (doslingos-test.c0: 49.16-49.43)")
36 0F    # vstore 15          # length = string_bundle_length(words, "main (doslingos-test.c0: 49.16-49.43)");
15 0E    # vload 14           # words
14 79 F2 # aldc 31218         # s[31218] = "main (doslingos-test.c0: 50.21-50.47)"
B8 00 53 # invokestatic 83    # string_bundle_array__1(words, "main (doslingos-test.c0: 50.21-50.47)")
36 10    # vstore 16          # vocab4 = string_bundle_array__1(words, "main (doslingos-test.c0: 50.21-50.47)");
15 0F    # vload 15           # length
BC 04    # newarray 4         # alloc_array(int, length)
36 11    # vstore 17          # freq4 = alloc_array(int, length);
14 7A 18 # aldc 31256         # s[31256] = "texts/small_vocab.txt"
14 7A 2E # aldc 31278         # s[31278] = "main (doslingos-test.c0: 53.21-53.56)"
B8 00 52 # invokestatic 82    # read_words("texts/small_vocab.txt", "main (doslingos-test.c0: 53.21-53.56)")
36 12    # vstore 18          # words2 = read_words("texts/small_vocab.txt", "main (doslingos-test.c0: 53.21-53.56)");
15 12    # vload 18           # words2
14 7A 54 # aldc 31316         # s[31316] = "main (doslingos-test.c0: 54.17-54.45)"
B8 00 51 # invokestatic 81    # string_bundle_length(words2, "main (doslingos-test.c0: 54.17-54.45)")
36 13    # vstore 19          # length2 = string_bundle_length(words2, "main (doslingos-test.c0: 54.17-54.45)");
15 12    # vload 18           # words2
14 7A 7A # aldc 31354         # s[31354] = "main (doslingos-test.c0: 55.21-55.48)"
B8 00 53 # invokestatic 83    # string_bundle_array__1(words2, "main (doslingos-test.c0: 55.21-55.48)")
36 14    # vstore 20          # vocab5 = string_bundle_array__1(words2, "main (doslingos-test.c0: 55.21-55.48)");
15 13    # vload 19           # length2
BC 04    # newarray 4         # alloc_array(int, length2)
36 15    # vstore 21          # freq5 = alloc_array(int, length2);
15 02    # vload 2            # vocab1
15 08    # vload 8            # freq1
10 05    # bipush 5           # 5
14 7A A0 # aldc 31392         # s[31392] = "texts/woodchuck.txt"
10 01    # bipush 1           # true
14 7A B4 # aldc 31412         # s[31412] = "main (doslingos-test.c0: 59.10-59.68)"
B8 00 79 # invokestatic 121   # count_vocab(vocab1, freq1, 5, "texts/woodchuck.txt", true, "main (doslingos-test.c0: 59.10-59.68)")
10 07    # bipush 7           # 7
9F 00 06 # if_cmpeq +6        # if (count_vocab(vocab1, freq1, 5, "texts/woodchuck.txt", true, "main (doslingos-test.c0: 59.10-59.68)") == 7) goto <1404:cond_true>
A7 00 08 # goto +8            # goto <1405:cond_false>
# <1404:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1406:cond_end>
# <1405:cond_false>
10 00    # bipush 0           # false
# <1406:cond_end>
14 7A DA # aldc 31450         # s[31450] = "doslingos-test.c0: 59.3-59.73: assert failed"
CF       # assert             # assert (count_vocab(vocab1, freq1, 5, "texts/woodchuck.txt", true, "main (doslingos-test.c0: 59.10-59.68)") == 7) [failure message on stack]
14 7B 07 # aldc 31495         # s[31495] = "4 4 4 4 4"
10 0A    # bipush 10          # 10
14 7B 11 # aldc 31505         # s[31505] = "main (doslingos-test.c0: 60.19-60.46)"
B8 00 73 # invokestatic 115   # parse_ints__1("4 4 4 4 4", 10, "main (doslingos-test.c0: 60.19-60.46)")
36 16    # vstore 22          # checkF1 = parse_ints__1("4 4 4 4 4", 10, "main (doslingos-test.c0: 60.19-60.46)");
14 7B 37 # aldc 31543         # s[31543] = "a chuck could wood woodchuck"
14 7B 54 # aldc 31572         # s[31572] = "main (doslingos-test.c0: 61.22-61.66)"
B8 00 72 # invokestatic 114   # parse_tokens__1("a chuck could wood woodchuck", "main (doslingos-test.c0: 61.22-61.66)")
36 17    # vstore 23          # checkV1 = parse_tokens__1("a chuck could wood woodchuck", "main (doslingos-test.c0: 61.22-61.66)");
15 02    # vload 2            # vocab1
15 17    # vload 23           # checkV1
15 08    # vload 8            # freq1
15 16    # vload 22           # checkF1
10 05    # bipush 5           # 5
14 7B 7A # aldc 31610         # s[31610] = "main (doslingos-test.c0: 62.10-62.57)"
B8 00 7C # invokestatic 124   # equal_array(vocab1, checkV1, freq1, checkF1, 5, "main (doslingos-test.c0: 62.10-62.57)")
14 7B A0 # aldc 31648         # s[31648] = "doslingos-test.c0: 62.3-62.59: assert failed"
CF       # assert             # assert equal_array(vocab1, checkV1, freq1, checkF1, 5, "main (doslingos-test.c0: 62.10-62.57)") [failure message on stack]
15 03    # vload 3            # vocab2
15 09    # vload 9            # freq2
10 05    # bipush 5           # 5
14 7B CD # aldc 31693         # s[31693] = "texts/woodchuck.txt"
10 01    # bipush 1           # true
14 7B E1 # aldc 31713         # s[31713] = "main (doslingos-test.c0: 64.10-64.68)"
B8 00 79 # invokestatic 121   # count_vocab(vocab2, freq2, 5, "texts/woodchuck.txt", true, "main (doslingos-test.c0: 64.10-64.68)")
10 17    # bipush 23          # 23
9F 00 06 # if_cmpeq +6        # if (count_vocab(vocab2, freq2, 5, "texts/woodchuck.txt", true, "main (doslingos-test.c0: 64.10-64.68)") == 23) goto <1407:cond_true>
A7 00 08 # goto +8            # goto <1408:cond_false>
# <1407:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1409:cond_end>
# <1408:cond_false>
10 00    # bipush 0           # false
# <1409:cond_end>
14 7C 07 # aldc 31751         # s[31751] = "doslingos-test.c0: 64.3-64.74: assert failed"
CF       # assert             # assert (count_vocab(vocab2, freq2, 5, "texts/woodchuck.txt", true, "main (doslingos-test.c0: 64.10-64.68)") == 23) [failure message on stack]
14 7C 34 # aldc 31796         # s[31796] = "4 0 0 0 0"
10 0A    # bipush 10          # 10
14 7C 3E # aldc 31806         # s[31806] = "main (doslingos-test.c0: 65.19-65.46)"
B8 00 73 # invokestatic 115   # parse_ints__1("4 0 0 0 0", 10, "main (doslingos-test.c0: 65.19-65.46)")
36 18    # vstore 24          # checkF2 = parse_ints__1("4 0 0 0 0", 10, "main (doslingos-test.c0: 65.19-65.46)");
14 7C 64 # aldc 31844         # s[31844] = "a b c d e"
14 7C 6E # aldc 31854         # s[31854] = "main (doslingos-test.c0: 66.22-66.47)"
B8 00 72 # invokestatic 114   # parse_tokens__1("a b c d e", "main (doslingos-test.c0: 66.22-66.47)")
36 19    # vstore 25          # checkV2 = parse_tokens__1("a b c d e", "main (doslingos-test.c0: 66.22-66.47)");
15 03    # vload 3            # vocab2
15 19    # vload 25           # checkV2
15 09    # vload 9            # freq2
15 18    # vload 24           # checkF2
10 05    # bipush 5           # 5
14 7C 94 # aldc 31892         # s[31892] = "main (doslingos-test.c0: 67.10-67.57)"
B8 00 7C # invokestatic 124   # equal_array(vocab2, checkV2, freq2, checkF2, 5, "main (doslingos-test.c0: 67.10-67.57)")
14 7C BA # aldc 31930         # s[31930] = "doslingos-test.c0: 67.3-67.59: assert failed"
CF       # assert             # assert equal_array(vocab2, checkV2, freq2, checkF2, 5, "main (doslingos-test.c0: 67.10-67.57)") [failure message on stack]
15 04    # vload 4            # vocab3
15 0A    # vload 10           # freq3
10 05    # bipush 5           # 5
14 7C E7 # aldc 31975         # s[31975] = "texts/woodchuck.txt"
10 01    # bipush 1           # true
14 7C FB # aldc 31995         # s[31995] = "main (doslingos-test.c0: 69.10-69.68)"
B8 00 79 # invokestatic 121   # count_vocab(vocab3, freq3, 5, "texts/woodchuck.txt", true, "main (doslingos-test.c0: 69.10-69.68)")
10 16    # bipush 22          # 22
9F 00 06 # if_cmpeq +6        # if (count_vocab(vocab3, freq3, 5, "texts/woodchuck.txt", true, "main (doslingos-test.c0: 69.10-69.68)") == 22) goto <1410:cond_true>
A7 00 08 # goto +8            # goto <1411:cond_false>
# <1410:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1412:cond_end>
# <1411:cond_false>
10 00    # bipush 0           # false
# <1412:cond_end>
14 7D 21 # aldc 32033         # s[32033] = "doslingos-test.c0: 69.3-69.74: assert failed"
CF       # assert             # assert (count_vocab(vocab3, freq3, 5, "texts/woodchuck.txt", true, "main (doslingos-test.c0: 69.10-69.68)") == 22) [failure message on stack]
14 7D 4E # aldc 32078         # s[32078] = "2 1 0 2 0"
10 0A    # bipush 10          # 10
14 7D 58 # aldc 32088         # s[32088] = "main (doslingos-test.c0: 70.19-70.46)"
B8 00 73 # invokestatic 115   # parse_ints__1("2 1 0 2 0", 10, "main (doslingos-test.c0: 70.19-70.46)")
36 1A    # vstore 26          # checkF3 = parse_ints__1("2 1 0 2 0", 10, "main (doslingos-test.c0: 70.19-70.46)");
14 7D 7E # aldc 32126         # s[32126] = "as how however if wouldchuck"
14 7D 9B # aldc 32155         # s[32155] = "main (doslingos-test.c0: 71.22-71.66)"
B8 00 72 # invokestatic 114   # parse_tokens__1("as how however if wouldchuck", "main (doslingos-test.c0: 71.22-71.66)")
36 1B    # vstore 27          # checkV3 = parse_tokens__1("as how however if wouldchuck", "main (doslingos-test.c0: 71.22-71.66)");
15 04    # vload 4            # vocab3
15 1B    # vload 27           # checkV3
15 0A    # vload 10           # freq3
15 1A    # vload 26           # checkF3
10 05    # bipush 5           # 5
14 7D C1 # aldc 32193         # s[32193] = "main (doslingos-test.c0: 72.10-72.57)"
B8 00 7C # invokestatic 124   # equal_array(vocab3, checkV3, freq3, checkF3, 5, "main (doslingos-test.c0: 72.10-72.57)")
14 7D E7 # aldc 32231         # s[32231] = "doslingos-test.c0: 72.3-72.59: assert failed"
CF       # assert             # assert equal_array(vocab3, checkV3, freq3, checkF3, 5, "main (doslingos-test.c0: 72.10-72.57)") [failure message on stack]
15 05    # vload 5            # vocab6
15 0B    # vload 11           # freq6
10 06    # bipush 6           # 6
14 7E 14 # aldc 32276         # s[32276] = "texts/scott_tweet.txt"
10 01    # bipush 1           # true
14 7E 2A # aldc 32298         # s[32298] = "main (doslingos-test.c0: 74.10-74.70)"
B8 00 79 # invokestatic 121   # count_vocab(vocab6, freq6, 6, "texts/scott_tweet.txt", true, "main (doslingos-test.c0: 74.10-74.70)")
10 03    # bipush 3           # 3
9F 00 06 # if_cmpeq +6        # if (count_vocab(vocab6, freq6, 6, "texts/scott_tweet.txt", true, "main (doslingos-test.c0: 74.10-74.70)") == 3) goto <1413:cond_true>
A7 00 08 # goto +8            # goto <1414:cond_false>
# <1413:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1415:cond_end>
# <1414:cond_false>
10 00    # bipush 0           # false
# <1415:cond_end>
14 7E 50 # aldc 32336         # s[32336] = "doslingos-test.c0: 74.3-74.77: assert failed"
CF       # assert             # assert (count_vocab(vocab6, freq6, 6, "texts/scott_tweet.txt", true, "main (doslingos-test.c0: 74.10-74.70)") == 3) [failure message on stack]
14 7E 7D # aldc 32381         # s[32381] = "0 1 0 1 0 1"
10 0A    # bipush 10          # 10
14 7E 89 # aldc 32393         # s[32393] = "main (doslingos-test.c0: 75.19-75.48)"
B8 00 73 # invokestatic 115   # parse_ints__1("0 1 0 1 0 1", 10, "main (doslingos-test.c0: 75.19-75.48)")
36 1C    # vstore 28          # checkF6 = parse_ints__1("0 1 0 1 0 1", 10, "main (doslingos-test.c0: 75.19-75.48)");
14 7E AF # aldc 32431         # s[32431] = "axle burrow fail his jam out"
14 7E CC # aldc 32460         # s[32460] = "main (doslingos-test.c0: 76.22-76.66)"
B8 00 72 # invokestatic 114   # parse_tokens__1("axle burrow fail his jam out", "main (doslingos-test.c0: 76.22-76.66)")
36 1D    # vstore 29          # checkV6 = parse_tokens__1("axle burrow fail his jam out", "main (doslingos-test.c0: 76.22-76.66)");
15 05    # vload 5            # vocab6
15 1D    # vload 29           # checkV6
15 0B    # vload 11           # freq6
15 1C    # vload 28           # checkF6
10 06    # bipush 6           # 6
14 7E F2 # aldc 32498         # s[32498] = "main (doslingos-test.c0: 77.10-77.57)"
B8 00 7C # invokestatic 124   # equal_array(vocab6, checkV6, freq6, checkF6, 6, "main (doslingos-test.c0: 77.10-77.57)")
14 7F 18 # aldc 32536         # s[32536] = "doslingos-test.c0: 77.3-77.59: assert failed"
CF       # assert             # assert equal_array(vocab6, checkV6, freq6, checkF6, 6, "main (doslingos-test.c0: 77.10-77.57)") [failure message on stack]
15 06    # vload 6            # vocab7
15 0C    # vload 12           # freq7
10 00    # bipush 0           # 0
14 7F 45 # aldc 32581         # s[32581] = "texts/scott_tweet.txt"
10 01    # bipush 1           # true
14 7F 5B # aldc 32603         # s[32603] = "main (doslingos-test.c0: 79.10-79.70)"
B8 00 79 # invokestatic 121   # count_vocab(vocab7, freq7, 0, "texts/scott_tweet.txt", true, "main (doslingos-test.c0: 79.10-79.70)")
10 06    # bipush 6           # 6
9F 00 06 # if_cmpeq +6        # if (count_vocab(vocab7, freq7, 0, "texts/scott_tweet.txt", true, "main (doslingos-test.c0: 79.10-79.70)") == 6) goto <1416:cond_true>
A7 00 08 # goto +8            # goto <1417:cond_false>
# <1416:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1418:cond_end>
# <1417:cond_false>
10 00    # bipush 0           # false
# <1418:cond_end>
14 7F 81 # aldc 32641         # s[32641] = "doslingos-test.c0: 79.3-79.77: assert failed"
CF       # assert             # assert (count_vocab(vocab7, freq7, 0, "texts/scott_tweet.txt", true, "main (doslingos-test.c0: 79.10-79.70)") == 6) [failure message on stack]
10 00    # bipush 0           # 0
BC 04    # newarray 4         # alloc_array(int, 0)
36 1E    # vstore 30          # checkF7 = alloc_array(int, 0);
10 00    # bipush 0           # 0
BC 08    # newarray 8         # alloc_array(string, 0)
36 1F    # vstore 31          # checkV7 = alloc_array(string, 0);
15 06    # vload 6            # vocab7
15 1F    # vload 31           # checkV7
15 0C    # vload 12           # freq7
15 1E    # vload 30           # checkF7
10 00    # bipush 0           # 0
14 7F AE # aldc 32686         # s[32686] = "main (doslingos-test.c0: 82.10-82.57)"
B8 00 7C # invokestatic 124   # equal_array(vocab7, checkV7, freq7, checkF7, 0, "main (doslingos-test.c0: 82.10-82.57)")
14 7F D4 # aldc 32724         # s[32724] = "doslingos-test.c0: 82.3-82.59: assert failed"
CF       # assert             # assert equal_array(vocab7, checkV7, freq7, checkF7, 0, "main (doslingos-test.c0: 82.10-82.57)") [failure message on stack]
15 07    # vload 7            # vocab8
15 0D    # vload 13           # freq8
10 06    # bipush 6           # 6
14 80 01 # aldc 32769         # s[32769] = "texts/scott_tweet.txt"
10 01    # bipush 1           # true
14 80 17 # aldc 32791         # s[32791] = "main (doslingos-test.c0: 84.10-84.70)"
B8 00 79 # invokestatic 121   # count_vocab(vocab8, freq8, 6, "texts/scott_tweet.txt", true, "main (doslingos-test.c0: 84.10-84.70)")
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (count_vocab(vocab8, freq8, 6, "texts/scott_tweet.txt", true, "main (doslingos-test.c0: 84.10-84.70)") == 0) goto <1419:cond_true>
A7 00 08 # goto +8            # goto <1420:cond_false>
# <1419:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1421:cond_end>
# <1420:cond_false>
10 00    # bipush 0           # false
# <1421:cond_end>
14 80 3D # aldc 32829         # s[32829] = "doslingos-test.c0: 84.3-84.77: assert failed"
CF       # assert             # assert (count_vocab(vocab8, freq8, 6, "texts/scott_tweet.txt", true, "main (doslingos-test.c0: 84.10-84.70)") == 0) [failure message on stack]
14 80 6A # aldc 32874         # s[32874] = "1 1 1 1 1 1"
10 0A    # bipush 10          # 10
14 80 76 # aldc 32886         # s[32886] = "main (doslingos-test.c0: 85.19-85.48)"
B8 00 73 # invokestatic 115   # parse_ints__1("1 1 1 1 1 1", 10, "main (doslingos-test.c0: 85.19-85.48)")
36 20    # vstore 32          # checkF8 = parse_ints__1("1 1 1 1 1 1", 10, "main (doslingos-test.c0: 85.19-85.48)");
14 80 9C # aldc 32924         # s[32924] = "burrow his is of out phil"
14 80 B6 # aldc 32950         # s[32950] = "main (doslingos-test.c0: 86.22-86.63)"
B8 00 72 # invokestatic 114   # parse_tokens__1("burrow his is of out phil", "main (doslingos-test.c0: 86.22-86.63)")
36 21    # vstore 33          # checkV8 = parse_tokens__1("burrow his is of out phil", "main (doslingos-test.c0: 86.22-86.63)");
15 07    # vload 7            # vocab8
15 21    # vload 33           # checkV8
15 0D    # vload 13           # freq8
15 20    # vload 32           # checkF8
10 06    # bipush 6           # 6
14 80 DC # aldc 32988         # s[32988] = "main (doslingos-test.c0: 87.10-87.57)"
B8 00 7C # invokestatic 124   # equal_array(vocab8, checkV8, freq8, checkF8, 6, "main (doslingos-test.c0: 87.10-87.57)")
14 81 02 # aldc 33026         # s[33026] = "doslingos-test.c0: 87.3-87.59: assert failed"
CF       # assert             # assert equal_array(vocab8, checkV8, freq8, checkF8, 6, "main (doslingos-test.c0: 87.10-87.57)") [failure message on stack]
15 10    # vload 16           # vocab4
15 11    # vload 17           # freq4
15 0F    # vload 15           # length
14 81 2F # aldc 33071         # s[33071] = "texts/sonnets.txt"
10 01    # bipush 1           # true
14 81 41 # aldc 33089         # s[33089] = "main (doslingos-test.c0: 89.3-89.64)"
B8 00 79 # invokestatic 121   # count_vocab(vocab4, freq4, length, "texts/sonnets.txt", true, "main (doslingos-test.c0: 89.3-89.64)")
57       # pop                # (ignore result)
15 14    # vload 20           # vocab5
15 15    # vload 21           # freq5
15 13    # vload 19           # length2
14 81 66 # aldc 33126         # s[33126] = "texts/shakespeare.txt"
10 01    # bipush 1           # true
14 81 7C # aldc 33148         # s[33148] = "main (doslingos-test.c0: 92.3-92.69)"
B8 00 79 # invokestatic 121   # count_vocab(vocab5, freq5, length2, "texts/shakespeare.txt", true, "main (doslingos-test.c0: 92.3-92.69)")
57       # pop                # (ignore result)
14 81 A1 # aldc 33185         # s[33185] = "-----SMALL TEXT TEST RESULTS-----\n"
14 81 C4 # aldc 33220         # s[33220] = "main (doslingos-test.c0: 96.3-96.48)"
B8 00 01 # invokestatic 1     # print__1("-----SMALL TEXT TEST RESULTS-----\n", "main (doslingos-test.c0: 96.3-96.48)")
57       # pop                # (ignore result)
15 02    # vload 2            # vocab1
15 08    # vload 8            # freq1
10 05    # bipush 5           # 5
14 81 E9 # aldc 33257         # s[33257] = "main (doslingos-test.c0: 97.3-97.33)"
B8 00 7A # invokestatic 122   # sort_by_freq(vocab1, freq1, 5, "main (doslingos-test.c0: 97.3-97.33)")
57       # pop                # (ignore result)
14 82 0E # aldc 33294         # s[33294] = "4 4 4 4 4"
10 0A    # bipush 10          # 10
14 82 18 # aldc 33304         # s[33304] = "main (doslingos-test.c0: 98.22-98.49)"
B8 00 73 # invokestatic 115   # parse_ints__1("4 4 4 4 4", 10, "main (doslingos-test.c0: 98.22-98.49)")
36 22    # vstore 34          # checkFreq1 = parse_ints__1("4 4 4 4 4", 10, "main (doslingos-test.c0: 98.22-98.49)");
14 82 3E # aldc 33342         # s[33342] = "a chuck could wood woodchuck"
14 82 5B # aldc 33371         # s[33371] = "main (doslingos-test.c0: 99.26-99.70)"
B8 00 72 # invokestatic 114   # parse_tokens__1("a chuck could wood woodchuck", "main (doslingos-test.c0: 99.26-99.70)")
36 23    # vstore 35          # checkVocab1 = parse_tokens__1("a chuck could wood woodchuck", "main (doslingos-test.c0: 99.26-99.70)");
15 02    # vload 2            # vocab1
15 23    # vload 35           # checkVocab1
15 08    # vload 8            # freq1
15 22    # vload 34           # checkFreq1
10 05    # bipush 5           # 5
14 82 81 # aldc 33409         # s[33409] = "main (doslingos-test.c0: 100.10-100.64)"
B8 00 7C # invokestatic 124   # equal_array(vocab1, checkVocab1, freq1, checkFreq1, 5, "main (doslingos-test.c0: 100.10-100.64)")
14 82 A9 # aldc 33449         # s[33449] = "doslingos-test.c0: 100.3-100.66: assert failed"
CF       # assert             # assert equal_array(vocab1, checkVocab1, freq1, checkFreq1, 5, "main (doslingos-test.c0: 100.10-100.64)") [failure message on stack]
15 03    # vload 3            # vocab2
15 09    # vload 9            # freq2
10 05    # bipush 5           # 5
14 82 D8 # aldc 33496         # s[33496] = "main (doslingos-test.c0: 103.3-103.33)"
B8 00 7A # invokestatic 122   # sort_by_freq(vocab2, freq2, 5, "main (doslingos-test.c0: 103.3-103.33)")
57       # pop                # (ignore result)
14 82 FF # aldc 33535         # s[33535] = "0 0 0 0 4"
10 0A    # bipush 10          # 10
14 83 09 # aldc 33545         # s[33545] = "main (doslingos-test.c0: 104.22-104.49)"
B8 00 73 # invokestatic 115   # parse_ints__1("0 0 0 0 4", 10, "main (doslingos-test.c0: 104.22-104.49)")
36 24    # vstore 36          # checkFreq2 = parse_ints__1("0 0 0 0 4", 10, "main (doslingos-test.c0: 104.22-104.49)");
14 83 31 # aldc 33585         # s[33585] = "b c d e a"
14 83 3B # aldc 33595         # s[33595] = "main (doslingos-test.c0: 105.26-105.51)"
B8 00 72 # invokestatic 114   # parse_tokens__1("b c d e a", "main (doslingos-test.c0: 105.26-105.51)")
36 25    # vstore 37          # checkVocab2 = parse_tokens__1("b c d e a", "main (doslingos-test.c0: 105.26-105.51)");
15 03    # vload 3            # vocab2
15 25    # vload 37           # checkVocab2
15 09    # vload 9            # freq2
15 24    # vload 36           # checkFreq2
10 05    # bipush 5           # 5
14 83 63 # aldc 33635         # s[33635] = "main (doslingos-test.c0: 106.10-106.64)"
B8 00 7C # invokestatic 124   # equal_array(vocab2, checkVocab2, freq2, checkFreq2, 5, "main (doslingos-test.c0: 106.10-106.64)")
14 83 8B # aldc 33675         # s[33675] = "doslingos-test.c0: 106.3-106.66: assert failed"
CF       # assert             # assert equal_array(vocab2, checkVocab2, freq2, checkFreq2, 5, "main (doslingos-test.c0: 106.10-106.64)") [failure message on stack]
15 04    # vload 4            # vocab3
15 0A    # vload 10           # freq3
10 05    # bipush 5           # 5
14 83 BA # aldc 33722         # s[33722] = "main (doslingos-test.c0: 109.3-109.33)"
B8 00 7A # invokestatic 122   # sort_by_freq(vocab3, freq3, 5, "main (doslingos-test.c0: 109.3-109.33)")
57       # pop                # (ignore result)
14 83 E1 # aldc 33761         # s[33761] = "0 0 1 2 2"
10 0A    # bipush 10          # 10
14 83 EB # aldc 33771         # s[33771] = "main (doslingos-test.c0: 110.22-110.49)"
B8 00 73 # invokestatic 115   # parse_ints__1("0 0 1 2 2", 10, "main (doslingos-test.c0: 110.22-110.49)")
36 26    # vstore 38          # checkFreq3 = parse_ints__1("0 0 1 2 2", 10, "main (doslingos-test.c0: 110.22-110.49)");
14 84 13 # aldc 33811         # s[33811] = "however wouldchuck how as if"
14 84 30 # aldc 33840         # s[33840] = "main (doslingos-test.c0: 111.26-111.70)"
B8 00 72 # invokestatic 114   # parse_tokens__1("however wouldchuck how as if", "main (doslingos-test.c0: 111.26-111.70)")
36 27    # vstore 39          # checkVocab3 = parse_tokens__1("however wouldchuck how as if", "main (doslingos-test.c0: 111.26-111.70)");
15 04    # vload 4            # vocab3
15 27    # vload 39           # checkVocab3
15 0A    # vload 10           # freq3
15 26    # vload 38           # checkFreq3
10 05    # bipush 5           # 5
14 84 58 # aldc 33880         # s[33880] = "main (doslingos-test.c0: 112.10-112.64)"
B8 00 7C # invokestatic 124   # equal_array(vocab3, checkVocab3, freq3, checkFreq3, 5, "main (doslingos-test.c0: 112.10-112.64)")
14 84 80 # aldc 33920         # s[33920] = "doslingos-test.c0: 112.3-112.66: assert failed"
CF       # assert             # assert equal_array(vocab3, checkVocab3, freq3, checkFreq3, 5, "main (doslingos-test.c0: 112.10-112.64)") [failure message on stack]
15 05    # vload 5            # vocab6
15 0B    # vload 11           # freq6
10 06    # bipush 6           # 6
14 84 AF # aldc 33967         # s[33967] = "main (doslingos-test.c0: 115.3-115.33)"
B8 00 7A # invokestatic 122   # sort_by_freq(vocab6, freq6, 6, "main (doslingos-test.c0: 115.3-115.33)")
57       # pop                # (ignore result)
14 84 D6 # aldc 34006         # s[34006] = "0 0 0 1 1 1"
10 0A    # bipush 10          # 10
14 84 E2 # aldc 34018         # s[34018] = "main (doslingos-test.c0: 116.22-116.51)"
B8 00 73 # invokestatic 115   # parse_ints__1("0 0 0 1 1 1", 10, "main (doslingos-test.c0: 116.22-116.51)")
36 28    # vstore 40          # checkFreq6 = parse_ints__1("0 0 0 1 1 1", 10, "main (doslingos-test.c0: 116.22-116.51)");
14 85 0A # aldc 34058         # s[34058] = "axle fail jam burrow his out"
14 85 27 # aldc 34087         # s[34087] = "main (doslingos-test.c0: 117.26-117.70)"
B8 00 72 # invokestatic 114   # parse_tokens__1("axle fail jam burrow his out", "main (doslingos-test.c0: 117.26-117.70)")
36 29    # vstore 41          # checkVocab6 = parse_tokens__1("axle fail jam burrow his out", "main (doslingos-test.c0: 117.26-117.70)");
15 05    # vload 5            # vocab6
15 29    # vload 41           # checkVocab6
15 0B    # vload 11           # freq6
15 28    # vload 40           # checkFreq6
10 06    # bipush 6           # 6
14 85 4F # aldc 34127         # s[34127] = "main (doslingos-test.c0: 118.10-118.64)"
B8 00 7C # invokestatic 124   # equal_array(vocab6, checkVocab6, freq6, checkFreq6, 6, "main (doslingos-test.c0: 118.10-118.64)")
14 85 77 # aldc 34167         # s[34167] = "doslingos-test.c0: 118.3-118.66: assert failed"
CF       # assert             # assert equal_array(vocab6, checkVocab6, freq6, checkFreq6, 6, "main (doslingos-test.c0: 118.10-118.64)") [failure message on stack]
14 85 A6 # aldc 34214         # s[34214] = "-----SONNETS TEXT TEST RESULT-----\n"
14 85 CA # aldc 34250         # s[34250] = "main (doslingos-test.c0: 121.3-121.49)"
B8 00 01 # invokestatic 1     # print__1("-----SONNETS TEXT TEST RESULT-----\n", "main (doslingos-test.c0: 121.3-121.49)")
57       # pop                # (ignore result)
15 10    # vload 16           # vocab4
15 11    # vload 17           # freq4
15 0F    # vload 15           # length
14 85 F1 # aldc 34289         # s[34289] = "main (doslingos-test.c0: 122.3-122.38)"
B8 00 7A # invokestatic 122   # sort_by_freq(vocab4, freq4, length, "main (doslingos-test.c0: 122.3-122.38)")
57       # pop                # (ignore result)
14 86 18 # aldc 34328         # s[34328] = "-----SHAKESPEARE TEXT TEST RESULT-----\n"
14 86 40 # aldc 34368         # s[34368] = "main (doslingos-test.c0: 125.3-125.53)"
B8 00 01 # invokestatic 1     # print__1("-----SHAKESPEARE TEXT TEST RESULT-----\n", "main (doslingos-test.c0: 125.3-125.53)")
57       # pop                # (ignore result)
15 14    # vload 20           # vocab5
15 15    # vload 21           # freq5
15 13    # vload 19           # length2
14 86 67 # aldc 34407         # s[34407] = "main (doslingos-test.c0: 126.3-126.39)"
B8 00 7A # invokestatic 122   # sort_by_freq(vocab5, freq5, length2, "main (doslingos-test.c0: 126.3-126.39)")
57       # pop                # (ignore result)
14 86 8E # aldc 34446         # s[34446] = "All tests passed!\n"
14 86 A1 # aldc 34465         # s[34465] = "main (doslingos-test.c0: 131.3-131.32)"
B8 00 01 # invokestatic 1     # print__1("All tests passed!\n", "main (doslingos-test.c0: 131.3-131.32)")
57       # pop                # (ignore result)
10 00    # bipush 0           # 0
36 01    # vstore 1           # _result = 0;
15 01    # vload 1            # _result
B0       # return             # 


#<print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 00 # invokenative 0     # print(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<println__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 01 # invokenative 1     # println(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printint__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # i
B7 00 02 # invokenative 2     # printint(i)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printbool__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # b
B7 00 03 # invokenative 3     # printbool(b)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printchar__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # c
B7 00 04 # invokenative 4     # printchar(c)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<flush__1>
01                # number of arguments = 1
01                # number of local variables = 1
00 0A             # code length = 10 bytes
B7 00 05 # invokenative 5     # flush()
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<eof__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
B7 00 06 # invokenative 6     # eof()
36 01    # vstore 1           # _result = eof();
15 01    # vload 1            # _result
B0       # return             # 


#<readline__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 00 00 # aldc 0             # s[0] = "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
B8 00 07 # invokestatic 7     # eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")
10 01    # bipush 1           # 
82       # ixor               # !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"))
14 00 42 # aldc 66            # s[66] = "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
15 00    # vload 0            # _caller
14 00 93 # aldc 147           # s[147] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")) [failure message on stack]
B7 00 08 # invokenative 8     # readline()
36 01    # vstore 1           # _result = readline();
15 01    # vload 1            # _result
B0       # return             # 


#<int_is_in>
05                # number of arguments = 5
06                # number of local variables = 6
00 77             # code length = 119 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <03:and>
A7 00 22 # goto +34           # goto <01:cond_false>
# <03:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <00:cond_true>
A7 00 18 # goto +24           # goto <01:cond_false>
# <00:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <04:cond_true>
A7 00 08 # goto +8            # goto <05:cond_false>
# <04:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <06:cond_end>
# <05:cond_false>
10 00    # bipush 0           # false
# <06:cond_end>
A7 00 05 # goto +5            # goto <02:cond_end>
# <01:cond_false>
10 00    # bipush 0           # false
# <02:cond_end>
14 00 A5 # aldc 165           # s[165] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 13.4-13.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 00 F4 # aldc 244           # s[244] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 13.4-13.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
15 03    # vload 3            # hi
9F 00 06 # if_cmpeq +6        # if (lo == hi) goto <07:then>
A7 00 0D # goto +13           # goto <08:else>
# <07:then>
10 00    # bipush 0           # false
36 05    # vstore 5           # _result = false;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <09:endif>
# <08:else>
# <09:endif>
15 01    # vload 1            # A
15 02    # vload 2            # lo
63       # aadds              # &A[lo]
2E       # imload             # A[lo]
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (A[lo] == x) goto <10:cond_true>
A7 00 08 # goto +8            # goto <11:cond_false>
# <10:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <12:cond_end>
# <11:cond_false>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
10 01    # bipush 1           # 1
60       # iadd               # (lo + 1)
15 03    # vload 3            # hi
14 01 06 # aldc 262           # s[262] = "int_is_in (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 16.24-16.46)"
B8 00 09 # invokestatic 9     # int_is_in(x, A, (lo + 1), hi, "int_is_in (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 16.24-16.46)")
# <12:cond_end>
36 05    # vstore 5           # _result = ((A[lo] == x) || int_is_in(x, A, (lo + 1), hi, "int_is_in (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 16.24-16.46)"));
15 05    # vload 5            # _result
B0       # return             # 


#<int_swap>
04                # number of arguments = 4
05                # number of local variables = 5
00 7F             # code length = 127 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <13:cond_true>
A7 00 18 # goto +24           # goto <14:cond_false>
# <13:cond_true>
15 01    # vload 1            # i
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A1 00 06 # if_icmplt +6       # if (i < \length(A)) goto <16:cond_true>
A7 00 08 # goto +8            # goto <17:cond_false>
# <16:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <18:cond_end>
# <17:cond_false>
10 00    # bipush 0           # false
# <18:cond_end>
A7 00 05 # goto +5            # goto <15:cond_end>
# <14:cond_false>
10 00    # bipush 0           # false
# <15:cond_end>
14 01 44 # aldc 324           # s[324] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 20.4-20.38: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 01 93 # aldc 403           # s[403] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 20.4-20.38: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= i) && (i < \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 02    # vload 2            # j
A4 00 06 # if_icmple +6       # if (0 <= j) goto <19:cond_true>
A7 00 18 # goto +24           # goto <20:cond_false>
# <19:cond_true>
15 02    # vload 2            # j
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A1 00 06 # if_icmplt +6       # if (j < \length(A)) goto <22:cond_true>
A7 00 08 # goto +8            # goto <23:cond_false>
# <22:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <24:cond_end>
# <23:cond_false>
10 00    # bipush 0           # false
# <24:cond_end>
A7 00 05 # goto +5            # goto <21:cond_end>
# <20:cond_false>
10 00    # bipush 0           # false
# <21:cond_end>
14 01 A5 # aldc 421           # s[421] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 21.4-21.38: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 01 F4 # aldc 500           # s[500] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 21.4-21.38: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= j) && (j < \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # i
63       # aadds              # &A[i]
2E       # imload             # A[i]
36 04    # vstore 4           # tmp = A[i];
15 00    # vload 0            # A
15 01    # vload 1            # i
63       # aadds              # &A[i]
15 00    # vload 0            # A
15 02    # vload 2            # j
63       # aadds              # &A[j]
2E       # imload             # A[j]
4E       # imstore            # A[i] = A[j];
15 00    # vload 0            # A
15 02    # vload 2            # j
63       # aadds              # &A[j]
15 04    # vload 4            # tmp
4E       # imstore            # A[j] = tmp;
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<int_gt_seg>
05                # number of arguments = 5
06                # number of local variables = 6
00 77             # code length = 119 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <28:and>
A7 00 22 # goto +34           # goto <26:cond_false>
# <28:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <25:cond_true>
A7 00 18 # goto +24           # goto <26:cond_false>
# <25:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <29:cond_true>
A7 00 08 # goto +8            # goto <30:cond_false>
# <29:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <31:cond_end>
# <30:cond_false>
10 00    # bipush 0           # false
# <31:cond_end>
A7 00 05 # goto +5            # goto <27:cond_end>
# <26:cond_false>
10 00    # bipush 0           # false
# <27:cond_end>
14 02 06 # aldc 518           # s[518] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 29.4-29.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 02 55 # aldc 597           # s[597] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 29.4-29.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
15 03    # vload 3            # hi
9F 00 06 # if_cmpeq +6        # if (lo == hi) goto <32:then>
A7 00 0D # goto +13           # goto <33:else>
# <32:then>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <34:endif>
# <33:else>
# <34:endif>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
63       # aadds              # &A[lo]
2E       # imload             # A[lo]
A3 00 06 # if_icmpgt +6       # if (x > A[lo]) goto <35:cond_true>
A7 00 17 # goto +23           # goto <36:cond_false>
# <35:cond_true>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
10 01    # bipush 1           # 1
60       # iadd               # (lo + 1)
15 03    # vload 3            # hi
14 02 67 # aldc 615           # s[615] = "int_gt_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 32.23-32.49)"
B8 00 0B # invokestatic 11    # int_gt_seg(x, A, (lo + 1), hi, "int_gt_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 32.23-32.49)")
A7 00 05 # goto +5            # goto <37:cond_end>
# <36:cond_false>
10 00    # bipush 0           # false
# <37:cond_end>
36 05    # vstore 5           # _result = ((x > A[lo]) && int_gt_seg(x, A, (lo + 1), hi, "int_gt_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 32.23-32.49)"));
15 05    # vload 5            # _result
B0       # return             # 


#<int_ge_seg>
05                # number of arguments = 5
06                # number of local variables = 6
00 77             # code length = 119 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <41:and>
A7 00 22 # goto +34           # goto <39:cond_false>
# <41:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <38:cond_true>
A7 00 18 # goto +24           # goto <39:cond_false>
# <38:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <42:cond_true>
A7 00 08 # goto +8            # goto <43:cond_false>
# <42:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <44:cond_end>
# <43:cond_false>
10 00    # bipush 0           # false
# <44:cond_end>
A7 00 05 # goto +5            # goto <40:cond_end>
# <39:cond_false>
10 00    # bipush 0           # false
# <40:cond_end>
14 02 A6 # aldc 678           # s[678] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 36.4-36.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 02 F5 # aldc 757           # s[757] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 36.4-36.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
15 03    # vload 3            # hi
9F 00 06 # if_cmpeq +6        # if (lo == hi) goto <45:then>
A7 00 0D # goto +13           # goto <46:else>
# <45:then>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <47:endif>
# <46:else>
# <47:endif>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
63       # aadds              # &A[lo]
2E       # imload             # A[lo]
A2 00 06 # if_icmpge +6       # if (x >= A[lo]) goto <48:cond_true>
A7 00 17 # goto +23           # goto <49:cond_false>
# <48:cond_true>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
10 01    # bipush 1           # 1
60       # iadd               # (lo + 1)
15 03    # vload 3            # hi
14 03 07 # aldc 775           # s[775] = "int_ge_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 39.24-39.50)"
B8 00 0C # invokestatic 12    # int_ge_seg(x, A, (lo + 1), hi, "int_ge_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 39.24-39.50)")
A7 00 05 # goto +5            # goto <50:cond_end>
# <49:cond_false>
10 00    # bipush 0           # false
# <50:cond_end>
36 05    # vstore 5           # _result = ((x >= A[lo]) && int_ge_seg(x, A, (lo + 1), hi, "int_ge_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 39.24-39.50)"));
15 05    # vload 5            # _result
B0       # return             # 


#<int_lt_seg>
05                # number of arguments = 5
06                # number of local variables = 6
00 77             # code length = 119 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <54:and>
A7 00 22 # goto +34           # goto <52:cond_false>
# <54:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <51:cond_true>
A7 00 18 # goto +24           # goto <52:cond_false>
# <51:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <55:cond_true>
A7 00 08 # goto +8            # goto <56:cond_false>
# <55:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <57:cond_end>
# <56:cond_false>
10 00    # bipush 0           # false
# <57:cond_end>
A7 00 05 # goto +5            # goto <53:cond_end>
# <52:cond_false>
10 00    # bipush 0           # false
# <53:cond_end>
14 03 46 # aldc 838           # s[838] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 43.4-43.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 03 95 # aldc 917           # s[917] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 43.4-43.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
15 03    # vload 3            # hi
9F 00 06 # if_cmpeq +6        # if (lo == hi) goto <58:then>
A7 00 0D # goto +13           # goto <59:else>
# <58:then>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <60:endif>
# <59:else>
# <60:endif>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
63       # aadds              # &A[lo]
2E       # imload             # A[lo]
A1 00 06 # if_icmplt +6       # if (x < A[lo]) goto <61:cond_true>
A7 00 17 # goto +23           # goto <62:cond_false>
# <61:cond_true>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
10 01    # bipush 1           # 1
60       # iadd               # (lo + 1)
15 03    # vload 3            # hi
14 03 A7 # aldc 935           # s[935] = "int_lt_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 46.23-46.49)"
B8 00 0D # invokestatic 13    # int_lt_seg(x, A, (lo + 1), hi, "int_lt_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 46.23-46.49)")
A7 00 05 # goto +5            # goto <63:cond_end>
# <62:cond_false>
10 00    # bipush 0           # false
# <63:cond_end>
36 05    # vstore 5           # _result = ((x < A[lo]) && int_lt_seg(x, A, (lo + 1), hi, "int_lt_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 46.23-46.49)"));
15 05    # vload 5            # _result
B0       # return             # 


#<int_le_seg>
05                # number of arguments = 5
06                # number of local variables = 6
00 77             # code length = 119 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <67:and>
A7 00 22 # goto +34           # goto <65:cond_false>
# <67:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <64:cond_true>
A7 00 18 # goto +24           # goto <65:cond_false>
# <64:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <68:cond_true>
A7 00 08 # goto +8            # goto <69:cond_false>
# <68:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <70:cond_end>
# <69:cond_false>
10 00    # bipush 0           # false
# <70:cond_end>
A7 00 05 # goto +5            # goto <66:cond_end>
# <65:cond_false>
10 00    # bipush 0           # false
# <66:cond_end>
14 03 E6 # aldc 998           # s[998] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 50.4-50.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 04 35 # aldc 1077          # s[1077] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 50.4-50.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
15 03    # vload 3            # hi
9F 00 06 # if_cmpeq +6        # if (lo == hi) goto <71:then>
A7 00 0D # goto +13           # goto <72:else>
# <71:then>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <73:endif>
# <72:else>
# <73:endif>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
63       # aadds              # &A[lo]
2E       # imload             # A[lo]
A4 00 06 # if_icmple +6       # if (x <= A[lo]) goto <74:cond_true>
A7 00 17 # goto +23           # goto <75:cond_false>
# <74:cond_true>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
10 01    # bipush 1           # 1
60       # iadd               # (lo + 1)
15 03    # vload 3            # hi
14 04 47 # aldc 1095          # s[1095] = "int_le_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 53.24-53.50)"
B8 00 0E # invokestatic 14    # int_le_seg(x, A, (lo + 1), hi, "int_le_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 53.24-53.50)")
A7 00 05 # goto +5            # goto <76:cond_end>
# <75:cond_false>
10 00    # bipush 0           # false
# <76:cond_end>
36 05    # vstore 5           # _result = ((x <= A[lo]) && int_le_seg(x, A, (lo + 1), hi, "int_le_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 53.24-53.50)"));
15 05    # vload 5            # _result
B0       # return             # 


#<int_is_sorted>
04                # number of arguments = 4
05                # number of local variables = 5
00 84             # code length = 132 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <80:and>
A7 00 22 # goto +34           # goto <78:cond_false>
# <80:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <77:cond_true>
A7 00 18 # goto +24           # goto <78:cond_false>
# <77:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <81:cond_true>
A7 00 08 # goto +8            # goto <82:cond_false>
# <81:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <83:cond_end>
# <82:cond_false>
10 00    # bipush 0           # false
# <83:cond_end>
A7 00 05 # goto +5            # goto <79:cond_end>
# <78:cond_false>
10 00    # bipush 0           # false
# <79:cond_end>
14 04 86 # aldc 1158          # s[1158] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 59.4-59.53: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 04 D5 # aldc 1237          # s[1237] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 59.4-59.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 01    # vload 1            # lo
15 02    # vload 2            # hi
9F 00 06 # if_cmpeq +6        # if (lo == hi) goto <84:then>
A7 00 0D # goto +13           # goto <85:else>
# <84:then>
10 01    # bipush 1           # true
36 04    # vstore 4           # _result = true;
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <86:endif>
# <85:else>
# <86:endif>
15 00    # vload 0            # A
15 01    # vload 1            # lo
63       # aadds              # &A[lo]
2E       # imload             # A[lo]
15 00    # vload 0            # A
15 01    # vload 1            # lo
10 01    # bipush 1           # 1
60       # iadd               # (lo + 1)
15 02    # vload 2            # hi
14 04 E7 # aldc 1255          # s[1255] = "int_is_sorted (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 62.10-62.40)"
B8 00 0E # invokestatic 14    # int_le_seg(A[lo], A, (lo + 1), hi, "int_is_sorted (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 62.10-62.40)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (int_le_seg(A[lo], A, (lo + 1), hi, "int_is_sorted (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 62.10-62.40)") == true) goto <87:cond_true>
A7 00 15 # goto +21           # goto <88:cond_false>
# <87:cond_true>
15 00    # vload 0            # A
15 01    # vload 1            # lo
10 01    # bipush 1           # 1
60       # iadd               # (lo + 1)
15 02    # vload 2            # hi
14 05 29 # aldc 1321          # s[1321] = "int_is_sorted (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 62.44-62.70)"
B8 00 0F # invokestatic 15    # int_is_sorted(A, (lo + 1), hi, "int_is_sorted (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 62.44-62.70)")
A7 00 05 # goto +5            # goto <89:cond_end>
# <88:cond_false>
10 00    # bipush 0           # false
# <89:cond_end>
36 04    # vstore 4           # _result = (int_le_seg(A[lo], A, (lo + 1), hi, "int_is_sorted (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 62.10-62.40)") && int_is_sorted(A, (lo + 1), hi, "int_is_sorted (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 62.44-62.70)"));
15 04    # vload 4            # _result
B0       # return             # 


#<int_gt_segs>
07                # number of arguments = 7
08                # number of local variables = 8
00 C1             # code length = 193 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <93:and>
A7 00 22 # goto +34           # goto <91:cond_false>
# <93:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <90:cond_true>
A7 00 18 # goto +24           # goto <91:cond_false>
# <90:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <94:cond_true>
A7 00 08 # goto +8            # goto <95:cond_false>
# <94:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <96:cond_end>
# <95:cond_false>
10 00    # bipush 0           # false
# <96:cond_end>
A7 00 05 # goto +5            # goto <92:cond_end>
# <91:cond_false>
10 00    # bipush 0           # false
# <92:cond_end>
14 05 6B # aldc 1387          # s[1387] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 66.4-66.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 05 BA # aldc 1466          # s[1466] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 66.4-66.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <100:and>
A7 00 22 # goto +34           # goto <98:cond_false>
# <100:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <97:cond_true>
A7 00 18 # goto +24           # goto <98:cond_false>
# <97:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <101:cond_true>
A7 00 08 # goto +8            # goto <102:cond_false>
# <101:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <103:cond_end>
# <102:cond_false>
10 00    # bipush 0           # false
# <103:cond_end>
A7 00 05 # goto +5            # goto <99:cond_end>
# <98:cond_false>
10 00    # bipush 0           # false
# <99:cond_end>
14 05 CC # aldc 1484          # s[1484] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 67.4-67.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 06 1B # aldc 1563          # s[1563] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 67.4-67.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
9F 00 06 # if_cmpeq +6        # if (lo1 == hi1) goto <104:then>
A7 00 0D # goto +13           # goto <105:else>
# <104:then>
10 01    # bipush 1           # true
36 07    # vstore 7           # _result = true;
15 07    # vload 7            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <106:endif>
# <105:else>
# <106:endif>
15 00    # vload 0            # A
15 01    # vload 1            # lo1
63       # aadds              # &A[lo1]
2E       # imload             # A[lo1]
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 06 2D # aldc 1581          # s[1581] = "int_gt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 70.10-70.41)"
B8 00 0B # invokestatic 11    # int_gt_seg(A[lo1], B, lo2, hi2, "int_gt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 70.10-70.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (int_gt_seg(A[lo1], B, lo2, hi2, "int_gt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 70.10-70.41)") == true) goto <107:cond_true>
A7 00 1B # goto +27           # goto <108:cond_false>
# <107:cond_true>
15 00    # vload 0            # A
15 01    # vload 1            # lo1
10 01    # bipush 1           # 1
60       # iadd               # (lo1 + 1)
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 06 6D # aldc 1645          # s[1645] = "int_gt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 71.10-71.49)"
B8 00 10 # invokestatic 16    # int_gt_segs(A, (lo1 + 1), hi1, B, lo2, hi2, "int_gt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 71.10-71.49)")
A7 00 05 # goto +5            # goto <109:cond_end>
# <108:cond_false>
10 00    # bipush 0           # false
# <109:cond_end>
36 07    # vstore 7           # _result = (int_gt_seg(A[lo1], B, lo2, hi2, "int_gt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 70.10-70.41)") && int_gt_segs(A, (lo1 + 1), hi1, B, lo2, hi2, "int_gt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 71.10-71.49)"));
15 07    # vload 7            # _result
B0       # return             # 


#<int_ge_segs>
07                # number of arguments = 7
08                # number of local variables = 8
00 C1             # code length = 193 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <113:and>
A7 00 22 # goto +34           # goto <111:cond_false>
# <113:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <110:cond_true>
A7 00 18 # goto +24           # goto <111:cond_false>
# <110:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <114:cond_true>
A7 00 08 # goto +8            # goto <115:cond_false>
# <114:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <116:cond_end>
# <115:cond_false>
10 00    # bipush 0           # false
# <116:cond_end>
A7 00 05 # goto +5            # goto <112:cond_end>
# <111:cond_false>
10 00    # bipush 0           # false
# <112:cond_end>
14 06 AD # aldc 1709          # s[1709] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 75.4-75.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 06 FC # aldc 1788          # s[1788] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 75.4-75.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <120:and>
A7 00 22 # goto +34           # goto <118:cond_false>
# <120:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <117:cond_true>
A7 00 18 # goto +24           # goto <118:cond_false>
# <117:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <121:cond_true>
A7 00 08 # goto +8            # goto <122:cond_false>
# <121:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <123:cond_end>
# <122:cond_false>
10 00    # bipush 0           # false
# <123:cond_end>
A7 00 05 # goto +5            # goto <119:cond_end>
# <118:cond_false>
10 00    # bipush 0           # false
# <119:cond_end>
14 07 0E # aldc 1806          # s[1806] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 76.4-76.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 07 5D # aldc 1885          # s[1885] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 76.4-76.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
9F 00 06 # if_cmpeq +6        # if (lo1 == hi1) goto <124:then>
A7 00 0D # goto +13           # goto <125:else>
# <124:then>
10 01    # bipush 1           # true
36 07    # vstore 7           # _result = true;
15 07    # vload 7            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <126:endif>
# <125:else>
# <126:endif>
15 00    # vload 0            # A
15 01    # vload 1            # lo1
63       # aadds              # &A[lo1]
2E       # imload             # A[lo1]
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 07 6F # aldc 1903          # s[1903] = "int_ge_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 79.10-79.41)"
B8 00 0C # invokestatic 12    # int_ge_seg(A[lo1], B, lo2, hi2, "int_ge_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 79.10-79.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (int_ge_seg(A[lo1], B, lo2, hi2, "int_ge_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 79.10-79.41)") == true) goto <127:cond_true>
A7 00 1B # goto +27           # goto <128:cond_false>
# <127:cond_true>
15 00    # vload 0            # A
15 01    # vload 1            # lo1
10 01    # bipush 1           # 1
60       # iadd               # (lo1 + 1)
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 07 AF # aldc 1967          # s[1967] = "int_ge_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 80.10-80.49)"
B8 00 11 # invokestatic 17    # int_ge_segs(A, (lo1 + 1), hi1, B, lo2, hi2, "int_ge_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 80.10-80.49)")
A7 00 05 # goto +5            # goto <129:cond_end>
# <128:cond_false>
10 00    # bipush 0           # false
# <129:cond_end>
36 07    # vstore 7           # _result = (int_ge_seg(A[lo1], B, lo2, hi2, "int_ge_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 79.10-79.41)") && int_ge_segs(A, (lo1 + 1), hi1, B, lo2, hi2, "int_ge_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 80.10-80.49)"));
15 07    # vload 7            # _result
B0       # return             # 


#<int_lt_segs>
07                # number of arguments = 7
08                # number of local variables = 8
00 C1             # code length = 193 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <133:and>
A7 00 22 # goto +34           # goto <131:cond_false>
# <133:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <130:cond_true>
A7 00 18 # goto +24           # goto <131:cond_false>
# <130:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <134:cond_true>
A7 00 08 # goto +8            # goto <135:cond_false>
# <134:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <136:cond_end>
# <135:cond_false>
10 00    # bipush 0           # false
# <136:cond_end>
A7 00 05 # goto +5            # goto <132:cond_end>
# <131:cond_false>
10 00    # bipush 0           # false
# <132:cond_end>
14 07 EF # aldc 2031          # s[2031] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 84.4-84.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 08 3E # aldc 2110          # s[2110] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 84.4-84.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <140:and>
A7 00 22 # goto +34           # goto <138:cond_false>
# <140:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <137:cond_true>
A7 00 18 # goto +24           # goto <138:cond_false>
# <137:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <141:cond_true>
A7 00 08 # goto +8            # goto <142:cond_false>
# <141:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <143:cond_end>
# <142:cond_false>
10 00    # bipush 0           # false
# <143:cond_end>
A7 00 05 # goto +5            # goto <139:cond_end>
# <138:cond_false>
10 00    # bipush 0           # false
# <139:cond_end>
14 08 50 # aldc 2128          # s[2128] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 85.4-85.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 08 9F # aldc 2207          # s[2207] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 85.4-85.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
9F 00 06 # if_cmpeq +6        # if (lo1 == hi1) goto <144:then>
A7 00 0D # goto +13           # goto <145:else>
# <144:then>
10 01    # bipush 1           # true
36 07    # vstore 7           # _result = true;
15 07    # vload 7            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <146:endif>
# <145:else>
# <146:endif>
15 00    # vload 0            # A
15 01    # vload 1            # lo1
63       # aadds              # &A[lo1]
2E       # imload             # A[lo1]
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 08 B1 # aldc 2225          # s[2225] = "int_lt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 88.10-88.41)"
B8 00 0D # invokestatic 13    # int_lt_seg(A[lo1], B, lo2, hi2, "int_lt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 88.10-88.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (int_lt_seg(A[lo1], B, lo2, hi2, "int_lt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 88.10-88.41)") == true) goto <147:cond_true>
A7 00 1B # goto +27           # goto <148:cond_false>
# <147:cond_true>
15 00    # vload 0            # A
15 01    # vload 1            # lo1
10 01    # bipush 1           # 1
60       # iadd               # (lo1 + 1)
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 08 F1 # aldc 2289          # s[2289] = "int_lt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 89.10-89.49)"
B8 00 12 # invokestatic 18    # int_lt_segs(A, (lo1 + 1), hi1, B, lo2, hi2, "int_lt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 89.10-89.49)")
A7 00 05 # goto +5            # goto <149:cond_end>
# <148:cond_false>
10 00    # bipush 0           # false
# <149:cond_end>
36 07    # vstore 7           # _result = (int_lt_seg(A[lo1], B, lo2, hi2, "int_lt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 88.10-88.41)") && int_lt_segs(A, (lo1 + 1), hi1, B, lo2, hi2, "int_lt_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 89.10-89.49)"));
15 07    # vload 7            # _result
B0       # return             # 


#<int_le_segs>
07                # number of arguments = 7
08                # number of local variables = 8
00 C1             # code length = 193 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <153:and>
A7 00 22 # goto +34           # goto <151:cond_false>
# <153:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <150:cond_true>
A7 00 18 # goto +24           # goto <151:cond_false>
# <150:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <154:cond_true>
A7 00 08 # goto +8            # goto <155:cond_false>
# <154:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <156:cond_end>
# <155:cond_false>
10 00    # bipush 0           # false
# <156:cond_end>
A7 00 05 # goto +5            # goto <152:cond_end>
# <151:cond_false>
10 00    # bipush 0           # false
# <152:cond_end>
14 09 31 # aldc 2353          # s[2353] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 93.4-93.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 09 80 # aldc 2432          # s[2432] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 93.4-93.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <160:and>
A7 00 22 # goto +34           # goto <158:cond_false>
# <160:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <157:cond_true>
A7 00 18 # goto +24           # goto <158:cond_false>
# <157:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <161:cond_true>
A7 00 08 # goto +8            # goto <162:cond_false>
# <161:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <163:cond_end>
# <162:cond_false>
10 00    # bipush 0           # false
# <163:cond_end>
A7 00 05 # goto +5            # goto <159:cond_end>
# <158:cond_false>
10 00    # bipush 0           # false
# <159:cond_end>
14 09 92 # aldc 2450          # s[2450] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 94.4-94.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 09 E1 # aldc 2529          # s[2529] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 94.4-94.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
9F 00 06 # if_cmpeq +6        # if (lo1 == hi1) goto <164:then>
A7 00 0D # goto +13           # goto <165:else>
# <164:then>
10 01    # bipush 1           # true
36 07    # vstore 7           # _result = true;
15 07    # vload 7            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <166:endif>
# <165:else>
# <166:endif>
15 00    # vload 0            # A
15 01    # vload 1            # lo1
63       # aadds              # &A[lo1]
2E       # imload             # A[lo1]
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 09 F3 # aldc 2547          # s[2547] = "int_le_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 97.10-97.41)"
B8 00 0E # invokestatic 14    # int_le_seg(A[lo1], B, lo2, hi2, "int_le_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 97.10-97.41)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (int_le_seg(A[lo1], B, lo2, hi2, "int_le_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 97.10-97.41)") == true) goto <167:cond_true>
A7 00 1B # goto +27           # goto <168:cond_false>
# <167:cond_true>
15 00    # vload 0            # A
15 01    # vload 1            # lo1
10 01    # bipush 1           # 1
60       # iadd               # (lo1 + 1)
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 0A 33 # aldc 2611          # s[2611] = "int_le_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 98.10-98.49)"
B8 00 13 # invokestatic 19    # int_le_segs(A, (lo1 + 1), hi1, B, lo2, hi2, "int_le_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 98.10-98.49)")
A7 00 05 # goto +5            # goto <169:cond_end>
# <168:cond_false>
10 00    # bipush 0           # false
# <169:cond_end>
36 07    # vstore 7           # _result = (int_le_seg(A[lo1], B, lo2, hi2, "int_le_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 97.10-97.41)") && int_le_segs(A, (lo1 + 1), hi1, B, lo2, hi2, "int_le_segs (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 98.10-98.49)"));
15 07    # vload 7            # _result
B0       # return             # 


#<int_print_seg>
04                # number of arguments = 4
05                # number of local variables = 5
00 F7             # code length = 247 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <173:and>
A7 00 22 # goto +34           # goto <171:cond_false>
# <173:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <170:cond_true>
A7 00 18 # goto +24           # goto <171:cond_false>
# <170:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <174:cond_true>
A7 00 08 # goto +8            # goto <175:cond_false>
# <174:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <176:cond_end>
# <175:cond_false>
10 00    # bipush 0           # false
# <176:cond_end>
A7 00 05 # goto +5            # goto <172:cond_end>
# <171:cond_false>
10 00    # bipush 0           # false
# <172:cond_end>
14 0A 73 # aldc 2675          # s[2675] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 102.4-102.53: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 0A C4 # aldc 2756          # s[2756] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 102.4-102.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
14 0A D6 # aldc 2774          # s[2774] = "array["
14 0A DD # aldc 2781          # s[2781] = "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)"
B8 00 01 # invokestatic 1     # print__1("array[", "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)")
57       # pop                # (ignore result)
15 01    # vload 1            # lo
14 0B 20 # aldc 2848          # s[2848] = "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)"
B8 00 03 # invokestatic 3     # printint__1(lo, "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)")
57       # pop                # (ignore result)
14 0B 63 # aldc 2915          # s[2915] = ","
14 0B 65 # aldc 2917          # s[2917] = "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)"
B8 00 01 # invokestatic 1     # print__1(",", "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)")
57       # pop                # (ignore result)
15 02    # vload 2            # hi
14 0B A8 # aldc 2984          # s[2984] = "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)"
B8 00 03 # invokestatic 3     # printint__1(hi, "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)")
57       # pop                # (ignore result)
14 0B EB # aldc 3051          # s[3051] = ") = ["
14 0B F1 # aldc 3057          # s[3057] = "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)"
B8 00 01 # invokestatic 1     # print__1(") = [", "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 104.3-104.37)")
57       # pop                # (ignore result)
15 01    # vload 1            # lo
36 04    # vstore 4           # i = lo;
# <177:loop>
A7 00 03 # goto +3            # goto <178:body>
# <178:body>
15 01    # vload 1            # lo
15 04    # vload 4            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <180:cond_true>
A7 00 17 # goto +23           # goto <181:cond_false>
# <180:cond_true>
15 04    # vload 4            # i
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <183:cond_true>
A7 00 08 # goto +8            # goto <184:cond_false>
# <183:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <185:cond_end>
# <184:cond_false>
10 00    # bipush 0           # false
# <185:cond_end>
A7 00 05 # goto +5            # goto <182:cond_end>
# <181:cond_false>
10 00    # bipush 0           # false
# <182:cond_end>
14 0C 34 # aldc 3124          # s[3124] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 106.6-106.40: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= i) && (i <= hi)) [failure message on stack]
15 04    # vload 4            # i
15 02    # vload 2            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <186:then>
A7 00 48 # goto +72           # goto <187:else>
# <186:then>
14 0C 8A # aldc 3210          # s[3210] = ""
14 0C 8B # aldc 3211          # s[3211] = "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 108.5-108.23)"
B8 00 01 # invokestatic 1     # print__1("", "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 108.5-108.23)")
57       # pop                # (ignore result)
15 00    # vload 0            # A
15 04    # vload 4            # i
63       # aadds              # &A[i]
2E       # imload             # A[i]
14 0C CE # aldc 3278          # s[3278] = "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 108.5-108.23)"
B8 00 03 # invokestatic 3     # printint__1(A[i], "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 108.5-108.23)")
57       # pop                # (ignore result)
14 0D 11 # aldc 3345          # s[3345] = ""
14 0D 12 # aldc 3346          # s[3346] = "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 108.5-108.23)"
B8 00 01 # invokestatic 1     # print__1("", "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 108.5-108.23)")
57       # pop                # (ignore result)
15 04    # vload 4            # i
15 02    # vload 2            # hi
10 01    # bipush 1           # 1
64       # isub               # (hi - 1)
A0 00 06 # if_cmpne +6        # if (i != (hi - 1)) goto <189:then>
A7 00 10 # goto +16           # goto <190:else>
# <189:then>
14 0D 55 # aldc 3413          # s[3413] = ", "
14 0D 58 # aldc 3416          # s[3416] = "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 109.20-109.32)"
B8 00 01 # invokestatic 1     # print__1(", ", "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 109.20-109.32)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <191:endif>
# <190:else>
# <191:endif>
15 04    # vload 4            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # i += 1;
A7 00 06 # goto +6            # goto <188:endif>
# <187:else>
A7 00 06 # goto +6            # break
# <188:endif>
A7 FF 87 # goto -121          # goto <177:loop>
# <179:exit>
14 0D 9C # aldc 3484          # s[3484] = "]"
14 0D 9E # aldc 3486          # s[3486] = "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 111.3-111.14)"
B8 00 01 # invokestatic 1     # print__1("]", "int_print_seg (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 111.3-111.14)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<int_is_in__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <195:and>
A7 00 22 # goto +34           # goto <193:cond_false>
# <195:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <192:cond_true>
A7 00 18 # goto +24           # goto <193:cond_false>
# <192:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <196:cond_true>
A7 00 08 # goto +8            # goto <197:cond_false>
# <196:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <198:cond_end>
# <197:cond_false>
10 00    # bipush 0           # false
# <198:cond_end>
A7 00 05 # goto +5            # goto <194:cond_end>
# <193:cond_false>
10 00    # bipush 0           # false
# <194:cond_end>
14 0D E1 # aldc 3553          # s[3553] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 122.4-122.54: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 0E 32 # aldc 3634          # s[3634] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 122.4-122.54: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 0E 44 # aldc 3652          # s[3652] = "int_is_in__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 121.1-122.60)"
B8 00 09 # invokestatic 9     # int_is_in(x, A, lo, hi, "int_is_in__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 121.1-122.60)")
36 05    # vstore 5           # _result = int_is_in(x, A, lo, hi, "int_is_in__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 121.1-122.60)");
15 05    # vload 5            # _result
B0       # return             # 


#<int_is_sorted__1>
04                # number of arguments = 4
05                # number of local variables = 5
00 4B             # code length = 75 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <202:and>
A7 00 22 # goto +34           # goto <200:cond_false>
# <202:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <199:cond_true>
A7 00 18 # goto +24           # goto <200:cond_false>
# <199:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <203:cond_true>
A7 00 08 # goto +8            # goto <204:cond_false>
# <203:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <205:cond_end>
# <204:cond_false>
10 00    # bipush 0           # false
# <205:cond_end>
A7 00 05 # goto +5            # goto <201:cond_end>
# <200:cond_false>
10 00    # bipush 0           # false
# <201:cond_end>
14 0E 86 # aldc 3718          # s[3718] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 126.4-126.54: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 0E D7 # aldc 3799          # s[3799] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 126.4-126.54: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 02    # vload 2            # hi
14 0E E9 # aldc 3817          # s[3817] = "int_is_sorted__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 125.1-126.60)"
B8 00 0F # invokestatic 15    # int_is_sorted(A, lo, hi, "int_is_sorted__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 125.1-126.60)")
36 04    # vstore 4           # _result = int_is_sorted(A, lo, hi, "int_is_sorted__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 125.1-126.60)");
15 04    # vload 4            # _result
B0       # return             # 


#<int_swap__1>
04                # number of arguments = 4
04                # number of local variables = 4
00 58             # code length = 88 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <210:and>
A7 00 2D # goto +45           # goto <207:cond_false>
# <210:and>
15 01    # vload 1            # i
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A1 00 06 # if_icmplt +6       # if (i < \length(A)) goto <209:and>
A7 00 22 # goto +34           # goto <207:cond_false>
# <209:and>
10 00    # bipush 0           # 0
15 02    # vload 2            # j
A4 00 06 # if_icmple +6       # if (0 <= j) goto <206:cond_true>
A7 00 18 # goto +24           # goto <207:cond_false>
# <206:cond_true>
15 02    # vload 2            # j
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A1 00 06 # if_icmplt +6       # if (j < \length(A)) goto <211:cond_true>
A7 00 08 # goto +8            # goto <212:cond_false>
# <211:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <213:cond_end>
# <212:cond_false>
10 00    # bipush 0           # false
# <213:cond_end>
A7 00 05 # goto +5            # goto <208:cond_end>
# <207:cond_false>
10 00    # bipush 0           # false
# <208:cond_end>
14 0F 2F # aldc 3887          # s[3887] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 130.5-130.67: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 0F 80 # aldc 3968          # s[3968] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 130.5-130.67: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((((0 <= i) && (i < \length(A))) && (0 <= j)) && (j < \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # i
15 02    # vload 2            # j
14 0F 92 # aldc 3986          # s[3986] = "int_swap__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 129.1-130.73)"
B8 00 0A # invokestatic 10    # int_swap(A, i, j, "int_swap__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 129.1-130.73)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<int_gt_seg__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <217:and>
A7 00 22 # goto +34           # goto <215:cond_false>
# <217:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <214:cond_true>
A7 00 18 # goto +24           # goto <215:cond_false>
# <214:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <218:cond_true>
A7 00 08 # goto +8            # goto <219:cond_false>
# <218:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <220:cond_end>
# <219:cond_false>
10 00    # bipush 0           # false
# <220:cond_end>
A7 00 05 # goto +5            # goto <216:cond_end>
# <215:cond_false>
10 00    # bipush 0           # false
# <216:cond_end>
14 0F D3 # aldc 4051          # s[4051] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 135.4-135.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 10 24 # aldc 4132          # s[4132] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 135.4-135.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 10 36 # aldc 4150          # s[4150] = "int_gt_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 134.1-135.59)"
B8 00 0B # invokestatic 11    # int_gt_seg(x, A, lo, hi, "int_gt_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 134.1-135.59)")
36 05    # vstore 5           # _result = int_gt_seg(x, A, lo, hi, "int_gt_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 134.1-135.59)");
15 05    # vload 5            # _result
B0       # return             # 


#<int_ge_seg__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <224:and>
A7 00 22 # goto +34           # goto <222:cond_false>
# <224:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <221:cond_true>
A7 00 18 # goto +24           # goto <222:cond_false>
# <221:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <225:cond_true>
A7 00 08 # goto +8            # goto <226:cond_false>
# <225:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <227:cond_end>
# <226:cond_false>
10 00    # bipush 0           # false
# <227:cond_end>
A7 00 05 # goto +5            # goto <223:cond_end>
# <222:cond_false>
10 00    # bipush 0           # false
# <223:cond_end>
14 10 79 # aldc 4217          # s[4217] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 139.4-139.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 10 CA # aldc 4298          # s[4298] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 139.4-139.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 10 DC # aldc 4316          # s[4316] = "int_ge_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 138.1-139.59)"
B8 00 0C # invokestatic 12    # int_ge_seg(x, A, lo, hi, "int_ge_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 138.1-139.59)")
36 05    # vstore 5           # _result = int_ge_seg(x, A, lo, hi, "int_ge_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 138.1-139.59)");
15 05    # vload 5            # _result
B0       # return             # 


#<int_lt_seg__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <231:and>
A7 00 22 # goto +34           # goto <229:cond_false>
# <231:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <228:cond_true>
A7 00 18 # goto +24           # goto <229:cond_false>
# <228:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <232:cond_true>
A7 00 08 # goto +8            # goto <233:cond_false>
# <232:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <234:cond_end>
# <233:cond_false>
10 00    # bipush 0           # false
# <234:cond_end>
A7 00 05 # goto +5            # goto <230:cond_end>
# <229:cond_false>
10 00    # bipush 0           # false
# <230:cond_end>
14 11 1F # aldc 4383          # s[4383] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 143.4-143.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 11 70 # aldc 4464          # s[4464] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 143.4-143.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 11 82 # aldc 4482          # s[4482] = "int_lt_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 142.1-143.59)"
B8 00 0D # invokestatic 13    # int_lt_seg(x, A, lo, hi, "int_lt_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 142.1-143.59)")
36 05    # vstore 5           # _result = int_lt_seg(x, A, lo, hi, "int_lt_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 142.1-143.59)");
15 05    # vload 5            # _result
B0       # return             # 


#<int_le_seg__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <238:and>
A7 00 22 # goto +34           # goto <236:cond_false>
# <238:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <235:cond_true>
A7 00 18 # goto +24           # goto <236:cond_false>
# <235:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <239:cond_true>
A7 00 08 # goto +8            # goto <240:cond_false>
# <239:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <241:cond_end>
# <240:cond_false>
10 00    # bipush 0           # false
# <241:cond_end>
A7 00 05 # goto +5            # goto <237:cond_end>
# <236:cond_false>
10 00    # bipush 0           # false
# <237:cond_end>
14 11 C5 # aldc 4549          # s[4549] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 147.4-147.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 12 16 # aldc 4630          # s[4630] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 147.4-147.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 12 28 # aldc 4648          # s[4648] = "int_le_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 146.1-147.59)"
B8 00 0E # invokestatic 14    # int_le_seg(x, A, lo, hi, "int_le_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 146.1-147.59)")
36 05    # vstore 5           # _result = int_le_seg(x, A, lo, hi, "int_le_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 146.1-147.59)");
15 05    # vload 5            # _result
B0       # return             # 


#<int_gt_segs__1>
07                # number of arguments = 7
08                # number of local variables = 8
00 8B             # code length = 139 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <245:and>
A7 00 22 # goto +34           # goto <243:cond_false>
# <245:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <242:cond_true>
A7 00 18 # goto +24           # goto <243:cond_false>
# <242:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <246:cond_true>
A7 00 08 # goto +8            # goto <247:cond_false>
# <246:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <248:cond_end>
# <247:cond_false>
10 00    # bipush 0           # false
# <248:cond_end>
A7 00 05 # goto +5            # goto <244:cond_end>
# <243:cond_false>
10 00    # bipush 0           # false
# <244:cond_end>
14 12 6B # aldc 4715          # s[4715] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 153.4-153.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 12 BC # aldc 4796          # s[4796] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 153.4-153.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <252:and>
A7 00 22 # goto +34           # goto <250:cond_false>
# <252:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <249:cond_true>
A7 00 18 # goto +24           # goto <250:cond_false>
# <249:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <253:cond_true>
A7 00 08 # goto +8            # goto <254:cond_false>
# <253:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <255:cond_end>
# <254:cond_false>
10 00    # bipush 0           # false
# <255:cond_end>
A7 00 05 # goto +5            # goto <251:cond_end>
# <250:cond_false>
10 00    # bipush 0           # false
# <251:cond_end>
14 12 CE # aldc 4814          # s[4814] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 154.4-154.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 13 1F # aldc 4895          # s[4895] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 154.4-154.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 13 31 # aldc 4913          # s[4913] = "int_gt_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 151.1-154.63)"
B8 00 10 # invokestatic 16    # int_gt_segs(A, lo1, hi1, B, lo2, hi2, "int_gt_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 151.1-154.63)")
36 07    # vstore 7           # _result = int_gt_segs(A, lo1, hi1, B, lo2, hi2, "int_gt_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 151.1-154.63)");
15 07    # vload 7            # _result
B0       # return             # 


#<int_ge_segs__1>
07                # number of arguments = 7
08                # number of local variables = 8
00 8B             # code length = 139 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <259:and>
A7 00 22 # goto +34           # goto <257:cond_false>
# <259:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <256:cond_true>
A7 00 18 # goto +24           # goto <257:cond_false>
# <256:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <260:cond_true>
A7 00 08 # goto +8            # goto <261:cond_false>
# <260:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <262:cond_end>
# <261:cond_false>
10 00    # bipush 0           # false
# <262:cond_end>
A7 00 05 # goto +5            # goto <258:cond_end>
# <257:cond_false>
10 00    # bipush 0           # false
# <258:cond_end>
14 13 75 # aldc 4981          # s[4981] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 159.4-159.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 13 C6 # aldc 5062          # s[5062] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 159.4-159.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <266:and>
A7 00 22 # goto +34           # goto <264:cond_false>
# <266:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <263:cond_true>
A7 00 18 # goto +24           # goto <264:cond_false>
# <263:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <267:cond_true>
A7 00 08 # goto +8            # goto <268:cond_false>
# <267:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <269:cond_end>
# <268:cond_false>
10 00    # bipush 0           # false
# <269:cond_end>
A7 00 05 # goto +5            # goto <265:cond_end>
# <264:cond_false>
10 00    # bipush 0           # false
# <265:cond_end>
14 13 D8 # aldc 5080          # s[5080] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 160.4-160.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 14 29 # aldc 5161          # s[5161] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 160.4-160.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 14 3B # aldc 5179          # s[5179] = "int_ge_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 157.1-160.63)"
B8 00 11 # invokestatic 17    # int_ge_segs(A, lo1, hi1, B, lo2, hi2, "int_ge_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 157.1-160.63)")
36 07    # vstore 7           # _result = int_ge_segs(A, lo1, hi1, B, lo2, hi2, "int_ge_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 157.1-160.63)");
15 07    # vload 7            # _result
B0       # return             # 


#<int_lt_segs__1>
07                # number of arguments = 7
08                # number of local variables = 8
00 8B             # code length = 139 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <273:and>
A7 00 22 # goto +34           # goto <271:cond_false>
# <273:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <270:cond_true>
A7 00 18 # goto +24           # goto <271:cond_false>
# <270:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <274:cond_true>
A7 00 08 # goto +8            # goto <275:cond_false>
# <274:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <276:cond_end>
# <275:cond_false>
10 00    # bipush 0           # false
# <276:cond_end>
A7 00 05 # goto +5            # goto <272:cond_end>
# <271:cond_false>
10 00    # bipush 0           # false
# <272:cond_end>
14 14 7F # aldc 5247          # s[5247] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 165.4-165.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 14 D0 # aldc 5328          # s[5328] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 165.4-165.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <280:and>
A7 00 22 # goto +34           # goto <278:cond_false>
# <280:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <277:cond_true>
A7 00 18 # goto +24           # goto <278:cond_false>
# <277:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <281:cond_true>
A7 00 08 # goto +8            # goto <282:cond_false>
# <281:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <283:cond_end>
# <282:cond_false>
10 00    # bipush 0           # false
# <283:cond_end>
A7 00 05 # goto +5            # goto <279:cond_end>
# <278:cond_false>
10 00    # bipush 0           # false
# <279:cond_end>
14 14 E2 # aldc 5346          # s[5346] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 166.4-166.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 15 33 # aldc 5427          # s[5427] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 166.4-166.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 15 45 # aldc 5445          # s[5445] = "int_lt_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 163.1-166.63)"
B8 00 12 # invokestatic 18    # int_lt_segs(A, lo1, hi1, B, lo2, hi2, "int_lt_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 163.1-166.63)")
36 07    # vstore 7           # _result = int_lt_segs(A, lo1, hi1, B, lo2, hi2, "int_lt_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 163.1-166.63)");
15 07    # vload 7            # _result
B0       # return             # 


#<int_le_segs__1>
07                # number of arguments = 7
08                # number of local variables = 8
00 8B             # code length = 139 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <287:and>
A7 00 22 # goto +34           # goto <285:cond_false>
# <287:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <284:cond_true>
A7 00 18 # goto +24           # goto <285:cond_false>
# <284:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <288:cond_true>
A7 00 08 # goto +8            # goto <289:cond_false>
# <288:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <290:cond_end>
# <289:cond_false>
10 00    # bipush 0           # false
# <290:cond_end>
A7 00 05 # goto +5            # goto <286:cond_end>
# <285:cond_false>
10 00    # bipush 0           # false
# <286:cond_end>
14 15 89 # aldc 5513          # s[5513] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 171.4-171.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 15 DA # aldc 5594          # s[5594] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 171.4-171.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <294:and>
A7 00 22 # goto +34           # goto <292:cond_false>
# <294:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <291:cond_true>
A7 00 18 # goto +24           # goto <292:cond_false>
# <291:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <295:cond_true>
A7 00 08 # goto +8            # goto <296:cond_false>
# <295:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <297:cond_end>
# <296:cond_false>
10 00    # bipush 0           # false
# <297:cond_end>
A7 00 05 # goto +5            # goto <293:cond_end>
# <292:cond_false>
10 00    # bipush 0           # false
# <293:cond_end>
14 15 EC # aldc 5612          # s[5612] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 172.4-172.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 16 3D # aldc 5693          # s[5693] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 172.4-172.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 16 4F # aldc 5711          # s[5711] = "int_le_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 169.1-172.63)"
B8 00 13 # invokestatic 19    # int_le_segs(A, lo1, hi1, B, lo2, hi2, "int_le_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 169.1-172.63)")
36 07    # vstore 7           # _result = int_le_segs(A, lo1, hi1, B, lo2, hi2, "int_le_segs__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 169.1-172.63)");
15 07    # vload 7            # _result
B0       # return             # 


#<int_print_seg__1>
04                # number of arguments = 4
04                # number of local variables = 4
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <301:and>
A7 00 22 # goto +34           # goto <299:cond_false>
# <301:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <298:cond_true>
A7 00 18 # goto +24           # goto <299:cond_false>
# <298:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <302:cond_true>
A7 00 08 # goto +8            # goto <303:cond_false>
# <302:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <304:cond_end>
# <303:cond_false>
10 00    # bipush 0           # false
# <304:cond_end>
A7 00 05 # goto +5            # goto <300:cond_end>
# <299:cond_false>
10 00    # bipush 0           # false
# <300:cond_end>
14 16 93 # aldc 5779          # s[5779] = "/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 176.4-176.53: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 16 E4 # aldc 5860          # s[5860] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 176.4-176.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 02    # vload 2            # hi
14 16 F6 # aldc 5878          # s[5878] = "int_print_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 175.1-176.59)"
B8 00 14 # invokestatic 20    # int_print_seg(A, lo, hi, "int_print_seg__1 (/tmp/tmp.s2zpkBvenI/int_arrayutil.c0: 175.1-176.59)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<string_length__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 09 # invokenative 9     # string_length(s)
36 02    # vstore 2           # _result = string_length(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_charat__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # idx
A4 00 06 # if_icmple +6       # if (0 <= idx) goto <305:cond_true>
A7 00 1D # goto +29           # goto <306:cond_false>
# <305:cond_true>
15 01    # vload 1            # idx
15 00    # vload 0            # s
14 17 3C # aldc 5948          # s[5948] = "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
B8 00 21 # invokestatic 33    # string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")
A1 00 06 # if_icmplt +6       # if (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")) goto <308:cond_true>
A7 00 08 # goto +8            # goto <309:cond_false>
# <308:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <310:cond_end>
# <309:cond_false>
10 00    # bipush 0           # false
# <310:cond_end>
A7 00 05 # goto +5            # goto <307:cond_end>
# <306:cond_false>
10 00    # bipush 0           # false
# <307:cond_end>
14 17 84 # aldc 6020          # s[6020] = "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 17 D6 # aldc 6102          # s[6102] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= idx) && (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"))) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # idx
B7 00 0A # invokenative 10    # string_charat(s, idx)
36 03    # vstore 3           # _result = string_charat(s, idx);
15 03    # vload 3            # _result
B0       # return             # 


#<string_join__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 36             # code length = 54 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 07 # invokenative 7     # string_join(a, b)
36 03    # vstore 3           # _result = string_join(a, b);
15 03    # vload 3            # _result
14 17 E8 # aldc 6120          # s[6120] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
B8 00 21 # invokestatic 33    # string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)")
15 00    # vload 0            # a
14 18 2E # aldc 6190          # s[6190] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
B8 00 21 # invokestatic 33    # string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)")
15 01    # vload 1            # b
14 18 74 # aldc 6260          # s[6260] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
B8 00 21 # invokestatic 33    # string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)")
60       # iadd               # (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) goto <311:cond_true>
A7 00 08 # goto +8            # goto <312:cond_false>
# <311:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <313:cond_end>
# <312:cond_false>
10 00    # bipush 0           # false
# <313:cond_end>
14 18 BA # aldc 6330          # s[6330] = "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_sub__1>
04                # number of arguments = 4
05                # number of local variables = 5
00 6B             # code length = 107 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # start
A4 00 06 # if_icmple +6       # if (0 <= start) goto <317:and>
A7 00 27 # goto +39           # goto <315:cond_false>
# <317:and>
15 01    # vload 1            # start
15 02    # vload 2            # end
A4 00 06 # if_icmple +6       # if (start <= end) goto <314:cond_true>
A7 00 1D # goto +29           # goto <315:cond_false>
# <314:cond_true>
15 02    # vload 2            # end
15 00    # vload 0            # a
14 19 0A # aldc 6410          # s[6410] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
B8 00 21 # invokestatic 33    # string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")
A4 00 06 # if_icmple +6       # if (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")) goto <318:cond_true>
A7 00 08 # goto +8            # goto <319:cond_false>
# <318:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <320:cond_end>
# <319:cond_false>
10 00    # bipush 0           # false
# <320:cond_end>
A7 00 05 # goto +5            # goto <316:cond_end>
# <315:cond_false>
10 00    # bipush 0           # false
# <316:cond_end>
14 19 4F # aldc 6479          # s[6479] = "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 19 A1 # aldc 6561          # s[6561] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= start) && (start <= end)) && (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"))) [failure message on stack]
15 00    # vload 0            # a
15 01    # vload 1            # start
15 02    # vload 2            # end
B7 00 0B # invokenative 11    # string_sub(a, start, end)
36 04    # vstore 4           # _result = string_sub(a, start, end);
15 04    # vload 4            # _result
14 19 B3 # aldc 6579          # s[6579] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
B8 00 21 # invokestatic 33    # string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)")
15 02    # vload 2            # end
15 01    # vload 1            # start
64       # isub               # (end - start)
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) goto <321:cond_true>
A7 00 08 # goto +8            # goto <322:cond_false>
# <321:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <323:cond_end>
# <322:cond_false>
10 00    # bipush 0           # false
# <323:cond_end>
14 19 F8 # aldc 6648          # s[6648] = "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<string_equal__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 0C             # code length = 12 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 0C # invokenative 12    # string_equal(a, b)
36 03    # vstore 3           # _result = string_equal(a, b);
15 03    # vload 3            # _result
B0       # return             # 


#<string_compare__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 30             # code length = 48 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 0D # invokenative 13    # string_compare(a, b)
36 03    # vstore 3           # _result = string_compare(a, b);
10 FF    # bipush -1          # -1
15 03    # vload 3            # _result
A4 00 06 # if_icmple +6       # if (-(1) <= _result) goto <324:cond_true>
A7 00 17 # goto +23           # goto <325:cond_false>
# <324:cond_true>
15 03    # vload 3            # _result
10 01    # bipush 1           # 1
A4 00 06 # if_icmple +6       # if (_result <= 1) goto <327:cond_true>
A7 00 08 # goto +8            # goto <328:cond_false>
# <327:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <329:cond_end>
# <328:cond_false>
10 00    # bipush 0           # false
# <329:cond_end>
A7 00 05 # goto +5            # goto <326:cond_end>
# <325:cond_false>
10 00    # bipush 0           # false
# <326:cond_end>
14 1A 48 # aldc 6728          # s[6728] = "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
CF       # assert             # assert ((-(1) <= _result) && (_result <= 1)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_fromint__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # i
B7 00 0E # invokenative 14    # string_fromint(i)
36 02    # vstore 2           # _result = string_fromint(i);
15 02    # vload 2            # _result
B0       # return             # 


#<string_frombool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # b
B7 00 0F # invokenative 15    # string_frombool(b)
36 02    # vstore 2           # _result = string_frombool(b);
15 02    # vload 2            # _result
B0       # return             # 


#<string_fromchar__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 62             # code length = 98 bytes
15 00    # vload 0            # c
10 00    # bipush 0           # '\000'
A0 00 06 # if_cmpne +6        # if (c != '\0') goto <330:cond_true>
A7 00 08 # goto +8            # goto <331:cond_false>
# <330:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <332:cond_end>
# <331:cond_false>
10 00    # bipush 0           # false
# <332:cond_end>
14 1A 98 # aldc 6808          # s[6808] = "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 1A EA # aldc 6890          # s[6890] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (c != '\0') [failure message on stack]
15 00    # vload 0            # c
B7 00 10 # invokenative 16    # string_fromchar(c)
36 02    # vstore 2           # _result = string_fromchar(c);
15 02    # vload 2            # _result
14 1A FC # aldc 6908          # s[6908] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
B8 00 21 # invokestatic 33    # string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)")
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) goto <333:cond_true>
A7 00 08 # goto +8            # goto <334:cond_false>
# <333:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <335:cond_end>
# <334:cond_false>
10 00    # bipush 0           # false
# <335:cond_end>
14 1B 46 # aldc 6982          # s[6982] = "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) [failure message on stack]
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
14 1B 96 # aldc 7062          # s[7062] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
B8 00 22 # invokestatic 34    # string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)")
15 00    # vload 0            # c
9F 00 06 # if_cmpeq +6        # if (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) goto <336:cond_true>
A7 00 08 # goto +8            # goto <337:cond_false>
# <336:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <338:cond_end>
# <337:cond_false>
10 00    # bipush 0           # false
# <338:cond_end>
14 1B E0 # aldc 7136          # s[7136] = "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
CF       # assert             # assert (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_tolower__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 11 # invokenative 17    # string_tolower(s)
36 02    # vstore 2           # _result = string_tolower(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_terminated__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3C             # code length = 60 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <339:cond_true>
A7 00 18 # goto +24           # goto <340:cond_false>
# <339:cond_true>
15 01    # vload 1            # n
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (n <= \length(A)) goto <342:cond_true>
A7 00 08 # goto +8            # goto <343:cond_false>
# <342:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <344:cond_end>
# <343:cond_false>
10 00    # bipush 0           # false
# <344:cond_end>
A7 00 05 # goto +5            # goto <341:cond_end>
# <340:cond_false>
10 00    # bipush 0           # false
# <341:cond_end>
14 1C 30 # aldc 7216          # s[7216] = "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 1C 82 # aldc 7298          # s[7298] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # n
B7 00 12 # invokenative 18    # string_terminated(A, n)
36 03    # vstore 3           # _result = string_terminated(A, n);
15 03    # vload 3            # _result
B0       # return             # 


#<string_to_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 40             # code length = 64 bytes
15 00    # vload 0            # s
B7 00 13 # invokenative 19    # string_to_chararray(s)
36 02    # vstore 2           # _result = string_to_chararray(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 1C 94 # aldc 7316          # s[7316] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
B8 00 21 # invokestatic 33    # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)
A2 00 06 # if_icmpge +6       # if (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) goto <345:cond_true>
A7 00 08 # goto +8            # goto <346:cond_false>
# <345:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <347:cond_end>
# <346:cond_false>
10 00    # bipush 0           # false
# <347:cond_end>
14 1C E2 # aldc 7394          # s[7394] = "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
CF       # assert             # assert (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # s
14 1D 32 # aldc 7474          # s[7474] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
B8 00 21 # invokestatic 33    # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1)
14 1D 80 # aldc 7552          # s[7552] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
B8 00 2B # invokestatic 43    # string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)")
14 1D CE # aldc 7630          # s[7630] = "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
CF       # assert             # assert string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_from_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 43             # code length = 67 bytes
15 00    # vload 0            # A
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
14 1E 1E # aldc 7710          # s[7710] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
B8 00 2B # invokestatic 43    # string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)")
14 1E 6E # aldc 7790          # s[7790] = "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 1E C0 # aldc 7872          # s[7872] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)") [failure message on stack]
15 00    # vload 0            # A
B7 00 14 # invokenative 20    # string_from_chararray(A)
36 02    # vstore 2           # _result = string_from_chararray(A);
15 02    # vload 2            # _result
14 1E D2 # aldc 7890          # s[7890] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
B8 00 21 # invokestatic 33    # string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1)
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) goto <348:cond_true>
A7 00 08 # goto +8            # goto <349:cond_false>
# <348:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <350:cond_end>
# <349:cond_false>
10 00    # bipush 0           # false
# <350:cond_end>
14 1F 22 # aldc 7970          # s[7970] = "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
CF       # assert             # assert ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_ord__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2E             # code length = 46 bytes
15 00    # vload 0            # c
B7 00 15 # invokenative 21    # char_ord(c)
36 02    # vstore 2           # _result = char_ord(c);
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <351:cond_true>
A7 00 17 # goto +23           # goto <352:cond_false>
# <351:cond_true>
15 02    # vload 2            # _result
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (_result <= 127) goto <354:cond_true>
A7 00 08 # goto +8            # goto <355:cond_false>
# <354:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <356:cond_end>
# <355:cond_false>
10 00    # bipush 0           # false
# <356:cond_end>
A7 00 05 # goto +5            # goto <353:cond_end>
# <352:cond_false>
10 00    # bipush 0           # false
# <353:cond_end>
14 1F 72 # aldc 8050          # s[8050] = "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= 127)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_chr__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 39             # code length = 57 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <357:cond_true>
A7 00 17 # goto +23           # goto <358:cond_false>
# <357:cond_true>
15 00    # vload 0            # n
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (n <= 127) goto <360:cond_true>
A7 00 08 # goto +8            # goto <361:cond_false>
# <360:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <362:cond_end>
# <361:cond_false>
10 00    # bipush 0           # false
# <362:cond_end>
A7 00 05 # goto +5            # goto <359:cond_end>
# <358:cond_false>
10 00    # bipush 0           # false
# <359:cond_end>
14 1F C2 # aldc 8130          # s[8130] = "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 20 14 # aldc 8212          # s[8212] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= 127)) [failure message on stack]
15 00    # vload 0            # n
B7 00 16 # invokenative 22    # char_chr(n)
36 02    # vstore 2           # _result = char_chr(n);
15 02    # vload 2            # _result
B0       # return             # 


#<file_closed__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 29             # code length = 41 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <363:cond_true>
A7 00 08 # goto +8            # goto <364:cond_false>
# <363:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <365:cond_end>
# <364:cond_false>
10 00    # bipush 0           # false
# <365:cond_end>
14 20 26 # aldc 8230          # s[8230] = "/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 20 76 # aldc 8310          # s[8310] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
B7 00 17 # invokenative 23    # file_closed(f)
36 02    # vstore 2           # _result = file_closed(f);
15 02    # vload 2            # _result
B0       # return             # 


#<file_read__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 27             # code length = 39 bytes
15 00    # vload 0            # path
B7 00 18 # invokenative 24    # file_read(path)
36 02    # vstore 2           # _result = file_read(path);
15 02    # vload 2            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <366:cond_true>
A7 00 08 # goto +8            # goto <367:cond_false>
# <366:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <368:cond_end>
# <367:cond_false>
15 02    # vload 2            # _result
14 20 88 # aldc 8328          # s[8328] = "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"
B8 00 30 # invokestatic 48    # file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"))
# <368:cond_end>
14 20 CA # aldc 8394          # s[8394] = "/afs/andrew/course/15/122/lib/file.h0: 15.6-15.55: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || !(file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<file_close__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 5D             # code length = 93 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <369:cond_true>
A7 00 08 # goto +8            # goto <370:cond_false>
# <369:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <371:cond_end>
# <370:cond_false>
10 00    # bipush 0           # false
# <371:cond_end>
14 21 18 # aldc 8472          # s[8472] = "/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 21 68 # aldc 8552          # s[8552] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 21 7A # aldc 8570          # s[8570] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"
B8 00 30 # invokestatic 48    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"))
14 21 BD # aldc 8637          # s[8637] = "/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 22 0D # aldc 8717          # s[8717] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 19 # invokenative 25    # file_close(f)
57       # pop                # (ignore result)
15 00    # vload 0            # f
14 22 1F # aldc 8735          # s[8735] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
B8 00 30 # invokestatic 48    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)")
14 22 62 # aldc 8802          # s[8802] = "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
CF       # assert             # assert file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # f
14 22 B0 # aldc 8880          # s[8880] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
B8 00 30 # invokestatic 48    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)")
14 22 F3 # aldc 8947          # s[8947] = "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
CF       # assert             # assert file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<file_eof__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 43             # code length = 67 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <372:cond_true>
A7 00 08 # goto +8            # goto <373:cond_false>
# <372:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <374:cond_end>
# <373:cond_false>
10 00    # bipush 0           # false
# <374:cond_end>
14 23 41 # aldc 9025          # s[9025] = "/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 23 91 # aldc 9105          # s[9105] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 23 A3 # aldc 9123          # s[9123] = "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"
B8 00 30 # invokestatic 48    # file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"))
14 23 E4 # aldc 9188          # s[9188] = "/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 24 34 # aldc 9268          # s[9268] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 1A # invokenative 26    # file_eof(f)
36 02    # vstore 2           # _result = file_eof(f);
15 02    # vload 2            # _result
B0       # return             # 


#<file_readline__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 5D             # code length = 93 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <375:cond_true>
A7 00 08 # goto +8            # goto <376:cond_false>
# <375:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <377:cond_end>
# <376:cond_false>
10 00    # bipush 0           # false
# <377:cond_end>
14 24 46 # aldc 9286          # s[9286] = "/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 24 96 # aldc 9366          # s[9366] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 24 A8 # aldc 9384          # s[9384] = "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"
B8 00 30 # invokestatic 48    # file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"))
14 24 EE # aldc 9454          # s[9454] = "/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 25 3E # aldc 9534          # s[9534] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)")) [failure message on stack]
15 00    # vload 0            # f
14 25 50 # aldc 9552          # s[9552] = "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"
B8 00 33 # invokestatic 51    # file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)")
10 01    # bipush 1           # 
82       # ixor               # !(file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"))
14 25 96 # aldc 9622          # s[9622] = "/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 25 E6 # aldc 9702          # s[9702] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 1B # invokenative 27    # file_readline(f)
36 02    # vstore 2           # _result = file_readline(f);
15 02    # vload 2            # _result
B0       # return             # 


#<int_size>
01                # number of arguments = 1
02                # number of local variables = 2
00 07             # code length = 7 bytes
10 04    # bipush 4           # 4
36 01    # vstore 1           # _result = 4;
15 01    # vload 1            # _result
B0       # return             # 


#<int_size__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 25 F8 # aldc 9720          # s[9720] = "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
B8 00 35 # invokestatic 53    # int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)")
36 01    # vstore 1           # _result = int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)");
15 01    # vload 1            # _result
10 04    # bipush 4           # 4
9F 00 06 # if_cmpeq +6        # if (_result == 4) goto <378:cond_true>
A7 00 08 # goto +8            # goto <379:cond_false>
# <378:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <380:cond_end>
# <379:cond_false>
10 00    # bipush 0           # false
# <380:cond_end>
14 26 36 # aldc 9782          # s[9782] = "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
CF       # assert             # assert (_result == 4) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_max>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 02 # ildc 2             # c[2] = 2147483647
36 01    # vstore 1           # _result = 2147483647;
15 01    # vload 1            # _result
B0       # return             # 


#<int_max__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 26 82 # aldc 9858          # s[9858] = "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
B8 00 37 # invokestatic 55    # int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)")
36 01    # vstore 1           # _result = int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)");
15 01    # vload 1            # _result
13 00 00 # ildc 0             # c[0] = 2147483647
9F 00 06 # if_cmpeq +6        # if (_result == 2147483647) goto <381:cond_true>
A7 00 08 # goto +8            # goto <382:cond_false>
# <381:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <383:cond_end>
# <382:cond_false>
10 00    # bipush 0           # false
# <383:cond_end>
14 26 C1 # aldc 9921          # s[9921] = "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
CF       # assert             # assert (_result == 2147483647) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_min>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 03 # ildc 3             # c[3] = -2147483648
36 01    # vstore 1           # _result = -2147483648;
15 01    # vload 1            # _result
B0       # return             # 


#<int_min__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 27 0F # aldc 9999          # s[9999] = "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
B8 00 39 # invokestatic 57    # int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)")
36 01    # vstore 1           # _result = int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)");
15 01    # vload 1            # _result
13 00 01 # ildc 1             # c[1] = -2147483648
9F 00 06 # if_cmpeq +6        # if (_result == -(-2147483648)) goto <384:cond_true>
A7 00 08 # goto +8            # goto <385:cond_false>
# <384:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <386:cond_end>
# <385:cond_false>
10 00    # bipush 0           # false
# <386:cond_end>
14 27 4E # aldc 10062         # s[10062] = "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
CF       # assert             # assert (_result == -(-2147483648)) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<abs>
02                # number of arguments = 2
03                # number of local variables = 3
00 52             # code length = 82 bytes
15 00    # vload 0            # x
14 2B F7 # aldc 11255         # s[11255] = "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
B8 00 3A # invokestatic 58    # int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) goto <453:cond_true>
A7 00 08 # goto +8            # goto <454:cond_false>
# <453:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <455:cond_end>
# <454:cond_false>
10 00    # bipush 0           # false
# <455:cond_end>
14 2C 30 # aldc 11312         # s[11312] = "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2C 80 # aldc 11392         # s[11392] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) [failure message on stack]
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <456:cond_true>
A7 00 0B # goto +11           # goto <457:cond_false>
# <456:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <458:cond_end>
# <457:cond_false>
15 00    # vload 0            # x
# <458:cond_end>
36 02    # vstore 2           # _result = ((x < 0) ? -(x) : x);
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <459:cond_true>
A7 00 08 # goto +8            # goto <460:cond_false>
# <459:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <461:cond_end>
# <460:cond_false>
10 00    # bipush 0           # false
# <461:cond_end>
14 2C 92 # aldc 11410         # s[11410] = "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<abs__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 6D             # code length = 109 bytes
15 00    # vload 0            # x
14 27 9C # aldc 10140         # s[10140] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
B8 00 3A # invokestatic 58    # int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) goto <387:cond_true>
A7 00 08 # goto +8            # goto <388:cond_false>
# <387:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <389:cond_end>
# <388:cond_false>
10 00    # bipush 0           # false
# <389:cond_end>
14 27 D8 # aldc 10200         # s[10200] = "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 28 28 # aldc 10280         # s[10280] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) [failure message on stack]
15 00    # vload 0            # x
14 28 3A # aldc 10298         # s[10298] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
B8 00 3B # invokestatic 59    # abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)")
36 02    # vstore 2           # _result = abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)");
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <390:cond_true>
A7 00 08 # goto +8            # goto <391:cond_false>
# <390:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <392:cond_end>
# <391:cond_false>
10 00    # bipush 0           # false
# <392:cond_end>
14 28 75 # aldc 10357         # s[10357] = "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <396:cond_true>
A7 00 0B # goto +11           # goto <397:cond_false>
# <396:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <398:cond_end>
# <397:cond_false>
15 00    # vload 0            # x
# <398:cond_end>
9F 00 06 # if_cmpeq +6        # if (_result == ((x < 0) ? -(x) : x)) goto <393:cond_true>
A7 00 08 # goto +8            # goto <394:cond_false>
# <393:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <395:cond_end>
# <394:cond_false>
10 00    # bipush 0           # false
# <395:cond_end>
14 28 C3 # aldc 10435         # s[10435] = "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
CF       # assert             # assert (_result == ((x < 0) ? -(x) : x)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<max>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <423:cond_true>
A7 00 08 # goto +8            # goto <424:cond_false>
# <423:cond_true>
15 00    # vload 0            # x
A7 00 05 # goto +5            # goto <425:cond_end>
# <424:cond_false>
15 01    # vload 1            # y
# <425:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? x : y);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <426:cond_true>
A7 00 08 # goto +8            # goto <427:cond_false>
# <426:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <428:cond_end>
# <427:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <429:cond_true>
A7 00 08 # goto +8            # goto <430:cond_false>
# <429:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <431:cond_end>
# <430:cond_false>
10 00    # bipush 0           # false
# <431:cond_end>
# <428:cond_end>
14 2A BF # aldc 10943         # s[10943] = "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <432:cond_true>
A7 00 17 # goto +23           # goto <433:cond_false>
# <432:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <435:cond_true>
A7 00 08 # goto +8            # goto <436:cond_false>
# <435:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <437:cond_end>
# <436:cond_false>
10 00    # bipush 0           # false
# <437:cond_end>
A7 00 05 # goto +5            # goto <434:cond_end>
# <433:cond_false>
10 00    # bipush 0           # false
# <434:cond_end>
14 2B 0D # aldc 11021         # s[11021] = "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<max__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 29 11 # aldc 10513         # s[10513] = "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
B8 00 3D # invokestatic 61    # max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)")
36 03    # vstore 3           # _result = max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <399:cond_true>
A7 00 08 # goto +8            # goto <400:cond_false>
# <399:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <401:cond_end>
# <400:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <402:cond_true>
A7 00 08 # goto +8            # goto <403:cond_false>
# <402:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <404:cond_end>
# <403:cond_false>
10 00    # bipush 0           # false
# <404:cond_end>
# <401:cond_end>
14 29 4C # aldc 10572         # s[10572] = "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <405:cond_true>
A7 00 17 # goto +23           # goto <406:cond_false>
# <405:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <408:cond_true>
A7 00 08 # goto +8            # goto <409:cond_false>
# <408:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <410:cond_end>
# <409:cond_false>
10 00    # bipush 0           # false
# <410:cond_end>
A7 00 05 # goto +5            # goto <407:cond_end>
# <406:cond_false>
10 00    # bipush 0           # false
# <407:cond_end>
14 29 9A # aldc 10650         # s[10650] = "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <438:cond_true>
A7 00 08 # goto +8            # goto <439:cond_false>
# <438:cond_true>
15 01    # vload 1            # y
A7 00 05 # goto +5            # goto <440:cond_end>
# <439:cond_false>
15 00    # vload 0            # x
# <440:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? y : x);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <441:cond_true>
A7 00 08 # goto +8            # goto <442:cond_false>
# <441:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <443:cond_end>
# <442:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <444:cond_true>
A7 00 08 # goto +8            # goto <445:cond_false>
# <444:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <446:cond_end>
# <445:cond_false>
10 00    # bipush 0           # false
# <446:cond_end>
# <443:cond_end>
14 2B 5B # aldc 11099         # s[11099] = "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <447:cond_true>
A7 00 17 # goto +23           # goto <448:cond_false>
# <447:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <450:cond_true>
A7 00 08 # goto +8            # goto <451:cond_false>
# <450:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <452:cond_end>
# <451:cond_false>
10 00    # bipush 0           # false
# <452:cond_end>
A7 00 05 # goto +5            # goto <449:cond_end>
# <448:cond_false>
10 00    # bipush 0           # false
# <449:cond_end>
14 2B A9 # aldc 11177         # s[11177] = "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 29 E8 # aldc 10728         # s[10728] = "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
B8 00 3F # invokestatic 63    # min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)")
36 03    # vstore 3           # _result = min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <411:cond_true>
A7 00 08 # goto +8            # goto <412:cond_false>
# <411:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <413:cond_end>
# <412:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <414:cond_true>
A7 00 08 # goto +8            # goto <415:cond_false>
# <414:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <416:cond_end>
# <415:cond_false>
10 00    # bipush 0           # false
# <416:cond_end>
# <413:cond_end>
14 2A 23 # aldc 10787         # s[10787] = "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <417:cond_true>
A7 00 17 # goto +23           # goto <418:cond_false>
# <417:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <420:cond_true>
A7 00 08 # goto +8            # goto <421:cond_false>
# <420:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <422:cond_end>
# <421:cond_false>
10 00    # bipush 0           # false
# <422:cond_end>
A7 00 05 # goto +5            # goto <419:cond_end>
# <418:cond_false>
10 00    # bipush 0           # false
# <419:cond_end>
14 2A 71 # aldc 10865         # s[10865] = "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<int2hex>
02                # number of arguments = 2
06                # number of local variables = 6
00 AE             # code length = 174 bytes
10 02    # bipush 2           # 2
14 2E 46 # aldc 11846         # s[11846] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
B8 00 36 # invokestatic 54    # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"))
36 03    # vstore 3           # digits = (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"));
15 03    # vload 3            # digits
10 01    # bipush 1           # 1
60       # iadd               # (digits + 1)
BC 01    # newarray 1         # alloc_array(char, (digits + 1))
36 04    # vstore 4           # s = alloc_array(char, (digits + 1));
15 04    # vload 4            # s
15 03    # vload 3            # digits
63       # aadds              # &s[digits]
10 00    # bipush 0           # '\000'
55       # cmstore            # s[digits] = '\0';
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <476:loop>
A7 00 03 # goto +3            # goto <477:body>
# <477:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <479:cond_true>
A7 00 17 # goto +23           # goto <480:cond_false>
# <479:cond_true>
15 05    # vload 5            # i
15 03    # vload 3            # digits
A4 00 06 # if_icmple +6       # if (i <= digits) goto <482:cond_true>
A7 00 08 # goto +8            # goto <483:cond_false>
# <482:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <484:cond_end>
# <483:cond_false>
10 00    # bipush 0           # false
# <484:cond_end>
A7 00 05 # goto +5            # goto <481:cond_end>
# <480:cond_false>
10 00    # bipush 0           # false
# <481:cond_end>
14 2E 83 # aldc 11907         # s[11907] = "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= i) && (i <= digits)) [failure message on stack]
15 05    # vload 5            # i
15 03    # vload 3            # digits
A1 00 06 # if_icmplt +6       # if (i < digits) goto <485:then>
A7 00 2B # goto +43           # goto <486:else>
# <485:then>
15 04    # vload 4            # s
15 03    # vload 3            # digits
15 05    # vload 5            # i
64       # isub               # (digits - i)
10 01    # bipush 1           # 1
64       # isub               # ((digits - i) - 1)
63       # aadds              # &s[((digits - i) - 1)]
15 00    # vload 0            # x
10 0F    # bipush 15          # 15
7E       # iand               # (x & 15)
14 2E D8 # aldc 11992         # s[11992] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
B8 00 42 # invokestatic 66    # hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)")
55       # cmstore            # s[((digits - i) - 1)] = hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)");
15 00    # vload 0            # x
10 04    # bipush 4           # 4
7A       # ishr               # (x >> 4)
36 00    # vstore 0           # x = (x >> 4);
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <487:endif>
# <486:else>
A7 00 06 # goto +6            # break
# <487:endif>
A7 FF A4 # goto -92           # goto <476:loop>
# <478:exit>
15 04    # vload 4            # s
14 2F 15 # aldc 12053         # s[12053] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
B8 00 2D # invokestatic 45    # string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)")
36 02    # vstore 2           # _result = string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)");
15 02    # vload 2            # _result
14 2F 52 # aldc 12114         # s[12114] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
B8 00 21 # invokestatic 33    # string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)")
10 02    # bipush 2           # 2
14 2F 8F # aldc 12175         # s[12175] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
B8 00 36 # invokestatic 54    # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) goto <488:cond_true>
A7 00 08 # goto +8            # goto <489:cond_false>
# <488:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <490:cond_end>
# <489:cond_false>
10 00    # bipush 0           # false
# <490:cond_end>
14 2F CC # aldc 12236         # s[12236] = "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<hexdig2char>
02                # number of arguments = 2
03                # number of local variables = 3
00 93             # code length = 147 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <462:cond_true>
A7 00 17 # goto +23           # goto <463:cond_false>
# <462:cond_true>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <465:cond_true>
A7 00 08 # goto +8            # goto <466:cond_false>
# <465:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <467:cond_end>
# <466:cond_false>
10 00    # bipush 0           # false
# <467:cond_end>
A7 00 05 # goto +5            # goto <464:cond_end>
# <463:cond_false>
10 00    # bipush 0           # false
# <464:cond_end>
14 2C E0 # aldc 11488         # s[11488] = "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2D 30 # aldc 11568         # s[11568] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= d) && (d < 16)) [failure message on stack]
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <471:and>
A7 00 26 # goto +38           # goto <469:else>
# <471:and>
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
A1 00 06 # if_icmplt +6       # if (d < 10) goto <468:then>
A7 00 1C # goto +28           # goto <469:else>
# <468:then>
10 30    # bipush 48          # '0'
14 2D 42 # aldc 11586         # s[11586] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
B8 00 2E # invokestatic 46    # char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)")
15 00    # vload 0            # d
60       # iadd               # (char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d)
14 2D 83 # aldc 11651         # s[11651] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
B8 00 2F # invokestatic 47    # char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 3A # goto +58           # goto <470:endif>
# <469:else>
10 0A    # bipush 10          # 10
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (10 <= d) goto <475:and>
A7 00 29 # goto +41           # goto <473:else>
# <475:and>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <472:then>
A7 00 1F # goto +31           # goto <473:else>
# <472:then>
10 41    # bipush 65          # 'A'
14 2D C4 # aldc 11716         # s[11716] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
B8 00 2E # invokestatic 46    # char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)")
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
64       # isub               # (d - 10)
60       # iadd               # (char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10))
14 2E 05 # aldc 11781         # s[11781] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
B8 00 2F # invokestatic 47    # char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 0A # goto +10           # goto <474:endif>
# <473:else>
10 3F    # bipush 63          # '\?'
36 02    # vstore 2           # _result = '?';
15 02    # vload 2            # _result
B0       # return             # 
# <474:endif>
# <470:endif>


#<is_space>
02                # number of arguments = 2
03                # number of local variables = 3
01 79             # code length = 377 bytes
15 00    # vload 0            # c
10 20    # bipush 32          # ' '
9F 01 5A # if_cmpeq +346      # if (c == ' ') goto <491:cond_true>
A7 00 03 # goto +3            # goto <527:or>
# <527:or>
15 00    # vload 0            # c
10 09    # bipush 9           # '\t'
9F 01 50 # if_cmpeq +336      # if (c == '\t') goto <491:cond_true>
A7 00 03 # goto +3            # goto <526:or>
# <526:or>
15 00    # vload 0            # c
10 0A    # bipush 10          # '\n'
9F 01 46 # if_cmpeq +326      # if (c == '\n') goto <491:cond_true>
A7 00 03 # goto +3            # goto <525:or>
# <525:or>
15 00    # vload 0            # c
10 0D    # bipush 13          # '\r'
9F 01 3C # if_cmpeq +316      # if (c == '\r') goto <491:cond_true>
A7 00 03 # goto +3            # goto <524:or>
# <524:or>
15 00    # vload 0            # c
10 2C    # bipush 44          # ','
9F 01 32 # if_cmpeq +306      # if (c == ',') goto <491:cond_true>
A7 00 03 # goto +3            # goto <523:or>
# <523:or>
15 00    # vload 0            # c
10 2E    # bipush 46          # '.'
9F 01 28 # if_cmpeq +296      # if (c == '.') goto <491:cond_true>
A7 00 03 # goto +3            # goto <522:or>
# <522:or>
15 00    # vload 0            # c
10 3B    # bipush 59          # ';'
9F 01 1E # if_cmpeq +286      # if (c == ';') goto <491:cond_true>
A7 00 03 # goto +3            # goto <521:or>
# <521:or>
15 00    # vload 0            # c
10 3A    # bipush 58          # ':'
9F 01 14 # if_cmpeq +276      # if (c == ':') goto <491:cond_true>
A7 00 03 # goto +3            # goto <520:or>
# <520:or>
15 00    # vload 0            # c
10 22    # bipush 34          # '\"'
9F 01 0A # if_cmpeq +266      # if (c == '\"') goto <491:cond_true>
A7 00 03 # goto +3            # goto <519:or>
# <519:or>
15 00    # vload 0            # c
10 2D    # bipush 45          # '-'
9F 01 00 # if_cmpeq +256      # if (c == '-') goto <491:cond_true>
A7 00 03 # goto +3            # goto <518:or>
# <518:or>
15 00    # vload 0            # c
10 21    # bipush 33          # '!'
9F 00 F6 # if_cmpeq +246      # if (c == '!') goto <491:cond_true>
A7 00 03 # goto +3            # goto <517:or>
# <517:or>
15 00    # vload 0            # c
10 3F    # bipush 63          # '\?'
9F 00 EC # if_cmpeq +236      # if (c == '?') goto <491:cond_true>
A7 00 03 # goto +3            # goto <516:or>
# <516:or>
15 00    # vload 0            # c
10 7C    # bipush 124         # '|'
9F 00 E2 # if_cmpeq +226      # if (c == '|') goto <491:cond_true>
A7 00 03 # goto +3            # goto <515:or>
# <515:or>
15 00    # vload 0            # c
10 7E    # bipush 126         # '~'
9F 00 D8 # if_cmpeq +216      # if (c == '~') goto <491:cond_true>
A7 00 03 # goto +3            # goto <514:or>
# <514:or>
15 00    # vload 0            # c
10 28    # bipush 40          # '('
9F 00 CE # if_cmpeq +206      # if (c == '(') goto <491:cond_true>
A7 00 03 # goto +3            # goto <513:or>
# <513:or>
15 00    # vload 0            # c
10 29    # bipush 41          # ')'
9F 00 C4 # if_cmpeq +196      # if (c == ')') goto <491:cond_true>
A7 00 03 # goto +3            # goto <512:or>
# <512:or>
15 00    # vload 0            # c
10 5B    # bipush 91          # '['
9F 00 BA # if_cmpeq +186      # if (c == '[') goto <491:cond_true>
A7 00 03 # goto +3            # goto <511:or>
# <511:or>
15 00    # vload 0            # c
10 5D    # bipush 93          # ']'
9F 00 B0 # if_cmpeq +176      # if (c == ']') goto <491:cond_true>
A7 00 03 # goto +3            # goto <510:or>
# <510:or>
15 00    # vload 0            # c
10 7B    # bipush 123         # '{'
9F 00 A6 # if_cmpeq +166      # if (c == '{') goto <491:cond_true>
A7 00 03 # goto +3            # goto <509:or>
# <509:or>
15 00    # vload 0            # c
10 7D    # bipush 125         # '}'
9F 00 9C # if_cmpeq +156      # if (c == '}') goto <491:cond_true>
A7 00 03 # goto +3            # goto <508:or>
# <508:or>
15 00    # vload 0            # c
10 23    # bipush 35          # '#'
9F 00 92 # if_cmpeq +146      # if (c == '#') goto <491:cond_true>
A7 00 03 # goto +3            # goto <507:or>
# <507:or>
15 00    # vload 0            # c
10 24    # bipush 36          # '$'
9F 00 88 # if_cmpeq +136      # if (c == '$') goto <491:cond_true>
A7 00 03 # goto +3            # goto <506:or>
# <506:or>
15 00    # vload 0            # c
10 25    # bipush 37          # '%'
9F 00 7E # if_cmpeq +126      # if (c == '%') goto <491:cond_true>
A7 00 03 # goto +3            # goto <505:or>
# <505:or>
15 00    # vload 0            # c
10 27    # bipush 39          # '\''
9F 00 74 # if_cmpeq +116      # if (c == '\'') goto <491:cond_true>
A7 00 03 # goto +3            # goto <504:or>
# <504:or>
15 00    # vload 0            # c
10 2A    # bipush 42          # '*'
9F 00 6A # if_cmpeq +106      # if (c == '*') goto <491:cond_true>
A7 00 03 # goto +3            # goto <503:or>
# <503:or>
15 00    # vload 0            # c
10 2B    # bipush 43          # '+'
9F 00 60 # if_cmpeq +96       # if (c == '+') goto <491:cond_true>
A7 00 03 # goto +3            # goto <502:or>
# <502:or>
15 00    # vload 0            # c
10 2F    # bipush 47          # '/'
9F 00 56 # if_cmpeq +86       # if (c == '/') goto <491:cond_true>
A7 00 03 # goto +3            # goto <501:or>
# <501:or>
15 00    # vload 0            # c
10 3C    # bipush 60          # '<'
9F 00 4C # if_cmpeq +76       # if (c == '<') goto <491:cond_true>
A7 00 03 # goto +3            # goto <500:or>
# <500:or>
15 00    # vload 0            # c
10 3D    # bipush 61          # '='
9F 00 42 # if_cmpeq +66       # if (c == '=') goto <491:cond_true>
A7 00 03 # goto +3            # goto <499:or>
# <499:or>
15 00    # vload 0            # c
10 3E    # bipush 62          # '>'
9F 00 38 # if_cmpeq +56       # if (c == '>') goto <491:cond_true>
A7 00 03 # goto +3            # goto <498:or>
# <498:or>
15 00    # vload 0            # c
10 40    # bipush 64          # '@'
9F 00 2E # if_cmpeq +46       # if (c == '@') goto <491:cond_true>
A7 00 03 # goto +3            # goto <497:or>
# <497:or>
15 00    # vload 0            # c
10 5C    # bipush 92          # '\\'
9F 00 24 # if_cmpeq +36       # if (c == '\\') goto <491:cond_true>
A7 00 03 # goto +3            # goto <496:or>
# <496:or>
15 00    # vload 0            # c
10 26    # bipush 38          # '&'
9F 00 1A # if_cmpeq +26       # if (c == '&') goto <491:cond_true>
A7 00 03 # goto +3            # goto <495:or>
# <495:or>
15 00    # vload 0            # c
10 5E    # bipush 94          # '^'
9F 00 10 # if_cmpeq +16       # if (c == '^') goto <491:cond_true>
A7 00 03 # goto +3            # goto <494:or>
# <494:or>
15 00    # vload 0            # c
10 5F    # bipush 95          # '_'
9F 00 06 # if_cmpeq +6        # if (c == '_') goto <491:cond_true>
A7 00 08 # goto +8            # goto <492:cond_false>
# <491:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <493:cond_end>
# <492:cond_false>
15 00    # vload 0            # c
10 60    # bipush 96          # '`'
9F 00 06 # if_cmpeq +6        # if (c == '`') goto <528:cond_true>
A7 00 08 # goto +8            # goto <529:cond_false>
# <528:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <530:cond_end>
# <529:cond_false>
10 00    # bipush 0           # false
# <530:cond_end>
# <493:cond_end>
36 02    # vstore 2           # _result = ((((((((((((((((((((((((((((((((((((c == ' ') || (c == '\t')) || (c == '\n')) || (c == '\r')) || (c == ',')) || (c == '.')) || (c == ';')) || (c == ':')) || (c == '\"')) || (c == '-')) || (c == '!')) || (c == '?')) || (c == '|')) || (c == '~')) || (c == '(')) || (c == ')')) || (c == '[')) || (c == ']')) || (c == '{')) || (c == '}')) || (c == '#')) || (c == '$')) || (c == '%')) || (c == '\'')) || (c == '*')) || (c == '+')) || (c == '/')) || (c == '<')) || (c == '=')) || (c == '>')) || (c == '@')) || (c == '\\')) || (c == '&')) || (c == '^')) || (c == '_')) || (c == '`'));
15 02    # vload 2            # _result
B0       # return             # 


#<word>
04                # number of arguments = 4
07                # number of local variables = 7
01 14             # code length = 276 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <531:cond_true>
A7 00 1D # goto +29           # goto <532:cond_false>
# <531:cond_true>
15 01    # vload 1            # i
15 00    # vload 0            # sentence
14 30 1A # aldc 12314         # s[12314] = "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 33.27-33.50)"
B8 00 21 # invokestatic 33    # string_length__1(sentence, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 33.27-33.50)")
A1 00 06 # if_icmplt +6       # if (i < string_length__1(sentence, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 33.27-33.50)")) goto <534:cond_true>
A7 00 08 # goto +8            # goto <535:cond_false>
# <534:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <536:cond_end>
# <535:cond_false>
10 00    # bipush 0           # false
# <536:cond_end>
A7 00 05 # goto +5            # goto <533:cond_end>
# <532:cond_false>
10 00    # bipush 0           # false
# <533:cond_end>
14 30 4E # aldc 12366         # s[12366] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 33.4-33.51: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 30 98 # aldc 12440         # s[12440] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/readfile.c0: 33.4-33.51: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= i) && (i < string_length__1(sentence, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 33.27-33.50)"))) [failure message on stack]
15 00    # vload 0            # sentence
15 01    # vload 1            # i
14 30 AA # aldc 12458         # s[12458] = "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 34.23-34.49)"
B8 00 22 # invokestatic 34    # string_charat__1(sentence, i, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 34.23-34.49)")
14 30 DE # aldc 12510         # s[12510] = "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 34.14-34.50)"
B8 00 43 # invokestatic 67    # is_space(string_charat__1(sentence, i, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 34.23-34.49)"), "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 34.14-34.50)")
10 01    # bipush 1           # 
82       # ixor               # !(is_space(string_charat__1(sentence, i, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 34.23-34.49)"), "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 34.14-34.50)"))
14 31 12 # aldc 12562         # s[12562] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 34.4-34.51: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 31 5C # aldc 12636         # s[12636] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/readfile.c0: 34.4-34.51: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(is_space(string_charat__1(sentence, i, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 34.23-34.49)"), "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 34.14-34.50)")) [failure message on stack]
15 01    # vload 1            # i
10 01    # bipush 1           # 1
60       # iadd               # (i + 1)
36 05    # vstore 5           # j = (i + 1);
15 00    # vload 0            # sentence
14 31 6E # aldc 12654         # s[12654] = "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 39.13-39.36)"
B8 00 21 # invokestatic 33    # string_length__1(sentence, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 39.13-39.36)")
36 06    # vstore 6           # len = string_length__1(sentence, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 39.13-39.36)");
# <537:loop>
A7 00 03 # goto +3            # goto <538:body>
# <538:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # j
A4 00 06 # if_icmple +6       # if (0 <= j) goto <540:cond_true>
A7 00 17 # goto +23           # goto <541:cond_false>
# <540:cond_true>
15 05    # vload 5            # j
15 06    # vload 6            # len
A4 00 06 # if_icmple +6       # if (j <= len) goto <543:cond_true>
A7 00 08 # goto +8            # goto <544:cond_false>
# <543:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <545:cond_end>
# <544:cond_false>
10 00    # bipush 0           # false
# <545:cond_end>
A7 00 05 # goto +5            # goto <542:cond_end>
# <541:cond_false>
10 00    # bipush 0           # false
# <542:cond_end>
14 31 A2 # aldc 12706         # s[12706] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 42.8-42.42: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= j) && (j <= len)) [failure message on stack]
15 05    # vload 5            # j
15 06    # vload 6            # len
A1 00 06 # if_icmplt +6       # if (j < len) goto <549:and>
A7 00 25 # goto +37           # goto <547:else>
# <549:and>
15 00    # vload 0            # sentence
15 05    # vload 5            # j
14 31 F1 # aldc 12785         # s[12785] = "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 41.31-41.57)"
B8 00 22 # invokestatic 34    # string_charat__1(sentence, j, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 41.31-41.57)")
14 32 25 # aldc 12837         # s[12837] = "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 41.22-41.58)"
B8 00 43 # invokestatic 67    # is_space(string_charat__1(sentence, j, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 41.31-41.57)"), "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 41.22-41.58)")
10 01    # bipush 1           # true
9F 00 10 # if_cmpeq +16       # if (is_space(string_charat__1(sentence, j, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 41.31-41.57)"), "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 41.22-41.58)") == true) goto <547:else>
A7 00 03 # goto +3            # goto <546:then>
# <546:then>
15 05    # vload 5            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # j += 1;
A7 00 06 # goto +6            # goto <548:endif>
# <547:else>
A7 00 06 # goto +6            # break
# <548:endif>
A7 FF AA # goto -86           # goto <537:loop>
# <539:exit>
15 02    # vload 2            # newi
15 05    # vload 5            # j
4E       # imstore            # *(newi) = j;
15 00    # vload 0            # sentence
15 01    # vload 1            # i
15 05    # vload 5            # j
14 32 59 # aldc 12889         # s[12889] = "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 47.25-47.51)"
B8 00 24 # invokestatic 36    # string_sub__1(sentence, i, j, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 47.25-47.51)")
14 32 8D # aldc 12941         # s[12941] = "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 47.10-47.52)"
B8 00 2A # invokestatic 42    # string_tolower__1(string_sub__1(sentence, i, j, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 47.25-47.51)"), "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 47.10-47.52)")
36 04    # vstore 4           # _result = string_tolower__1(string_sub__1(sentence, i, j, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 47.25-47.51)"), "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 47.10-47.52)");
15 04    # vload 4            # _result
14 32 C1 # aldc 12993         # s[12993] = "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 35.12-35.34)"
B8 00 21 # invokestatic 33    # string_length__1(_result, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 35.12-35.34)")
10 00    # bipush 0           # 0
A3 00 06 # if_icmpgt +6       # if (string_length__1(_result, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 35.12-35.34)") > 0) goto <550:cond_true>
A7 00 08 # goto +8            # goto <551:cond_false>
# <550:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <552:cond_end>
# <551:cond_false>
10 00    # bipush 0           # false
# <552:cond_end>
14 32 F5 # aldc 13045         # s[13045] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 35.4-35.39: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 35.12-35.34)") > 0) [failure message on stack]
15 02    # vload 2            # newi
2E       # imload             # *(newi)
15 00    # vload 0            # sentence
14 33 3D # aldc 13117         # s[13117] = "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 36.21-36.44)"
B8 00 21 # invokestatic 33    # string_length__1(sentence, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 36.21-36.44)")
A4 00 06 # if_icmple +6       # if (*(newi) <= string_length__1(sentence, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 36.21-36.44)")) goto <553:cond_true>
A7 00 08 # goto +8            # goto <554:cond_false>
# <553:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <555:cond_end>
# <554:cond_false>
10 00    # bipush 0           # false
# <555:cond_end>
14 33 71 # aldc 13169         # s[13169] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 36.4-36.45: @ensures annotation failed"
CF       # assert             # assert (*(newi) <= string_length__1(sentence, "word (/tmp/tmp.s2zpkBvenI/readfile.c0: 36.21-36.44)")) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<skip_space>
03                # number of arguments = 3
05                # number of local variables = 5
00 A7             # code length = 167 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <556:cond_true>
A7 00 1D # goto +29           # goto <557:cond_false>
# <556:cond_true>
15 01    # vload 1            # i
15 00    # vload 0            # sentence
14 33 B9 # aldc 13241         # s[13241] = "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 51.28-51.51)"
B8 00 21 # invokestatic 33    # string_length__1(sentence, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 51.28-51.51)")
A4 00 06 # if_icmple +6       # if (i <= string_length__1(sentence, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 51.28-51.51)")) goto <559:cond_true>
A7 00 08 # goto +8            # goto <560:cond_false>
# <559:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <561:cond_end>
# <560:cond_false>
10 00    # bipush 0           # false
# <561:cond_end>
A7 00 05 # goto +5            # goto <558:cond_end>
# <557:cond_false>
10 00    # bipush 0           # false
# <558:cond_end>
14 33 F3 # aldc 13299         # s[13299] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 51.4-51.52: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 34 3D # aldc 13373         # s[13373] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/readfile.c0: 51.4-51.52: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= i) && (i <= string_length__1(sentence, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 51.28-51.51)"))) [failure message on stack]
15 01    # vload 1            # i
36 04    # vstore 4           # j = i;
# <562:loop>
A7 00 03 # goto +3            # goto <563:body>
# <563:body>
15 04    # vload 4            # j
15 00    # vload 0            # sentence
14 34 4F # aldc 13391         # s[13391] = "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 56.14-56.37)"
B8 00 21 # invokestatic 33    # string_length__1(sentence, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 56.14-56.37)")
A1 00 06 # if_icmplt +6       # if (j < string_length__1(sentence, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 56.14-56.37)")) goto <568:and>
A7 00 25 # goto +37           # goto <566:else>
# <568:and>
15 00    # vload 0            # sentence
15 04    # vload 4            # j
14 34 89 # aldc 13449         # s[13449] = "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 56.50-56.76)"
B8 00 22 # invokestatic 34    # string_charat__1(sentence, j, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 56.50-56.76)")
14 34 C3 # aldc 13507         # s[13507] = "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 56.41-56.77)"
B8 00 43 # invokestatic 67    # is_space(string_charat__1(sentence, j, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 56.50-56.76)"), "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 56.41-56.77)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_space(string_charat__1(sentence, j, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 56.50-56.76)"), "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 56.41-56.77)") == true) goto <565:then>
A7 00 0D # goto +13           # goto <566:else>
# <565:then>
15 04    # vload 4            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # j += 1;
A7 00 06 # goto +6            # goto <567:endif>
# <566:else>
A7 00 06 # goto +6            # break
# <567:endif>
A7 FF C8 # goto -56           # goto <562:loop>
# <564:exit>
15 04    # vload 4            # j
36 03    # vstore 3           # _result = j;
15 03    # vload 3            # _result
15 00    # vload 0            # sentence
14 34 FD # aldc 13565         # s[13565] = "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 52.23-52.46)"
B8 00 21 # invokestatic 33    # string_length__1(sentence, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 52.23-52.46)")
9F 00 06 # if_cmpeq +6        # if (_result == string_length__1(sentence, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 52.23-52.46)")) goto <569:cond_true>
A7 00 08 # goto +8            # goto <570:cond_false>
# <569:cond_true>
10 01    # bipush 1           # true
A7 00 16 # goto +22           # goto <571:cond_end>
# <570:cond_false>
15 00    # vload 0            # sentence
15 03    # vload 3            # _result
14 35 37 # aldc 13623         # s[13623] = "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 53.22-53.54)"
B8 00 22 # invokestatic 34    # string_charat__1(sentence, _result, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 53.22-53.54)")
14 35 71 # aldc 13681         # s[13681] = "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 53.13-53.55)"
B8 00 43 # invokestatic 67    # is_space(string_charat__1(sentence, _result, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 53.22-53.54)"), "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 53.13-53.55)")
10 01    # bipush 1           # 
82       # ixor               # !(is_space(string_charat__1(sentence, _result, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 53.22-53.54)"), "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 53.13-53.55)"))
# <571:cond_end>
14 35 AB # aldc 13739         # s[13739] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 52.4-53.56: @ensures annotation failed"
CF       # assert             # assert ((_result == string_length__1(sentence, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 52.23-52.46)")) || !(is_space(string_charat__1(sentence, _result, "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 53.22-53.54)"), "skip_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 53.13-53.55)"))) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<reader_valid>
02                # number of arguments = 2
03                # number of local variables = 3
00 42             # code length = 66 bytes
15 00    # vload 0            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <572:cond_true>
A7 00 08 # goto +8            # goto <573:cond_false>
# <572:cond_true>
10 01    # bipush 1           # true
A7 00 32 # goto +50           # goto <574:cond_end>
# <573:cond_false>
10 00    # bipush 0           # 0
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
A4 00 06 # if_icmple +6       # if (0 <= r->current_idx) goto <575:cond_true>
A7 00 23 # goto +35           # goto <576:cond_false>
# <575:cond_true>
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 35 F3 # aldc 13811         # s[13811] = "reader_valid (/tmp/tmp.s2zpkBvenI/readfile.c0: 75.50-75.75)"
B8 00 21 # invokestatic 33    # string_length__1(r->current, "reader_valid (/tmp/tmp.s2zpkBvenI/readfile.c0: 75.50-75.75)")
A4 00 06 # if_icmple +6       # if (r->current_idx <= string_length__1(r->current, "reader_valid (/tmp/tmp.s2zpkBvenI/readfile.c0: 75.50-75.75)")) goto <578:cond_true>
A7 00 08 # goto +8            # goto <579:cond_false>
# <578:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <580:cond_end>
# <579:cond_false>
10 00    # bipush 0           # false
# <580:cond_end>
A7 00 05 # goto +5            # goto <577:cond_end>
# <576:cond_false>
10 00    # bipush 0           # false
# <577:cond_end>
# <574:cond_end>
36 02    # vstore 2           # _result = ((r == NULL) || ((0 <= r->current_idx) && (r->current_idx <= string_length__1(r->current, "reader_valid (/tmp/tmp.s2zpkBvenI/readfile.c0: 75.50-75.75)"))));
15 02    # vload 2            # _result
B0       # return             # 


#<at_space>
02                # number of arguments = 2
03                # number of local variables = 3
00 55             # code length = 85 bytes
15 00    # vload 0            # r
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (r != NULL) goto <581:cond_true>
A7 00 08 # goto +8            # goto <582:cond_false>
# <581:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <583:cond_end>
# <582:cond_false>
10 00    # bipush 0           # false
# <583:cond_end>
14 36 2F # aldc 13871         # s[13871] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 79.4-79.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 36 79 # aldc 13945         # s[13945] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/readfile.c0: 79.4-79.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (r != NULL) [failure message on stack]
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 36 8B # aldc 13963         # s[13963] = "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 81.27-81.52)"
B8 00 21 # invokestatic 33    # string_length__1(r->current, "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 81.27-81.52)")
A1 00 06 # if_icmplt +6       # if (r->current_idx < string_length__1(r->current, "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 81.27-81.52)")) goto <584:cond_true>
A7 00 1C # goto +28           # goto <585:cond_false>
# <584:cond_true>
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
14 36 C3 # aldc 14019         # s[14019] = "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 82.17-82.58)"
B8 00 22 # invokestatic 34    # string_charat__1(r->current, r->current_idx, "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 82.17-82.58)")
14 36 FB # aldc 14075         # s[14075] = "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 82.8-82.59)"
B8 00 43 # invokestatic 67    # is_space(string_charat__1(r->current, r->current_idx, "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 82.17-82.58)"), "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 82.8-82.59)")
A7 00 05 # goto +5            # goto <586:cond_end>
# <585:cond_false>
10 00    # bipush 0           # false
# <586:cond_end>
36 02    # vstore 2           # _result = ((r->current_idx < string_length__1(r->current, "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 81.27-81.52)")) && is_space(string_charat__1(r->current, r->current_idx, "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 82.17-82.58)"), "at_space (/tmp/tmp.s2zpkBvenI/readfile.c0: 82.8-82.59)"));
15 02    # vload 2            # _result
B0       # return             # 


#<get_reader>
02                # number of arguments = 2
05                # number of local variables = 5
00 A9             # code length = 169 bytes
15 00    # vload 0            # fname
14 37 32 # aldc 14130         # s[14130] = "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 88.17-88.33)"
B8 00 31 # invokestatic 49    # file_read__1(fname, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 88.17-88.33)")
36 03    # vstore 3           # file = file_read__1(fname, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 88.17-88.33)");
15 03    # vload 3            # file
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (file == NULL) goto <587:then>
A7 00 29 # goto +41           # goto <588:else>
# <587:then>
01       # aconst_null        # NULL
36 02    # vstore 2           # _result = NULL;
15 02    # vload 2            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <590:cond_true>
A7 00 08 # goto +8            # goto <591:cond_false>
# <590:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <592:cond_end>
# <591:cond_false>
15 02    # vload 2            # _result
14 37 6C # aldc 14188         # s[14188] = "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 86.32-86.49)"
B8 00 47 # invokestatic 71    # at_space(_result, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 86.32-86.49)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(_result, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 86.32-86.49)"))
# <592:cond_end>
14 37 A6 # aldc 14246         # s[14246] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 86.4-86.50: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || !(at_space(_result, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 86.32-86.49)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <589:endif>
# <588:else>
# <589:endif>
BB 18    # new 24             # alloc(reader_t)
36 04    # vstore 4           # r = alloc(reader_t);
15 04    # vload 4            # r
62 00    # aaddf 0            # &r->file
15 03    # vload 3            # file
4F       # amstore            # r->file = file;
15 03    # vload 3            # file
14 37 EE # aldc 14318         # s[14318] = "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 95.7-95.21)"
B8 00 33 # invokestatic 51    # file_eof__1(file, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 95.7-95.21)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (file_eof__1(file, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 95.7-95.21)") == true) goto <593:then>
A7 00 15 # goto +21           # goto <594:else>
# <593:then>
15 04    # vload 4            # r
62 08    # aaddf 8            # &r->current
14 38 27 # aldc 14375         # s[14375] = ""
4F       # amstore            # r->current = "";
15 04    # vload 4            # r
62 10    # aaddf 16           # &r->current_idx
10 00    # bipush 0           # 0
4E       # imstore            # r->current_idx = 0;
A7 00 22 # goto +34           # goto <595:endif>
# <594:else>
15 04    # vload 4            # r
62 08    # aaddf 8            # &r->current
15 03    # vload 3            # file
14 38 28 # aldc 14376         # s[14376] = "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 100.18-100.37)"
B8 00 34 # invokestatic 52    # file_readline__1(file, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 100.18-100.37)")
4F       # amstore            # r->current = file_readline__1(file, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 100.18-100.37)");
15 04    # vload 4            # r
62 10    # aaddf 16           # &r->current_idx
15 04    # vload 4            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
10 00    # bipush 0           # 0
14 38 64 # aldc 14436         # s[14436] = "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 101.22-101.47)"
B8 00 45 # invokestatic 69    # skip_space(r->current, 0, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 101.22-101.47)")
4E       # imstore            # r->current_idx = skip_space(r->current, 0, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 101.22-101.47)");
# <595:endif>
15 04    # vload 4            # r
36 02    # vstore 2           # _result = r;
15 02    # vload 2            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <596:cond_true>
A7 00 08 # goto +8            # goto <597:cond_false>
# <596:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <598:cond_end>
# <597:cond_false>
15 02    # vload 2            # _result
14 38 A0 # aldc 14496         # s[14496] = "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 86.32-86.49)"
B8 00 47 # invokestatic 71    # at_space(_result, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 86.32-86.49)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(_result, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 86.32-86.49)"))
# <598:cond_end>
14 38 DA # aldc 14554         # s[14554] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 86.4-86.50: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || !(at_space(_result, "get_reader (/tmp/tmp.s2zpkBvenI/readfile.c0: 86.32-86.49)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<read_word>
02                # number of arguments = 2
05                # number of local variables = 5
01 FC             # code length = 508 bytes
15 00    # vload 0            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <599:cond_true>
A7 00 08 # goto +8            # goto <600:cond_false>
# <599:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <601:cond_end>
# <600:cond_false>
15 00    # vload 0            # r
14 39 22 # aldc 14626         # s[14626] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 107.27-107.38)"
B8 00 47 # invokestatic 71    # at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 107.27-107.38)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 107.27-107.38)"))
# <601:cond_end>
14 39 5D # aldc 14685         # s[14685] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 107.4-107.39: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 39 A9 # aldc 14761         # s[14761] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/readfile.c0: 107.4-107.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((r == NULL) || !(at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 107.27-107.38)"))) [failure message on stack]
15 00    # vload 0            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <602:then>
A7 00 2B # goto +43           # goto <603:else>
# <602:then>
14 39 BB # aldc 14779         # s[14779] = ""
36 02    # vstore 2           # _result = "";
15 00    # vload 0            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <605:cond_true>
A7 00 08 # goto +8            # goto <606:cond_false>
# <605:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <607:cond_end>
# <606:cond_false>
15 00    # vload 0            # r
14 39 BC # aldc 14780         # s[14780] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)"
B8 00 47 # invokestatic 71    # at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)"))
# <607:cond_end>
14 39 F7 # aldc 14839         # s[14839] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 108.4-108.38: @ensures annotation failed"
CF       # assert             # assert ((r == NULL) || !(at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <604:endif>
# <603:else>
# <604:endif>
# <608:loop>
A7 00 03 # goto +3            # goto <609:body>
# <609:body>
15 00    # vload 0            # r
14 3A 41 # aldc 14913         # s[14913] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 115.24-115.35)"
B8 00 47 # invokestatic 71    # at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 115.24-115.35)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 115.24-115.35)"))
14 3A 7C # aldc 14972         # s[14972] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 115.8-115.36: @loop_invariant annotation failed"
CF       # assert             # assert !(at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 115.24-115.35)")) [failure message on stack]
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 3A CD # aldc 15053         # s[15053] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 114.28-114.53)"
B8 00 21 # invokestatic 33    # string_length__1(r->current, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 114.28-114.53)")
9F 00 06 # if_cmpeq +6        # if (r->current_idx == string_length__1(r->current, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 114.28-114.53)")) goto <614:and>
A7 00 3B # goto +59           # goto <612:else>
# <614:and>
15 00    # vload 0            # r
62 00    # aaddf 0            # &r->file
2F       # amload             # r->file
14 3B 08 # aldc 15112         # s[15112] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 114.58-114.75)"
B8 00 33 # invokestatic 51    # file_eof__1(r->file, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 114.58-114.75)")
10 01    # bipush 1           # true
9F 00 2B # if_cmpeq +43       # if (file_eof__1(r->file, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 114.58-114.75)") == true) goto <612:else>
A7 00 03 # goto +3            # goto <611:then>
# <611:then>
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
15 00    # vload 0            # r
62 00    # aaddf 0            # &r->file
2F       # amload             # r->file
14 3B 43 # aldc 15171         # s[15171] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 117.20-117.42)"
B8 00 34 # invokestatic 52    # file_readline__1(r->file, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 117.20-117.42)")
4F       # amstore            # r->current = file_readline__1(r->file, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 117.20-117.42)");
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
10 00    # bipush 0           # 0
14 3B 7E # aldc 15230         # s[15230] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 118.24-118.49)"
B8 00 45 # invokestatic 69    # skip_space(r->current, 0, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 118.24-118.49)")
4E       # imstore            # r->current_idx = skip_space(r->current, 0, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 118.24-118.49)");
A7 00 06 # goto +6            # goto <613:endif>
# <612:else>
A7 00 06 # goto +6            # break
# <613:endif>
A7 FF 9D # goto -99           # goto <608:loop>
# <610:exit>
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 3B B9 # aldc 15289         # s[15289] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 122.31-122.56)"
B8 00 21 # invokestatic 33    # string_length__1(r->current, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 122.31-122.56)")
A1 00 06 # if_icmplt +6       # if (r->current_idx < string_length__1(r->current, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 122.31-122.56)")) goto <618:and>
A7 00 26 # goto +38           # goto <616:cond_false>
# <618:and>
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
14 3B F4 # aldc 15348         # s[15348] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 123.27-123.68)"
B8 00 22 # invokestatic 34    # string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 123.27-123.68)")
14 3C 2F # aldc 15407         # s[15407] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 123.18-123.69)"
B8 00 43 # invokestatic 67    # is_space(string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 123.27-123.68)"), "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 123.18-123.69)")
10 01    # bipush 1           # true
9F 00 0B # if_cmpeq +11       # if (is_space(string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 123.27-123.68)"), "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 123.18-123.69)") == true) goto <616:cond_false>
A7 00 03 # goto +3            # goto <615:cond_true>
# <615:cond_true>
10 01    # bipush 1           # true
A7 00 29 # goto +41           # goto <617:cond_end>
# <616:cond_false>
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 3C 6A # aldc 15466         # s[15466] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 124.32-124.57)"
B8 00 21 # invokestatic 33    # string_length__1(r->current, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 124.32-124.57)")
9F 00 06 # if_cmpeq +6        # if (r->current_idx == string_length__1(r->current, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 124.32-124.57)")) goto <619:cond_true>
A7 00 11 # goto +17           # goto <620:cond_false>
# <619:cond_true>
15 00    # vload 0            # r
62 00    # aaddf 0            # &r->file
2F       # amload             # r->file
14 3C A5 # aldc 15525         # s[15525] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 125.17-125.34)"
B8 00 33 # invokestatic 51    # file_eof__1(r->file, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 125.17-125.34)")
A7 00 05 # goto +5            # goto <621:cond_end>
# <620:cond_false>
10 00    # bipush 0           # false
# <621:cond_end>
# <617:cond_end>
14 3C E0 # aldc 15584         # s[15584] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 122.6-125.36: @assert annotation failed"
CF       # assert             # assert (((r->current_idx < string_length__1(r->current, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 122.31-122.56)")) && !(is_space(string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 123.27-123.68)"), "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 123.18-123.69)"))) || ((r->current_idx == string_length__1(r->current, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 124.32-124.57)")) && file_eof__1(r->file, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 125.17-125.34)"))) [failure message on stack]
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 3D 29 # aldc 15657         # s[15657] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 127.24-127.49)"
B8 00 21 # invokestatic 33    # string_length__1(r->current, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 127.24-127.49)")
A1 00 06 # if_icmplt +6       # if (r->current_idx < string_length__1(r->current, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 127.24-127.49)")) goto <622:then>
A7 00 72 # goto +114          # goto <623:else>
# <622:then>
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
14 3D 64 # aldc 15716         # s[15716] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 129.25-129.66)"
B8 00 22 # invokestatic 34    # string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 129.25-129.66)")
14 3D 9F # aldc 15775         # s[15775] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 129.16-129.67)"
B8 00 43 # invokestatic 67    # is_space(string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 129.25-129.66)"), "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 129.16-129.67)")
10 01    # bipush 1           # 
82       # ixor               # !(is_space(string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 129.25-129.66)"), "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 129.16-129.67)"))
14 3D DA # aldc 15834         # s[15834] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 129.8-129.68: @assert annotation failed"
CF       # assert             # assert !(is_space(string_charat__1(r->current, r->current_idx, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 129.25-129.66)"), "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 129.16-129.67)")) [failure message on stack]
BB 04    # new 4              # alloc(int)
36 03    # vstore 3           # newi = alloc(int);
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 03    # vload 3            # newi
14 3E 23 # aldc 15907         # s[15907] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 131.16-131.54)"
B8 00 44 # invokestatic 68    # word(r->current, r->current_idx, newi, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 131.16-131.54)")
36 04    # vstore 4           # w = word(r->current, r->current_idx, newi, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 131.16-131.54)");
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
15 03    # vload 3            # newi
2E       # imload             # *(newi)
14 3E 5E # aldc 15966         # s[15966] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 132.22-132.51)"
B8 00 45 # invokestatic 69    # skip_space(r->current, *(newi), "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 132.22-132.51)")
4E       # imstore            # r->current_idx = skip_space(r->current, *(newi), "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 132.22-132.51)");
15 04    # vload 4            # w
36 02    # vstore 2           # _result = w;
15 00    # vload 0            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <625:cond_true>
A7 00 08 # goto +8            # goto <626:cond_false>
# <625:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <627:cond_end>
# <626:cond_false>
15 00    # vload 0            # r
14 3E 99 # aldc 16025         # s[16025] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)"
B8 00 47 # invokestatic 71    # at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)"))
# <627:cond_end>
14 3E D4 # aldc 16084         # s[16084] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 108.4-108.38: @ensures annotation failed"
CF       # assert             # assert ((r == NULL) || !(at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 
A7 00 58 # goto +88           # goto <624:endif>
# <623:else>
15 00    # vload 0            # r
62 10    # aaddf 16           # &r->current_idx
2E       # imload             # r->current_idx
15 00    # vload 0            # r
62 08    # aaddf 8            # &r->current
2F       # amload             # r->current
14 3F 1E # aldc 16158         # s[16158] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 135.34-135.59)"
B8 00 21 # invokestatic 33    # string_length__1(r->current, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 135.34-135.59)")
9F 00 06 # if_cmpeq +6        # if (r->current_idx == string_length__1(r->current, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 135.34-135.59)")) goto <628:cond_true>
A7 00 08 # goto +8            # goto <629:cond_false>
# <628:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <630:cond_end>
# <629:cond_false>
10 00    # bipush 0           # false
# <630:cond_end>
14 3F 59 # aldc 16217         # s[16217] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 135.8-135.61: @assert annotation failed"
CF       # assert             # assert (r->current_idx == string_length__1(r->current, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 135.34-135.59)")) [failure message on stack]
15 00    # vload 0            # r
62 00    # aaddf 0            # &r->file
2F       # amload             # r->file
14 3F A2 # aldc 16290         # s[16290] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 136.15-136.32)"
B8 00 33 # invokestatic 51    # file_eof__1(r->file, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 136.15-136.32)")
14 3F DD # aldc 16349         # s[16349] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 136.8-136.33: @assert annotation failed"
CF       # assert             # assert file_eof__1(r->file, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 136.15-136.32)") [failure message on stack]
14 40 26 # aldc 16422         # s[16422] = ""
36 02    # vstore 2           # _result = "";
15 00    # vload 0            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <631:cond_true>
A7 00 08 # goto +8            # goto <632:cond_false>
# <631:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <633:cond_end>
# <632:cond_false>
15 00    # vload 0            # r
14 40 27 # aldc 16423         # s[16423] = "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)"
B8 00 47 # invokestatic 71    # at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)")
10 01    # bipush 1           # 
82       # ixor               # !(at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)"))
# <633:cond_end>
14 40 62 # aldc 16482         # s[16482] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 108.4-108.38: @ensures annotation failed"
CF       # assert             # assert ((r == NULL) || !(at_space(r, "read_word (/tmp/tmp.s2zpkBvenI/readfile.c0: 108.26-108.37)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 
# <624:endif>


#<list_length>
02                # number of arguments = 2
04                # number of local variables = 4
00 2E             # code length = 46 bytes
10 00    # bipush 0           # 0
36 03    # vstore 3           # count = 0;
# <634:loop>
A7 00 03 # goto +3            # goto <635:body>
# <635:body>
15 00    # vload 0            # l
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (l != NULL) goto <637:then>
A7 00 14 # goto +20           # goto <638:else>
# <637:then>
15 03    # vload 3            # count
10 01    # bipush 1           # 1
60       # iadd               # 
36 03    # vstore 3           # count += 1;
15 00    # vload 0            # l
62 08    # aaddf 8            # &l->tail
2F       # amload             # l->tail
36 00    # vstore 0           # l = l->tail;
A7 00 06 # goto +6            # goto <639:endif>
# <638:else>
A7 00 06 # goto +6            # break
# <639:endif>
A7 FF E0 # goto -32           # goto <634:loop>
# <636:exit>
15 03    # vload 3            # count
36 02    # vstore 2           # _result = count;
15 02    # vload 2            # _result
B0       # return             # 


#<list_empty>
01                # number of arguments = 1
02                # number of local variables = 2
00 06             # code length = 6 bytes
01       # aconst_null        # NULL
36 01    # vstore 1           # _result = NULL;
15 01    # vload 1            # _result
B0       # return             # 


#<list_cons>
03                # number of arguments = 3
05                # number of local variables = 5
00 19             # code length = 25 bytes
BB 10    # new 16             # alloc(struct list_cell)
36 04    # vstore 4           # res = alloc(struct list_cell);
15 04    # vload 4            # res
62 00    # aaddf 0            # &res->head
15 00    # vload 0            # s
4F       # amstore            # res->head = s;
15 04    # vload 4            # res
62 08    # aaddf 8            # &res->tail
15 01    # vload 1            # l
4F       # amstore            # res->tail = l;
15 04    # vload 4            # res
36 03    # vstore 3           # _result = res;
15 03    # vload 3            # _result
B0       # return             # 


#<rev_list_to_array>
02                # number of arguments = 2
07                # number of local variables = 7
00 81             # code length = 129 bytes
15 00    # vload 0            # l
14 40 AC # aldc 16556         # s[16556] = "rev_list_to_array (/tmp/tmp.s2zpkBvenI/readfile.c0: 176.13-176.27)"
B8 00 4A # invokestatic 74    # list_length(l, "rev_list_to_array (/tmp/tmp.s2zpkBvenI/readfile.c0: 176.13-176.27)")
36 03    # vstore 3           # len = list_length(l, "rev_list_to_array (/tmp/tmp.s2zpkBvenI/readfile.c0: 176.13-176.27)");
15 03    # vload 3            # len
BC 08    # newarray 8         # alloc_array(string, len)
36 04    # vstore 4           # res = alloc_array(string, len);
15 00    # vload 0            # l
36 06    # vstore 6           # ll = l;
15 03    # vload 3            # len
10 01    # bipush 1           # 1
64       # isub               # (len - 1)
36 05    # vstore 5           # i = (len - 1);
# <640:loop>
A7 00 03 # goto +3            # goto <641:body>
# <641:body>
15 05    # vload 5            # i
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (i >= 0) goto <643:then>
A7 00 33 # goto +51           # goto <644:else>
# <643:then>
15 06    # vload 6            # ll
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ll != NULL) goto <646:cond_true>
A7 00 08 # goto +8            # goto <647:cond_false>
# <646:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <648:cond_end>
# <647:cond_false>
10 00    # bipush 0           # false
# <648:cond_end>
14 40 EF # aldc 16623         # s[16623] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 181.8-181.26: @assert annotation failed"
CF       # assert             # assert (ll != NULL) [failure message on stack]
15 04    # vload 4            # res
15 05    # vload 5            # i
63       # aadds              # &res[i]
15 06    # vload 6            # ll
62 00    # aaddf 0            # &ll->head
2F       # amload             # ll->head
4F       # amstore            # res[i] = ll->head;
15 06    # vload 6            # ll
62 08    # aaddf 8            # &ll->tail
2F       # amload             # ll->tail
36 06    # vstore 6           # ll = ll->tail;
15 05    # vload 5            # i
10 01    # bipush 1           # 1
64       # isub               # 
36 05    # vstore 5           # i -= 1;
A7 00 06 # goto +6            # goto <645:endif>
# <644:else>
A7 00 06 # goto +6            # break
# <645:endif>
A7 FF C0 # goto -64           # goto <640:loop>
# <642:exit>
15 04    # vload 4            # res
36 02    # vstore 2           # _result = res;
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # l
14 41 38 # aldc 16696         # s[16696] = "rev_list_to_array (/tmp/tmp.s2zpkBvenI/readfile.c0: 174.32-174.46)"
B8 00 4A # invokestatic 74    # list_length(l, "rev_list_to_array (/tmp/tmp.s2zpkBvenI/readfile.c0: 174.32-174.46)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == list_length(l, "rev_list_to_array (/tmp/tmp.s2zpkBvenI/readfile.c0: 174.32-174.46)")) goto <649:cond_true>
A7 00 08 # goto +8            # goto <650:cond_false>
# <649:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <651:cond_end>
# <650:cond_false>
10 00    # bipush 0           # false
# <651:cond_end>
14 41 7B # aldc 16763         # s[16763] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 174.4-174.47: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == list_length(l, "rev_list_to_array (/tmp/tmp.s2zpkBvenI/readfile.c0: 174.32-174.46)")) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<is_array_expected_length>
03                # number of arguments = 3
04                # number of local variables = 4
00 1D             # code length = 29 bytes
15 00    # vload 0            # array
BE       # arraylength        # \length(array)
15 01    # vload 1            # length
9F 00 06 # if_cmpeq +6        # if (\length(array) == length) goto <652:cond_true>
A7 00 08 # goto +8            # goto <653:cond_false>
# <652:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <654:cond_end>
# <653:cond_false>
10 00    # bipush 0           # false
# <654:cond_end>
14 41 C5 # aldc 16837         # s[16837] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 197.6-197.38: @assert annotation failed"
CF       # assert             # assert (\length(array) == length) [failure message on stack]
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 


#<is_string_bundle>
02                # number of arguments = 2
03                # number of local variables = 3
00 28             # code length = 40 bytes
15 00    # vload 0            # wl
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (wl == NULL) goto <655:then>
A7 00 0D # goto +13           # goto <656:else>
# <655:then>
10 01    # bipush 1           # true
36 02    # vstore 2           # _result = true;
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <657:endif>
# <656:else>
# <657:endif>
15 00    # vload 0            # wl
62 00    # aaddf 0            # &wl->array
2F       # amload             # wl->array
15 00    # vload 0            # wl
62 08    # aaddf 8            # &wl->length
2E       # imload             # wl->length
14 42 0E # aldc 16910         # s[16910] = "is_string_bundle (/tmp/tmp.s2zpkBvenI/readfile.c0: 203.10-203.57)"
B8 00 4E # invokestatic 78    # is_array_expected_length(wl->array, wl->length, "is_string_bundle (/tmp/tmp.s2zpkBvenI/readfile.c0: 203.10-203.57)")
36 02    # vstore 2           # _result = is_array_expected_length(wl->array, wl->length, "is_string_bundle (/tmp/tmp.s2zpkBvenI/readfile.c0: 203.10-203.57)");
15 02    # vload 2            # _result
B0       # return             # 


#<string_bundle_array>
02                # number of arguments = 2
03                # number of local variables = 3
00 31             # code length = 49 bytes
15 00    # vload 0            # wl
14 42 50 # aldc 16976         # s[16976] = "string_bundle_array (/tmp/tmp.s2zpkBvenI/readfile.c0: 207.13-207.33)"
B8 00 4F # invokestatic 79    # is_string_bundle(wl, "string_bundle_array (/tmp/tmp.s2zpkBvenI/readfile.c0: 207.13-207.33)")
14 42 95 # aldc 17045         # s[17045] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 207.4-207.34: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 42 E1 # aldc 17121         # s[17121] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/readfile.c0: 207.4-207.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_string_bundle(wl, "string_bundle_array (/tmp/tmp.s2zpkBvenI/readfile.c0: 207.13-207.33)") [failure message on stack]
15 00    # vload 0            # wl
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (wl == NULL) goto <658:cond_true>
A7 00 0A # goto +10           # goto <659:cond_false>
# <658:cond_true>
10 00    # bipush 0           # 0
BC 08    # newarray 8         # alloc_array(string, 0)
A7 00 08 # goto +8            # goto <660:cond_end>
# <659:cond_false>
15 00    # vload 0            # wl
62 00    # aaddf 0            # &wl->array
2F       # amload             # wl->array
# <660:cond_end>
36 02    # vstore 2           # _result = ((wl == NULL) ? alloc_array(string, 0) : wl->array);
15 02    # vload 2            # _result
B0       # return             # 


#<string_bundle_length>
02                # number of arguments = 2
03                # number of local variables = 3
00 2F             # code length = 47 bytes
15 00    # vload 0            # wl
14 42 F3 # aldc 17139         # s[17139] = "string_bundle_length (/tmp/tmp.s2zpkBvenI/readfile.c0: 213.13-213.33)"
B8 00 4F # invokestatic 79    # is_string_bundle(wl, "string_bundle_length (/tmp/tmp.s2zpkBvenI/readfile.c0: 213.13-213.33)")
14 43 39 # aldc 17209         # s[17209] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 213.4-213.34: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 43 85 # aldc 17285         # s[17285] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/readfile.c0: 213.4-213.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_string_bundle(wl, "string_bundle_length (/tmp/tmp.s2zpkBvenI/readfile.c0: 213.13-213.33)") [failure message on stack]
15 00    # vload 0            # wl
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (wl == NULL) goto <661:cond_true>
A7 00 08 # goto +8            # goto <662:cond_false>
# <661:cond_true>
10 00    # bipush 0           # 0
A7 00 08 # goto +8            # goto <663:cond_end>
# <662:cond_false>
15 00    # vload 0            # wl
62 08    # aaddf 8            # &wl->length
2E       # imload             # wl->length
# <663:cond_end>
36 02    # vstore 2           # _result = ((wl == NULL) ? 0 : wl->length);
15 02    # vload 2            # _result
B0       # return             # 


#<read_words>
02                # number of arguments = 2
08                # number of local variables = 8
00 B8             # code length = 184 bytes
15 00    # vload 0            # filename
14 43 97 # aldc 17303         # s[17303] = "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 222.17-222.37)"
B8 00 48 # invokestatic 72    # get_reader(filename, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 222.17-222.37)")
36 03    # vstore 3           # r = get_reader(filename, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 222.17-222.37)");
15 03    # vload 3            # r
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (r == NULL) goto <664:then>
A7 00 1B # goto +27           # goto <665:else>
# <664:then>
14 43 D3 # aldc 17363         # s[17363] = "Cannot open file \'"
15 00    # vload 0            # filename
14 43 E6 # aldc 17382         # s[17382] = "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 224.23-224.66)"
B8 00 23 # invokestatic 35    # string_join__1("Cannot open file \'", filename, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 224.23-224.66)")
14 44 22 # aldc 17442         # s[17442] = "\'"
14 44 24 # aldc 17444         # s[17444] = "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 224.11-224.72)"
B8 00 23 # invokestatic 35    # string_join__1(string_join__1("Cannot open file \'", filename, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 224.23-224.66)"), "\'", "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 224.11-224.72)")
BF       # athrow             # error string_join__1(string_join__1("Cannot open file \'", filename, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 224.23-224.66)"), "\'", "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 224.11-224.72)")
A7 00 03 # goto +3            # goto <666:endif>
# <665:else>
# <666:endif>
01       # aconst_null        # NULL
36 04    # vstore 4           # l = NULL;
15 03    # vload 3            # r
14 44 60 # aldc 17504         # s[17504] = "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 228.14-228.26)"
B8 00 49 # invokestatic 73    # read_word(r, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 228.14-228.26)")
36 05    # vstore 5           # w = read_word(r, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 228.14-228.26)");
BB 10    # new 16             # alloc(string_bundle)
36 06    # vstore 6           # res = alloc(string_bundle);
10 00    # bipush 0           # 0
36 07    # vstore 7           # count = 0;
# <667:loop>
A7 00 03 # goto +3            # goto <668:body>
# <668:body>
15 05    # vload 5            # w
14 44 9C # aldc 17564         # s[17564] = ""
14 44 9D # aldc 17565         # s[17565] = "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 233.11-233.30)"
B8 00 25 # invokestatic 37    # string_equal__1(w, "", "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 233.11-233.30)")
10 01    # bipush 1           # true
9F 00 3B # if_cmpeq +59       # if (string_equal__1(w, "", "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 233.11-233.30)") == true) goto <671:else>
A7 00 03 # goto +3            # goto <670:then>
# <670:then>
15 05    # vload 5            # w
15 04    # vload 4            # l
14 44 D9 # aldc 17625         # s[17625] = "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 234.9-234.24)"
B8 00 4C # invokestatic 76    # list_cons(w, l, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 234.9-234.24)")
36 04    # vstore 4           # l = list_cons(w, l, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 234.9-234.24)");
15 03    # vload 3            # r
14 45 14 # aldc 17684         # s[17684] = "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 235.9-235.21)"
B8 00 49 # invokestatic 73    # read_word(r, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 235.9-235.21)")
36 05    # vstore 5           # w = read_word(r, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 235.9-235.21)");
15 07    # vload 7            # count
14 45 4F # aldc 17743         # s[17743] = "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 237.18-237.27)"
B8 00 38 # invokestatic 56    # int_max__1("read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 237.18-237.27)")
9F 00 06 # if_cmpeq +6        # if (count == int_max__1("read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 237.18-237.27)")) goto <673:then>
A7 00 0A # goto +10           # goto <674:else>
# <673:then>
14 45 8B # aldc 17803         # s[17803] = "Too many words in input file"
BF       # athrow             # error "Too many words in input file"
A7 00 03 # goto +3            # goto <675:endif>
# <674:else>
# <675:endif>
15 07    # vload 7            # count
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # count += 1;
A7 00 06 # goto +6            # goto <672:endif>
# <671:else>
A7 00 06 # goto +6            # break
# <672:endif>
A7 FF B2 # goto -78           # goto <667:loop>
# <669:exit>
15 06    # vload 6            # res
62 00    # aaddf 0            # &res->array
15 04    # vload 4            # l
14 45 A8 # aldc 17832         # s[17832] = "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 246.16-246.36)"
B8 00 4D # invokestatic 77    # rev_list_to_array(l, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 246.16-246.36)")
4F       # amstore            # res->array = rev_list_to_array(l, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 246.16-246.36)");
15 06    # vload 6            # res
62 08    # aaddf 8            # &res->length
15 07    # vload 7            # count
4E       # imstore            # res->length = count;
15 06    # vload 6            # res
36 02    # vstore 2           # _result = res;
15 02    # vload 2            # _result
14 45 E4 # aldc 17892         # s[17892] = "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 220.12-220.37)"
B8 00 4F # invokestatic 79    # is_string_bundle(_result, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 220.12-220.37)")
14 46 20 # aldc 17952         # s[17952] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 220.4-220.38: @ensures annotation failed"
CF       # assert             # assert is_string_bundle(_result, "read_words (/tmp/tmp.s2zpkBvenI/readfile.c0: 220.12-220.37)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_bundle_array__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 29             # code length = 41 bytes
15 00    # vload 0            # wl
14 46 6A # aldc 18026         # s[18026] = "string_bundle_array__1 (/tmp/tmp.s2zpkBvenI/readfile.c0: 268.1-269.63)"
B8 00 50 # invokestatic 80    # string_bundle_array(wl, "string_bundle_array__1 (/tmp/tmp.s2zpkBvenI/readfile.c0: 268.1-269.63)")
36 02    # vstore 2           # _result = string_bundle_array(wl, "string_bundle_array__1 (/tmp/tmp.s2zpkBvenI/readfile.c0: 268.1-269.63)");
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # wl
14 46 B1 # aldc 18097         # s[18097] = "string_bundle_array__1 (/tmp/tmp.s2zpkBvenI/readfile.c0: 269.32-269.56)"
B8 00 51 # invokestatic 81    # string_bundle_length(wl, "string_bundle_array__1 (/tmp/tmp.s2zpkBvenI/readfile.c0: 269.32-269.56)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == string_bundle_length(wl, "string_bundle_array__1 (/tmp/tmp.s2zpkBvenI/readfile.c0: 269.32-269.56)")) goto <676:cond_true>
A7 00 08 # goto +8            # goto <677:cond_false>
# <676:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <678:cond_end>
# <677:cond_false>
10 00    # bipush 0           # false
# <678:cond_end>
14 46 F9 # aldc 18169         # s[18169] = "/tmp/tmp.s2zpkBvenI/readfile.c0: 269.4-269.57: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == string_bundle_length(wl, "string_bundle_array__1 (/tmp/tmp.s2zpkBvenI/readfile.c0: 269.32-269.56)")) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_is_in>
05                # number of arguments = 5
07                # number of local variables = 7
00 A6             # code length = 166 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <682:and>
A7 00 22 # goto +34           # goto <680:cond_false>
# <682:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <679:cond_true>
A7 00 18 # goto +24           # goto <680:cond_false>
# <679:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <683:cond_true>
A7 00 08 # goto +8            # goto <684:cond_false>
# <683:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <685:cond_end>
# <684:cond_false>
10 00    # bipush 0           # false
# <685:cond_end>
A7 00 05 # goto +5            # goto <681:cond_end>
# <680:cond_false>
10 00    # bipush 0           # false
# <681:cond_end>
14 47 43 # aldc 18243         # s[18243] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 13.4-13.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 47 95 # aldc 18325         # s[18325] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 13.4-13.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
36 06    # vstore 6           # i = lo;
# <686:loop>
A7 00 03 # goto +3            # goto <687:body>
# <687:body>
15 02    # vload 2            # lo
15 06    # vload 6            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <689:cond_true>
A7 00 17 # goto +23           # goto <690:cond_false>
# <689:cond_true>
15 06    # vload 6            # i
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <692:cond_true>
A7 00 08 # goto +8            # goto <693:cond_false>
# <692:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <694:cond_end>
# <693:cond_false>
10 00    # bipush 0           # false
# <694:cond_end>
A7 00 05 # goto +5            # goto <691:cond_end>
# <690:cond_false>
10 00    # bipush 0           # false
# <691:cond_end>
14 47 A7 # aldc 18343         # s[18343] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 16.6-16.40: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= i) && (i <= hi)) [failure message on stack]
15 06    # vload 6            # i
15 03    # vload 3            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <695:then>
A7 00 2D # goto +45           # goto <696:else>
# <695:then>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 06    # vload 6            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 47 FE # aldc 18430         # s[18430] = "string_is_in (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 18.9-18.30)"
B8 00 25 # invokestatic 37    # string_equal__1(x, A[i], "string_is_in (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 18.9-18.30)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(x, A[i], "string_is_in (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 18.9-18.30)") == true) goto <698:then>
A7 00 0D # goto +13           # goto <699:else>
# <698:then>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <700:endif>
# <699:else>
# <700:endif>
15 06    # vload 6            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # i += 1;
A7 00 06 # goto +6            # goto <697:endif>
# <696:else>
A7 00 06 # goto +6            # break
# <697:endif>
A7 FF A2 # goto -94           # goto <686:loop>
# <688:exit>
10 00    # bipush 0           # false
36 05    # vstore 5           # _result = false;
15 05    # vload 5            # _result
B0       # return             # 


#<string_is_sorted>
04                # number of arguments = 4
06                # number of local variables = 6
00 A1             # code length = 161 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <704:and>
A7 00 22 # goto +34           # goto <702:cond_false>
# <704:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <701:cond_true>
A7 00 18 # goto +24           # goto <702:cond_false>
# <701:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <705:cond_true>
A7 00 08 # goto +8            # goto <706:cond_false>
# <705:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <707:cond_end>
# <706:cond_false>
10 00    # bipush 0           # false
# <707:cond_end>
A7 00 05 # goto +5            # goto <703:cond_end>
# <702:cond_false>
10 00    # bipush 0           # false
# <703:cond_end>
14 48 41 # aldc 18497         # s[18497] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 24.4-24.53: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 48 93 # aldc 18579         # s[18579] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 24.4-24.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 01    # vload 1            # lo
36 05    # vstore 5           # i = lo;
# <708:loop>
A7 00 03 # goto +3            # goto <709:body>
# <709:body>
15 01    # vload 1            # lo
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <711:cond_true>
A7 00 08 # goto +8            # goto <712:cond_false>
# <711:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <713:cond_end>
# <712:cond_false>
10 00    # bipush 0           # false
# <713:cond_end>
14 48 A5 # aldc 18597         # s[18597] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 27.6-27.29: @loop_invariant annotation failed"
CF       # assert             # assert (lo <= i) [failure message on stack]
15 05    # vload 5            # i
15 02    # vload 2            # hi
10 01    # bipush 1           # 1
64       # isub               # (hi - 1)
A1 00 06 # if_icmplt +6       # if (i < (hi - 1)) goto <714:then>
A7 00 34 # goto +52           # goto <715:else>
# <714:then>
15 00    # vload 0            # A
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # (i + 1)
63       # aadds              # &A[(i + 1)]
2F       # amload             # A[(i + 1)]
15 00    # vload 0            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 48 FC # aldc 18684         # s[18684] = "string_is_sorted (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 29.11-29.39)"
B8 00 26 # invokestatic 38    # string_compare__1(A[(i + 1)], A[i], "string_is_sorted (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 29.11-29.39)")
10 00    # bipush 0           # 0
A2 00 10 # if_icmpge +16      # if (string_compare__1(A[(i + 1)], A[i], "string_is_sorted (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 29.11-29.39)") >= 0) goto <718:else>
A7 00 03 # goto +3            # goto <717:then>
# <717:then>
10 00    # bipush 0           # false
36 04    # vstore 4           # _result = false;
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <719:endif>
# <718:else>
# <719:endif>
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <716:endif>
# <715:else>
A7 00 06 # goto +6            # break
# <716:endif>
A7 FF A7 # goto -89           # goto <708:loop>
# <710:exit>
10 01    # bipush 1           # true
36 04    # vstore 4           # _result = true;
15 04    # vload 4            # _result
B0       # return             # 


#<string_swap>
04                # number of arguments = 4
05                # number of local variables = 5
00 7F             # code length = 127 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <720:cond_true>
A7 00 18 # goto +24           # goto <721:cond_false>
# <720:cond_true>
15 01    # vload 1            # i
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A1 00 06 # if_icmplt +6       # if (i < \length(A)) goto <723:cond_true>
A7 00 08 # goto +8            # goto <724:cond_false>
# <723:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <725:cond_end>
# <724:cond_false>
10 00    # bipush 0           # false
# <725:cond_end>
A7 00 05 # goto +5            # goto <722:cond_end>
# <721:cond_false>
10 00    # bipush 0           # false
# <722:cond_end>
14 49 44 # aldc 18756         # s[18756] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 35.4-35.38: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 49 96 # aldc 18838         # s[18838] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 35.4-35.38: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= i) && (i < \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 02    # vload 2            # j
A4 00 06 # if_icmple +6       # if (0 <= j) goto <726:cond_true>
A7 00 18 # goto +24           # goto <727:cond_false>
# <726:cond_true>
15 02    # vload 2            # j
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A1 00 06 # if_icmplt +6       # if (j < \length(A)) goto <729:cond_true>
A7 00 08 # goto +8            # goto <730:cond_false>
# <729:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <731:cond_end>
# <730:cond_false>
10 00    # bipush 0           # false
# <731:cond_end>
A7 00 05 # goto +5            # goto <728:cond_end>
# <727:cond_false>
10 00    # bipush 0           # false
# <728:cond_end>
14 49 A8 # aldc 18856         # s[18856] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 36.4-36.38: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 49 FA # aldc 18938         # s[18938] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 36.4-36.38: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= j) && (j < \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
36 04    # vstore 4           # tmp = A[i];
15 00    # vload 0            # A
15 01    # vload 1            # i
63       # aadds              # &A[i]
15 00    # vload 0            # A
15 02    # vload 2            # j
63       # aadds              # &A[j]
2F       # amload             # A[j]
4F       # amstore            # A[i] = A[j];
15 00    # vload 0            # A
15 02    # vload 2            # j
63       # aadds              # &A[j]
15 04    # vload 4            # tmp
4F       # amstore            # A[j] = tmp;
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<string_gt_seg>
05                # number of arguments = 5
07                # number of local variables = 7
00 A6             # code length = 166 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <735:and>
A7 00 22 # goto +34           # goto <733:cond_false>
# <735:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <732:cond_true>
A7 00 18 # goto +24           # goto <733:cond_false>
# <732:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <736:cond_true>
A7 00 08 # goto +8            # goto <737:cond_false>
# <736:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <738:cond_end>
# <737:cond_false>
10 00    # bipush 0           # false
# <738:cond_end>
A7 00 05 # goto +5            # goto <734:cond_end>
# <733:cond_false>
10 00    # bipush 0           # false
# <734:cond_end>
14 4A 0C # aldc 18956         # s[18956] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 44.4-44.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 4A 5E # aldc 19038         # s[19038] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 44.4-44.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
36 06    # vstore 6           # i = lo;
# <739:loop>
A7 00 03 # goto +3            # goto <740:body>
# <740:body>
15 02    # vload 2            # lo
15 06    # vload 6            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <742:cond_true>
A7 00 17 # goto +23           # goto <743:cond_false>
# <742:cond_true>
15 06    # vload 6            # i
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <745:cond_true>
A7 00 08 # goto +8            # goto <746:cond_false>
# <745:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <747:cond_end>
# <746:cond_false>
10 00    # bipush 0           # false
# <747:cond_end>
A7 00 05 # goto +5            # goto <744:cond_end>
# <743:cond_false>
10 00    # bipush 0           # false
# <744:cond_end>
14 4A 70 # aldc 19056         # s[19056] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 47.6-47.40: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= i) && (i <= hi)) [failure message on stack]
15 06    # vload 6            # i
15 03    # vload 3            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <748:then>
A7 00 2D # goto +45           # goto <749:else>
# <748:then>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 06    # vload 6            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 4A C7 # aldc 19143         # s[19143] = "string_gt_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 49.11-49.34)"
B8 00 26 # invokestatic 38    # string_compare__1(x, A[i], "string_gt_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 49.11-49.34)")
10 00    # bipush 0           # 0
A3 00 10 # if_icmpgt +16      # if (string_compare__1(x, A[i], "string_gt_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 49.11-49.34)") > 0) goto <752:else>
A7 00 03 # goto +3            # goto <751:then>
# <751:then>
10 00    # bipush 0           # false
36 05    # vstore 5           # _result = false;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <753:endif>
# <752:else>
# <753:endif>
15 06    # vload 6            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # i += 1;
A7 00 06 # goto +6            # goto <750:endif>
# <749:else>
A7 00 06 # goto +6            # break
# <750:endif>
A7 FF A2 # goto -94           # goto <739:loop>
# <741:exit>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 


#<string_ge_seg>
05                # number of arguments = 5
07                # number of local variables = 7
00 A6             # code length = 166 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <757:and>
A7 00 22 # goto +34           # goto <755:cond_false>
# <757:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <754:cond_true>
A7 00 18 # goto +24           # goto <755:cond_false>
# <754:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <758:cond_true>
A7 00 08 # goto +8            # goto <759:cond_false>
# <758:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <760:cond_end>
# <759:cond_false>
10 00    # bipush 0           # false
# <760:cond_end>
A7 00 05 # goto +5            # goto <756:cond_end>
# <755:cond_false>
10 00    # bipush 0           # false
# <756:cond_end>
14 4B 0C # aldc 19212         # s[19212] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 55.4-55.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 4B 5E # aldc 19294         # s[19294] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 55.4-55.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
36 06    # vstore 6           # i = lo;
# <761:loop>
A7 00 03 # goto +3            # goto <762:body>
# <762:body>
15 02    # vload 2            # lo
15 06    # vload 6            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <764:cond_true>
A7 00 17 # goto +23           # goto <765:cond_false>
# <764:cond_true>
15 06    # vload 6            # i
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <767:cond_true>
A7 00 08 # goto +8            # goto <768:cond_false>
# <767:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <769:cond_end>
# <768:cond_false>
10 00    # bipush 0           # false
# <769:cond_end>
A7 00 05 # goto +5            # goto <766:cond_end>
# <765:cond_false>
10 00    # bipush 0           # false
# <766:cond_end>
14 4B 70 # aldc 19312         # s[19312] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 58.6-58.40: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= i) && (i <= hi)) [failure message on stack]
15 06    # vload 6            # i
15 03    # vload 3            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <770:then>
A7 00 2D # goto +45           # goto <771:else>
# <770:then>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 06    # vload 6            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 4B C7 # aldc 19399         # s[19399] = "string_ge_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 60.11-60.34)"
B8 00 26 # invokestatic 38    # string_compare__1(x, A[i], "string_ge_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 60.11-60.34)")
10 00    # bipush 0           # 0
A2 00 10 # if_icmpge +16      # if (string_compare__1(x, A[i], "string_ge_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 60.11-60.34)") >= 0) goto <774:else>
A7 00 03 # goto +3            # goto <773:then>
# <773:then>
10 00    # bipush 0           # false
36 05    # vstore 5           # _result = false;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <775:endif>
# <774:else>
# <775:endif>
15 06    # vload 6            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # i += 1;
A7 00 06 # goto +6            # goto <772:endif>
# <771:else>
A7 00 06 # goto +6            # break
# <772:endif>
A7 FF A2 # goto -94           # goto <761:loop>
# <763:exit>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 


#<string_lt_seg>
05                # number of arguments = 5
07                # number of local variables = 7
00 A6             # code length = 166 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <779:and>
A7 00 22 # goto +34           # goto <777:cond_false>
# <779:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <776:cond_true>
A7 00 18 # goto +24           # goto <777:cond_false>
# <776:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <780:cond_true>
A7 00 08 # goto +8            # goto <781:cond_false>
# <780:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <782:cond_end>
# <781:cond_false>
10 00    # bipush 0           # false
# <782:cond_end>
A7 00 05 # goto +5            # goto <778:cond_end>
# <777:cond_false>
10 00    # bipush 0           # false
# <778:cond_end>
14 4C 0C # aldc 19468         # s[19468] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 66.4-66.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 4C 5E # aldc 19550         # s[19550] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 66.4-66.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
36 06    # vstore 6           # i = lo;
# <783:loop>
A7 00 03 # goto +3            # goto <784:body>
# <784:body>
15 02    # vload 2            # lo
15 06    # vload 6            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <786:cond_true>
A7 00 17 # goto +23           # goto <787:cond_false>
# <786:cond_true>
15 06    # vload 6            # i
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <789:cond_true>
A7 00 08 # goto +8            # goto <790:cond_false>
# <789:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <791:cond_end>
# <790:cond_false>
10 00    # bipush 0           # false
# <791:cond_end>
A7 00 05 # goto +5            # goto <788:cond_end>
# <787:cond_false>
10 00    # bipush 0           # false
# <788:cond_end>
14 4C 70 # aldc 19568         # s[19568] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 69.6-69.40: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= i) && (i <= hi)) [failure message on stack]
15 06    # vload 6            # i
15 03    # vload 3            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <792:then>
A7 00 2D # goto +45           # goto <793:else>
# <792:then>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 06    # vload 6            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 4C C7 # aldc 19655         # s[19655] = "string_lt_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 71.11-71.34)"
B8 00 26 # invokestatic 38    # string_compare__1(x, A[i], "string_lt_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 71.11-71.34)")
10 00    # bipush 0           # 0
A1 00 10 # if_icmplt +16      # if (string_compare__1(x, A[i], "string_lt_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 71.11-71.34)") < 0) goto <796:else>
A7 00 03 # goto +3            # goto <795:then>
# <795:then>
10 00    # bipush 0           # false
36 05    # vstore 5           # _result = false;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <797:endif>
# <796:else>
# <797:endif>
15 06    # vload 6            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # i += 1;
A7 00 06 # goto +6            # goto <794:endif>
# <793:else>
A7 00 06 # goto +6            # break
# <794:endif>
A7 FF A2 # goto -94           # goto <783:loop>
# <785:exit>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 


#<string_le_seg>
05                # number of arguments = 5
07                # number of local variables = 7
00 A6             # code length = 166 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <801:and>
A7 00 22 # goto +34           # goto <799:cond_false>
# <801:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <798:cond_true>
A7 00 18 # goto +24           # goto <799:cond_false>
# <798:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <802:cond_true>
A7 00 08 # goto +8            # goto <803:cond_false>
# <802:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <804:cond_end>
# <803:cond_false>
10 00    # bipush 0           # false
# <804:cond_end>
A7 00 05 # goto +5            # goto <800:cond_end>
# <799:cond_false>
10 00    # bipush 0           # false
# <800:cond_end>
14 4D 0C # aldc 19724         # s[19724] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 77.4-77.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 4D 5E # aldc 19806         # s[19806] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 77.4-77.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 02    # vload 2            # lo
36 06    # vstore 6           # i = lo;
# <805:loop>
A7 00 03 # goto +3            # goto <806:body>
# <806:body>
15 02    # vload 2            # lo
15 06    # vload 6            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <808:cond_true>
A7 00 17 # goto +23           # goto <809:cond_false>
# <808:cond_true>
15 06    # vload 6            # i
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <811:cond_true>
A7 00 08 # goto +8            # goto <812:cond_false>
# <811:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <813:cond_end>
# <812:cond_false>
10 00    # bipush 0           # false
# <813:cond_end>
A7 00 05 # goto +5            # goto <810:cond_end>
# <809:cond_false>
10 00    # bipush 0           # false
# <810:cond_end>
14 4D 70 # aldc 19824         # s[19824] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 80.6-80.40: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= i) && (i <= hi)) [failure message on stack]
15 06    # vload 6            # i
15 03    # vload 3            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <814:then>
A7 00 2D # goto +45           # goto <815:else>
# <814:then>
15 00    # vload 0            # x
15 01    # vload 1            # A
15 06    # vload 6            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 4D C7 # aldc 19911         # s[19911] = "string_le_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 82.11-82.34)"
B8 00 26 # invokestatic 38    # string_compare__1(x, A[i], "string_le_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 82.11-82.34)")
10 00    # bipush 0           # 0
A4 00 10 # if_icmple +16      # if (string_compare__1(x, A[i], "string_le_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 82.11-82.34)") <= 0) goto <818:else>
A7 00 03 # goto +3            # goto <817:then>
# <817:then>
10 00    # bipush 0           # false
36 05    # vstore 5           # _result = false;
15 05    # vload 5            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <819:endif>
# <818:else>
# <819:endif>
15 06    # vload 6            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # i += 1;
A7 00 06 # goto +6            # goto <816:endif>
# <815:else>
A7 00 06 # goto +6            # break
# <816:endif>
A7 FF A2 # goto -94           # goto <805:loop>
# <807:exit>
10 01    # bipush 1           # true
36 05    # vstore 5           # _result = true;
15 05    # vload 5            # _result
B0       # return             # 


#<string_gt_segs>
07                # number of arguments = 7
0A                # number of local variables = 10
01 29             # code length = 297 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <823:and>
A7 00 22 # goto +34           # goto <821:cond_false>
# <823:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <820:cond_true>
A7 00 18 # goto +24           # goto <821:cond_false>
# <820:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <824:cond_true>
A7 00 08 # goto +8            # goto <825:cond_false>
# <824:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <826:cond_end>
# <825:cond_false>
10 00    # bipush 0           # false
# <826:cond_end>
A7 00 05 # goto +5            # goto <822:cond_end>
# <821:cond_false>
10 00    # bipush 0           # false
# <822:cond_end>
14 4E 0C # aldc 19980         # s[19980] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 89.4-89.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 4E 5E # aldc 20062         # s[20062] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 89.4-89.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <830:and>
A7 00 22 # goto +34           # goto <828:cond_false>
# <830:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <827:cond_true>
A7 00 18 # goto +24           # goto <828:cond_false>
# <827:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <831:cond_true>
A7 00 08 # goto +8            # goto <832:cond_false>
# <831:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <833:cond_end>
# <832:cond_false>
10 00    # bipush 0           # false
# <833:cond_end>
A7 00 05 # goto +5            # goto <829:cond_end>
# <828:cond_false>
10 00    # bipush 0           # false
# <829:cond_end>
14 4E 70 # aldc 20080         # s[20080] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 90.4-90.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 4E C2 # aldc 20162         # s[20162] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 90.4-90.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 01    # vload 1            # lo1
36 08    # vstore 8           # i = lo1;
# <834:loop>
A7 00 03 # goto +3            # goto <835:body>
# <835:body>
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <837:cond_true>
A7 00 17 # goto +23           # goto <838:cond_false>
# <837:cond_true>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <840:cond_true>
A7 00 08 # goto +8            # goto <841:cond_false>
# <840:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <842:cond_end>
# <841:cond_false>
10 00    # bipush 0           # false
# <842:cond_end>
A7 00 05 # goto +5            # goto <839:cond_end>
# <838:cond_false>
10 00    # bipush 0           # false
# <839:cond_end>
14 4E D4 # aldc 20180         # s[20180] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 93.8-93.46: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo1) && (lo1 <= hi1)) [failure message on stack]
15 08    # vload 8            # i
15 02    # vload 2            # hi1
A1 00 06 # if_icmplt +6       # if (i < hi1) goto <843:then>
A7 00 76 # goto +118          # goto <844:else>
# <843:then>
15 04    # vload 4            # lo2
36 09    # vstore 9           # j = lo2;
# <846:loop>
A7 00 03 # goto +3            # goto <847:body>
# <847:body>
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <849:cond_true>
A7 00 17 # goto +23           # goto <850:cond_false>
# <849:cond_true>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <852:cond_true>
A7 00 08 # goto +8            # goto <853:cond_false>
# <852:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <854:cond_end>
# <853:cond_false>
10 00    # bipush 0           # false
# <854:cond_end>
A7 00 05 # goto +5            # goto <851:cond_end>
# <850:cond_false>
10 00    # bipush 0           # false
# <851:cond_end>
14 4F 2B # aldc 20267         # s[20267] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 95.10-95.48: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo2) && (lo2 <= hi2)) [failure message on stack]
15 09    # vload 9            # j
15 05    # vload 5            # hi2
A1 00 06 # if_icmplt +6       # if (j < hi2) goto <855:then>
A7 00 31 # goto +49           # goto <856:else>
# <855:then>
15 00    # vload 0            # A
15 08    # vload 8            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
15 03    # vload 3            # B
15 09    # vload 9            # j
63       # aadds              # &B[j]
2F       # amload             # B[j]
14 4F 83 # aldc 20355         # s[20355] = "string_gt_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 96.13-96.39)"
B8 00 26 # invokestatic 38    # string_compare__1(A[i], B[j], "string_gt_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 96.13-96.39)")
10 00    # bipush 0           # 0
A3 00 10 # if_icmpgt +16      # if (string_compare__1(A[i], B[j], "string_gt_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 96.13-96.39)") > 0) goto <859:else>
A7 00 03 # goto +3            # goto <858:then>
# <858:then>
10 00    # bipush 0           # false
36 07    # vstore 7           # _result = false;
15 07    # vload 7            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <860:endif>
# <859:else>
# <860:endif>
15 09    # vload 9            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # j += 1;
A7 00 06 # goto +6            # goto <857:endif>
# <856:else>
A7 00 06 # goto +6            # break
# <857:endif>
A7 FF 9E # goto -98           # goto <846:loop>
# <848:exit>
15 08    # vload 8            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # i += 1;
A7 00 06 # goto +6            # goto <845:endif>
# <844:else>
A7 00 06 # goto +6            # break
# <845:endif>
A7 FF 59 # goto -167          # goto <834:loop>
# <836:exit>
10 01    # bipush 1           # true
36 07    # vstore 7           # _result = true;
15 07    # vload 7            # _result
B0       # return             # 


#<string_ge_segs>
07                # number of arguments = 7
0A                # number of local variables = 10
01 29             # code length = 297 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <864:and>
A7 00 22 # goto +34           # goto <862:cond_false>
# <864:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <861:cond_true>
A7 00 18 # goto +24           # goto <862:cond_false>
# <861:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <865:cond_true>
A7 00 08 # goto +8            # goto <866:cond_false>
# <865:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <867:cond_end>
# <866:cond_false>
10 00    # bipush 0           # false
# <867:cond_end>
A7 00 05 # goto +5            # goto <863:cond_end>
# <862:cond_false>
10 00    # bipush 0           # false
# <863:cond_end>
14 4F C9 # aldc 20425         # s[20425] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 102.4-102.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 50 1D # aldc 20509         # s[20509] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 102.4-102.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <871:and>
A7 00 22 # goto +34           # goto <869:cond_false>
# <871:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <868:cond_true>
A7 00 18 # goto +24           # goto <869:cond_false>
# <868:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <872:cond_true>
A7 00 08 # goto +8            # goto <873:cond_false>
# <872:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <874:cond_end>
# <873:cond_false>
10 00    # bipush 0           # false
# <874:cond_end>
A7 00 05 # goto +5            # goto <870:cond_end>
# <869:cond_false>
10 00    # bipush 0           # false
# <870:cond_end>
14 50 2F # aldc 20527         # s[20527] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 103.4-103.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 50 83 # aldc 20611         # s[20611] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 103.4-103.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 01    # vload 1            # lo1
36 08    # vstore 8           # i = lo1;
# <875:loop>
A7 00 03 # goto +3            # goto <876:body>
# <876:body>
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <878:cond_true>
A7 00 17 # goto +23           # goto <879:cond_false>
# <878:cond_true>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <881:cond_true>
A7 00 08 # goto +8            # goto <882:cond_false>
# <881:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <883:cond_end>
# <882:cond_false>
10 00    # bipush 0           # false
# <883:cond_end>
A7 00 05 # goto +5            # goto <880:cond_end>
# <879:cond_false>
10 00    # bipush 0           # false
# <880:cond_end>
14 50 95 # aldc 20629         # s[20629] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 106.8-106.46: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo1) && (lo1 <= hi1)) [failure message on stack]
15 08    # vload 8            # i
15 02    # vload 2            # hi1
A1 00 06 # if_icmplt +6       # if (i < hi1) goto <884:then>
A7 00 76 # goto +118          # goto <885:else>
# <884:then>
15 04    # vload 4            # lo2
36 09    # vstore 9           # j = lo2;
# <887:loop>
A7 00 03 # goto +3            # goto <888:body>
# <888:body>
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <890:cond_true>
A7 00 17 # goto +23           # goto <891:cond_false>
# <890:cond_true>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <893:cond_true>
A7 00 08 # goto +8            # goto <894:cond_false>
# <893:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <895:cond_end>
# <894:cond_false>
10 00    # bipush 0           # false
# <895:cond_end>
A7 00 05 # goto +5            # goto <892:cond_end>
# <891:cond_false>
10 00    # bipush 0           # false
# <892:cond_end>
14 50 EE # aldc 20718         # s[20718] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 108.10-108.48: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo2) && (lo2 <= hi2)) [failure message on stack]
15 09    # vload 9            # j
15 05    # vload 5            # hi2
A1 00 06 # if_icmplt +6       # if (j < hi2) goto <896:then>
A7 00 31 # goto +49           # goto <897:else>
# <896:then>
15 00    # vload 0            # A
15 08    # vload 8            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
15 03    # vload 3            # B
15 09    # vload 9            # j
63       # aadds              # &B[j]
2F       # amload             # B[j]
14 51 48 # aldc 20808         # s[20808] = "string_ge_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 109.13-109.39)"
B8 00 26 # invokestatic 38    # string_compare__1(A[i], B[j], "string_ge_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 109.13-109.39)")
10 00    # bipush 0           # 0
A2 00 10 # if_icmpge +16      # if (string_compare__1(A[i], B[j], "string_ge_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 109.13-109.39)") >= 0) goto <900:else>
A7 00 03 # goto +3            # goto <899:then>
# <899:then>
10 00    # bipush 0           # false
36 07    # vstore 7           # _result = false;
15 07    # vload 7            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <901:endif>
# <900:else>
# <901:endif>
15 09    # vload 9            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # j += 1;
A7 00 06 # goto +6            # goto <898:endif>
# <897:else>
A7 00 06 # goto +6            # break
# <898:endif>
A7 FF 9E # goto -98           # goto <887:loop>
# <889:exit>
15 08    # vload 8            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # i += 1;
A7 00 06 # goto +6            # goto <886:endif>
# <885:else>
A7 00 06 # goto +6            # break
# <886:endif>
A7 FF 59 # goto -167          # goto <875:loop>
# <877:exit>
10 01    # bipush 1           # true
36 07    # vstore 7           # _result = true;
15 07    # vload 7            # _result
B0       # return             # 


#<string_lt_segs>
07                # number of arguments = 7
0A                # number of local variables = 10
01 29             # code length = 297 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <905:and>
A7 00 22 # goto +34           # goto <903:cond_false>
# <905:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <902:cond_true>
A7 00 18 # goto +24           # goto <903:cond_false>
# <902:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <906:cond_true>
A7 00 08 # goto +8            # goto <907:cond_false>
# <906:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <908:cond_end>
# <907:cond_false>
10 00    # bipush 0           # false
# <908:cond_end>
A7 00 05 # goto +5            # goto <904:cond_end>
# <903:cond_false>
10 00    # bipush 0           # false
# <904:cond_end>
14 51 90 # aldc 20880         # s[20880] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 115.4-115.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 51 E4 # aldc 20964         # s[20964] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 115.4-115.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <912:and>
A7 00 22 # goto +34           # goto <910:cond_false>
# <912:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <909:cond_true>
A7 00 18 # goto +24           # goto <910:cond_false>
# <909:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <913:cond_true>
A7 00 08 # goto +8            # goto <914:cond_false>
# <913:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <915:cond_end>
# <914:cond_false>
10 00    # bipush 0           # false
# <915:cond_end>
A7 00 05 # goto +5            # goto <911:cond_end>
# <910:cond_false>
10 00    # bipush 0           # false
# <911:cond_end>
14 51 F6 # aldc 20982         # s[20982] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 116.4-116.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 52 4A # aldc 21066         # s[21066] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 116.4-116.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 01    # vload 1            # lo1
36 08    # vstore 8           # i = lo1;
# <916:loop>
A7 00 03 # goto +3            # goto <917:body>
# <917:body>
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <919:cond_true>
A7 00 17 # goto +23           # goto <920:cond_false>
# <919:cond_true>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <922:cond_true>
A7 00 08 # goto +8            # goto <923:cond_false>
# <922:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <924:cond_end>
# <923:cond_false>
10 00    # bipush 0           # false
# <924:cond_end>
A7 00 05 # goto +5            # goto <921:cond_end>
# <920:cond_false>
10 00    # bipush 0           # false
# <921:cond_end>
14 52 5C # aldc 21084         # s[21084] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 119.8-119.46: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo1) && (lo1 <= hi1)) [failure message on stack]
15 08    # vload 8            # i
15 02    # vload 2            # hi1
A1 00 06 # if_icmplt +6       # if (i < hi1) goto <925:then>
A7 00 76 # goto +118          # goto <926:else>
# <925:then>
15 04    # vload 4            # lo2
36 09    # vstore 9           # j = lo2;
# <928:loop>
A7 00 03 # goto +3            # goto <929:body>
# <929:body>
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <931:cond_true>
A7 00 17 # goto +23           # goto <932:cond_false>
# <931:cond_true>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <934:cond_true>
A7 00 08 # goto +8            # goto <935:cond_false>
# <934:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <936:cond_end>
# <935:cond_false>
10 00    # bipush 0           # false
# <936:cond_end>
A7 00 05 # goto +5            # goto <933:cond_end>
# <932:cond_false>
10 00    # bipush 0           # false
# <933:cond_end>
14 52 B5 # aldc 21173         # s[21173] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 121.10-121.48: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo2) && (lo2 <= hi2)) [failure message on stack]
15 09    # vload 9            # j
15 05    # vload 5            # hi2
A1 00 06 # if_icmplt +6       # if (j < hi2) goto <937:then>
A7 00 31 # goto +49           # goto <938:else>
# <937:then>
15 00    # vload 0            # A
15 08    # vload 8            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
15 03    # vload 3            # B
15 09    # vload 9            # j
63       # aadds              # &B[j]
2F       # amload             # B[j]
14 53 0F # aldc 21263         # s[21263] = "string_lt_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 122.13-122.39)"
B8 00 26 # invokestatic 38    # string_compare__1(A[i], B[j], "string_lt_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 122.13-122.39)")
10 00    # bipush 0           # 0
A1 00 10 # if_icmplt +16      # if (string_compare__1(A[i], B[j], "string_lt_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 122.13-122.39)") < 0) goto <941:else>
A7 00 03 # goto +3            # goto <940:then>
# <940:then>
10 00    # bipush 0           # false
36 07    # vstore 7           # _result = false;
15 07    # vload 7            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <942:endif>
# <941:else>
# <942:endif>
15 09    # vload 9            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # j += 1;
A7 00 06 # goto +6            # goto <939:endif>
# <938:else>
A7 00 06 # goto +6            # break
# <939:endif>
A7 FF 9E # goto -98           # goto <928:loop>
# <930:exit>
15 08    # vload 8            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # i += 1;
A7 00 06 # goto +6            # goto <927:endif>
# <926:else>
A7 00 06 # goto +6            # break
# <927:endif>
A7 FF 59 # goto -167          # goto <916:loop>
# <918:exit>
10 01    # bipush 1           # true
36 07    # vstore 7           # _result = true;
15 07    # vload 7            # _result
B0       # return             # 


#<string_le_segs>
07                # number of arguments = 7
0A                # number of local variables = 10
01 29             # code length = 297 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <946:and>
A7 00 22 # goto +34           # goto <944:cond_false>
# <946:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <943:cond_true>
A7 00 18 # goto +24           # goto <944:cond_false>
# <943:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <947:cond_true>
A7 00 08 # goto +8            # goto <948:cond_false>
# <947:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <949:cond_end>
# <948:cond_false>
10 00    # bipush 0           # false
# <949:cond_end>
A7 00 05 # goto +5            # goto <945:cond_end>
# <944:cond_false>
10 00    # bipush 0           # false
# <945:cond_end>
14 53 57 # aldc 21335         # s[21335] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 128.4-128.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 53 AB # aldc 21419         # s[21419] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 128.4-128.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <953:and>
A7 00 22 # goto +34           # goto <951:cond_false>
# <953:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <950:cond_true>
A7 00 18 # goto +24           # goto <951:cond_false>
# <950:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <954:cond_true>
A7 00 08 # goto +8            # goto <955:cond_false>
# <954:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <956:cond_end>
# <955:cond_false>
10 00    # bipush 0           # false
# <956:cond_end>
A7 00 05 # goto +5            # goto <952:cond_end>
# <951:cond_false>
10 00    # bipush 0           # false
# <952:cond_end>
14 53 BD # aldc 21437         # s[21437] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 129.4-129.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 54 11 # aldc 21521         # s[21521] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 129.4-129.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 01    # vload 1            # lo1
36 08    # vstore 8           # i = lo1;
# <957:loop>
A7 00 03 # goto +3            # goto <958:body>
# <958:body>
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <960:cond_true>
A7 00 17 # goto +23           # goto <961:cond_false>
# <960:cond_true>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <963:cond_true>
A7 00 08 # goto +8            # goto <964:cond_false>
# <963:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <965:cond_end>
# <964:cond_false>
10 00    # bipush 0           # false
# <965:cond_end>
A7 00 05 # goto +5            # goto <962:cond_end>
# <961:cond_false>
10 00    # bipush 0           # false
# <962:cond_end>
14 54 23 # aldc 21539         # s[21539] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 132.8-132.46: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo1) && (lo1 <= hi1)) [failure message on stack]
15 08    # vload 8            # i
15 02    # vload 2            # hi1
A1 00 06 # if_icmplt +6       # if (i < hi1) goto <966:then>
A7 00 76 # goto +118          # goto <967:else>
# <966:then>
15 04    # vload 4            # lo2
36 09    # vstore 9           # j = lo2;
# <969:loop>
A7 00 03 # goto +3            # goto <970:body>
# <970:body>
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <972:cond_true>
A7 00 17 # goto +23           # goto <973:cond_false>
# <972:cond_true>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <975:cond_true>
A7 00 08 # goto +8            # goto <976:cond_false>
# <975:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <977:cond_end>
# <976:cond_false>
10 00    # bipush 0           # false
# <977:cond_end>
A7 00 05 # goto +5            # goto <974:cond_end>
# <973:cond_false>
10 00    # bipush 0           # false
# <974:cond_end>
14 54 7C # aldc 21628         # s[21628] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 134.10-134.48: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= lo2) && (lo2 <= hi2)) [failure message on stack]
15 09    # vload 9            # j
15 05    # vload 5            # hi2
A1 00 06 # if_icmplt +6       # if (j < hi2) goto <978:then>
A7 00 31 # goto +49           # goto <979:else>
# <978:then>
15 00    # vload 0            # A
15 08    # vload 8            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
15 03    # vload 3            # B
15 09    # vload 9            # j
63       # aadds              # &B[j]
2F       # amload             # B[j]
14 54 D6 # aldc 21718         # s[21718] = "string_le_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 135.13-135.39)"
B8 00 26 # invokestatic 38    # string_compare__1(A[i], B[j], "string_le_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 135.13-135.39)")
10 00    # bipush 0           # 0
A4 00 10 # if_icmple +16      # if (string_compare__1(A[i], B[j], "string_le_segs (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 135.13-135.39)") <= 0) goto <982:else>
A7 00 03 # goto +3            # goto <981:then>
# <981:then>
10 00    # bipush 0           # false
36 07    # vstore 7           # _result = false;
15 07    # vload 7            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <983:endif>
# <982:else>
# <983:endif>
15 09    # vload 9            # j
10 01    # bipush 1           # 1
60       # iadd               # 
36 09    # vstore 9           # j += 1;
A7 00 06 # goto +6            # goto <980:endif>
# <979:else>
A7 00 06 # goto +6            # break
# <980:endif>
A7 FF 9E # goto -98           # goto <969:loop>
# <971:exit>
15 08    # vload 8            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # i += 1;
A7 00 06 # goto +6            # goto <968:endif>
# <967:else>
A7 00 06 # goto +6            # break
# <968:endif>
A7 FF 59 # goto -167          # goto <957:loop>
# <959:exit>
10 01    # bipush 1           # true
36 07    # vstore 7           # _result = true;
15 07    # vload 7            # _result
B0       # return             # 


#<string_print_seg>
04                # number of arguments = 4
05                # number of local variables = 5
00 F7             # code length = 247 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <987:and>
A7 00 22 # goto +34           # goto <985:cond_false>
# <987:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <984:cond_true>
A7 00 18 # goto +24           # goto <985:cond_false>
# <984:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <988:cond_true>
A7 00 08 # goto +8            # goto <989:cond_false>
# <988:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <990:cond_end>
# <989:cond_false>
10 00    # bipush 0           # false
# <990:cond_end>
A7 00 05 # goto +5            # goto <986:cond_end>
# <985:cond_false>
10 00    # bipush 0           # false
# <986:cond_end>
14 55 1E # aldc 21790         # s[21790] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 140.4-140.53: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 55 72 # aldc 21874         # s[21874] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 140.4-140.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
14 55 84 # aldc 21892         # s[21892] = "array["
14 55 8B # aldc 21899         # s[21899] = "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)"
B8 00 01 # invokestatic 1     # print__1("array[", "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)")
57       # pop                # (ignore result)
15 01    # vload 1            # lo
14 55 D4 # aldc 21972         # s[21972] = "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)"
B8 00 03 # invokestatic 3     # printint__1(lo, "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)")
57       # pop                # (ignore result)
14 56 1D # aldc 22045         # s[22045] = ","
14 56 1F # aldc 22047         # s[22047] = "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)"
B8 00 01 # invokestatic 1     # print__1(",", "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)")
57       # pop                # (ignore result)
15 02    # vload 2            # hi
14 56 68 # aldc 22120         # s[22120] = "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)"
B8 00 03 # invokestatic 3     # printint__1(hi, "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)")
57       # pop                # (ignore result)
14 56 B1 # aldc 22193         # s[22193] = ") = ["
14 56 B7 # aldc 22199         # s[22199] = "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)"
B8 00 01 # invokestatic 1     # print__1(") = [", "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 142.3-142.37)")
57       # pop                # (ignore result)
15 01    # vload 1            # lo
36 04    # vstore 4           # i = lo;
# <991:loop>
A7 00 03 # goto +3            # goto <992:body>
# <992:body>
15 01    # vload 1            # lo
15 04    # vload 4            # i
A4 00 06 # if_icmple +6       # if (lo <= i) goto <994:cond_true>
A7 00 17 # goto +23           # goto <995:cond_false>
# <994:cond_true>
15 04    # vload 4            # i
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (i <= hi) goto <997:cond_true>
A7 00 08 # goto +8            # goto <998:cond_false>
# <997:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <999:cond_end>
# <998:cond_false>
10 00    # bipush 0           # false
# <999:cond_end>
A7 00 05 # goto +5            # goto <996:cond_end>
# <995:cond_false>
10 00    # bipush 0           # false
# <996:cond_end>
14 57 00 # aldc 22272         # s[22272] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 144.6-144.40: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= i) && (i <= hi)) [failure message on stack]
15 04    # vload 4            # i
15 02    # vload 2            # hi
A1 00 06 # if_icmplt +6       # if (i < hi) goto <1000:then>
A7 00 48 # goto +72           # goto <1001:else>
# <1000:then>
14 57 59 # aldc 22361         # s[22361] = ""
14 57 5A # aldc 22362         # s[22362] = "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 146.5-146.23)"
B8 00 01 # invokestatic 1     # print__1("", "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 146.5-146.23)")
57       # pop                # (ignore result)
15 00    # vload 0            # A
15 04    # vload 4            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
14 57 A3 # aldc 22435         # s[22435] = "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 146.5-146.23)"
B8 00 01 # invokestatic 1     # print__1(A[i], "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 146.5-146.23)")
57       # pop                # (ignore result)
14 57 EC # aldc 22508         # s[22508] = ""
14 57 ED # aldc 22509         # s[22509] = "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 146.5-146.23)"
B8 00 01 # invokestatic 1     # print__1("", "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 146.5-146.23)")
57       # pop                # (ignore result)
15 04    # vload 4            # i
15 02    # vload 2            # hi
10 01    # bipush 1           # 1
64       # isub               # (hi - 1)
A0 00 06 # if_cmpne +6        # if (i != (hi - 1)) goto <1003:then>
A7 00 10 # goto +16           # goto <1004:else>
# <1003:then>
14 58 36 # aldc 22582         # s[22582] = ", "
14 58 39 # aldc 22585         # s[22585] = "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 147.20-147.32)"
B8 00 01 # invokestatic 1     # print__1(", ", "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 147.20-147.32)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <1005:endif>
# <1004:else>
# <1005:endif>
15 04    # vload 4            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # i += 1;
A7 00 06 # goto +6            # goto <1002:endif>
# <1001:else>
A7 00 06 # goto +6            # break
# <1002:endif>
A7 FF 87 # goto -121          # goto <991:loop>
# <993:exit>
14 58 83 # aldc 22659         # s[22659] = "]"
14 58 85 # aldc 22661         # s[22661] = "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 149.3-149.14)"
B8 00 01 # invokestatic 1     # print__1("]", "string_print_seg (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 149.3-149.14)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<string_is_in__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <1009:and>
A7 00 22 # goto +34           # goto <1007:cond_false>
# <1009:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <1006:cond_true>
A7 00 18 # goto +24           # goto <1007:cond_false>
# <1006:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <1010:cond_true>
A7 00 08 # goto +8            # goto <1011:cond_false>
# <1010:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1012:cond_end>
# <1011:cond_false>
10 00    # bipush 0           # false
# <1012:cond_end>
A7 00 05 # goto +5            # goto <1008:cond_end>
# <1007:cond_false>
10 00    # bipush 0           # false
# <1008:cond_end>
14 58 CE # aldc 22734         # s[22734] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 160.4-160.54: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 59 22 # aldc 22818         # s[22818] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 160.4-160.54: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 59 34 # aldc 22836         # s[22836] = "string_is_in__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 159.1-160.60)"
B8 00 54 # invokestatic 84    # string_is_in(x, A, lo, hi, "string_is_in__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 159.1-160.60)")
36 05    # vstore 5           # _result = string_is_in(x, A, lo, hi, "string_is_in__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 159.1-160.60)");
15 05    # vload 5            # _result
B0       # return             # 


#<string_is_sorted__1>
04                # number of arguments = 4
05                # number of local variables = 5
00 4B             # code length = 75 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <1016:and>
A7 00 22 # goto +34           # goto <1014:cond_false>
# <1016:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <1013:cond_true>
A7 00 18 # goto +24           # goto <1014:cond_false>
# <1013:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <1017:cond_true>
A7 00 08 # goto +8            # goto <1018:cond_false>
# <1017:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1019:cond_end>
# <1018:cond_false>
10 00    # bipush 0           # false
# <1019:cond_end>
A7 00 05 # goto +5            # goto <1015:cond_end>
# <1014:cond_false>
10 00    # bipush 0           # false
# <1015:cond_end>
14 59 7C # aldc 22908         # s[22908] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 164.4-164.54: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 59 D0 # aldc 22992         # s[22992] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 164.4-164.54: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 02    # vload 2            # hi
14 59 E2 # aldc 23010         # s[23010] = "string_is_sorted__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 163.1-164.60)"
B8 00 55 # invokestatic 85    # string_is_sorted(A, lo, hi, "string_is_sorted__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 163.1-164.60)")
36 04    # vstore 4           # _result = string_is_sorted(A, lo, hi, "string_is_sorted__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 163.1-164.60)");
15 04    # vload 4            # _result
B0       # return             # 


#<string_swap__1>
04                # number of arguments = 4
04                # number of local variables = 4
00 58             # code length = 88 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <1024:and>
A7 00 2D # goto +45           # goto <1021:cond_false>
# <1024:and>
15 01    # vload 1            # i
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A1 00 06 # if_icmplt +6       # if (i < \length(A)) goto <1023:and>
A7 00 22 # goto +34           # goto <1021:cond_false>
# <1023:and>
10 00    # bipush 0           # 0
15 02    # vload 2            # j
A4 00 06 # if_icmple +6       # if (0 <= j) goto <1020:cond_true>
A7 00 18 # goto +24           # goto <1021:cond_false>
# <1020:cond_true>
15 02    # vload 2            # j
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A1 00 06 # if_icmplt +6       # if (j < \length(A)) goto <1025:cond_true>
A7 00 08 # goto +8            # goto <1026:cond_false>
# <1025:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1027:cond_end>
# <1026:cond_false>
10 00    # bipush 0           # false
# <1027:cond_end>
A7 00 05 # goto +5            # goto <1022:cond_end>
# <1021:cond_false>
10 00    # bipush 0           # false
# <1022:cond_end>
14 5A 2E # aldc 23086         # s[23086] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 168.4-168.66: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 5A 82 # aldc 23170         # s[23170] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 168.4-168.66: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((((0 <= i) && (i < \length(A))) && (0 <= j)) && (j < \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # i
15 02    # vload 2            # j
14 5A 94 # aldc 23188         # s[23188] = "string_swap__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 167.1-168.72)"
B8 00 56 # invokestatic 86    # string_swap(A, i, j, "string_swap__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 167.1-168.72)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<string_gt_seg__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <1031:and>
A7 00 22 # goto +34           # goto <1029:cond_false>
# <1031:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <1028:cond_true>
A7 00 18 # goto +24           # goto <1029:cond_false>
# <1028:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <1032:cond_true>
A7 00 08 # goto +8            # goto <1033:cond_false>
# <1032:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1034:cond_end>
# <1033:cond_false>
10 00    # bipush 0           # false
# <1034:cond_end>
A7 00 05 # goto +5            # goto <1030:cond_end>
# <1029:cond_false>
10 00    # bipush 0           # false
# <1030:cond_end>
14 5A DB # aldc 23259         # s[23259] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 173.4-173.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 5B 2F # aldc 23343         # s[23343] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 173.4-173.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 5B 41 # aldc 23361         # s[23361] = "string_gt_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 172.1-173.59)"
B8 00 57 # invokestatic 87    # string_gt_seg(x, A, lo, hi, "string_gt_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 172.1-173.59)")
36 05    # vstore 5           # _result = string_gt_seg(x, A, lo, hi, "string_gt_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 172.1-173.59)");
15 05    # vload 5            # _result
B0       # return             # 


#<string_ge_seg__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <1038:and>
A7 00 22 # goto +34           # goto <1036:cond_false>
# <1038:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <1035:cond_true>
A7 00 18 # goto +24           # goto <1036:cond_false>
# <1035:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <1039:cond_true>
A7 00 08 # goto +8            # goto <1040:cond_false>
# <1039:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1041:cond_end>
# <1040:cond_false>
10 00    # bipush 0           # false
# <1041:cond_end>
A7 00 05 # goto +5            # goto <1037:cond_end>
# <1036:cond_false>
10 00    # bipush 0           # false
# <1037:cond_end>
14 5B 8A # aldc 23434         # s[23434] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 177.4-177.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 5B DE # aldc 23518         # s[23518] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 177.4-177.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 5B F0 # aldc 23536         # s[23536] = "string_ge_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 176.1-177.59)"
B8 00 58 # invokestatic 88    # string_ge_seg(x, A, lo, hi, "string_ge_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 176.1-177.59)")
36 05    # vstore 5           # _result = string_ge_seg(x, A, lo, hi, "string_ge_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 176.1-177.59)");
15 05    # vload 5            # _result
B0       # return             # 


#<string_lt_seg__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <1045:and>
A7 00 22 # goto +34           # goto <1043:cond_false>
# <1045:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <1042:cond_true>
A7 00 18 # goto +24           # goto <1043:cond_false>
# <1042:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <1046:cond_true>
A7 00 08 # goto +8            # goto <1047:cond_false>
# <1046:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1048:cond_end>
# <1047:cond_false>
10 00    # bipush 0           # false
# <1048:cond_end>
A7 00 05 # goto +5            # goto <1044:cond_end>
# <1043:cond_false>
10 00    # bipush 0           # false
# <1044:cond_end>
14 5C 39 # aldc 23609         # s[23609] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 181.4-181.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 5C 8D # aldc 23693         # s[23693] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 181.4-181.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 5C 9F # aldc 23711         # s[23711] = "string_lt_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 180.1-181.59)"
B8 00 59 # invokestatic 89    # string_lt_seg(x, A, lo, hi, "string_lt_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 180.1-181.59)")
36 05    # vstore 5           # _result = string_lt_seg(x, A, lo, hi, "string_lt_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 180.1-181.59)");
15 05    # vload 5            # _result
B0       # return             # 


#<string_le_seg__1>
05                # number of arguments = 5
06                # number of local variables = 6
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <1052:and>
A7 00 22 # goto +34           # goto <1050:cond_false>
# <1052:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <1049:cond_true>
A7 00 18 # goto +24           # goto <1050:cond_false>
# <1049:cond_true>
15 03    # vload 3            # hi
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <1053:cond_true>
A7 00 08 # goto +8            # goto <1054:cond_false>
# <1053:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1055:cond_end>
# <1054:cond_false>
10 00    # bipush 0           # false
# <1055:cond_end>
A7 00 05 # goto +5            # goto <1051:cond_end>
# <1050:cond_false>
10 00    # bipush 0           # false
# <1051:cond_end>
14 5C E8 # aldc 23784         # s[23784] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 185.4-185.53: @requires annotation failed\n"
15 04    # vload 4            # _caller
14 5D 3C # aldc 23868         # s[23868] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 185.4-185.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # lo
15 03    # vload 3            # hi
14 5D 4E # aldc 23886         # s[23886] = "string_le_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 184.1-185.59)"
B8 00 5A # invokestatic 90    # string_le_seg(x, A, lo, hi, "string_le_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 184.1-185.59)")
36 05    # vstore 5           # _result = string_le_seg(x, A, lo, hi, "string_le_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 184.1-185.59)");
15 05    # vload 5            # _result
B0       # return             # 


#<string_gt_segs__1>
07                # number of arguments = 7
08                # number of local variables = 8
00 8B             # code length = 139 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <1059:and>
A7 00 22 # goto +34           # goto <1057:cond_false>
# <1059:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <1056:cond_true>
A7 00 18 # goto +24           # goto <1057:cond_false>
# <1056:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <1060:cond_true>
A7 00 08 # goto +8            # goto <1061:cond_false>
# <1060:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1062:cond_end>
# <1061:cond_false>
10 00    # bipush 0           # false
# <1062:cond_end>
A7 00 05 # goto +5            # goto <1058:cond_end>
# <1057:cond_false>
10 00    # bipush 0           # false
# <1058:cond_end>
14 5D 97 # aldc 23959         # s[23959] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 191.4-191.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 5D EB # aldc 24043         # s[24043] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 191.4-191.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <1066:and>
A7 00 22 # goto +34           # goto <1064:cond_false>
# <1066:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <1063:cond_true>
A7 00 18 # goto +24           # goto <1064:cond_false>
# <1063:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <1067:cond_true>
A7 00 08 # goto +8            # goto <1068:cond_false>
# <1067:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1069:cond_end>
# <1068:cond_false>
10 00    # bipush 0           # false
# <1069:cond_end>
A7 00 05 # goto +5            # goto <1065:cond_end>
# <1064:cond_false>
10 00    # bipush 0           # false
# <1065:cond_end>
14 5D FD # aldc 24061         # s[24061] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 192.4-192.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 5E 51 # aldc 24145         # s[24145] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 192.4-192.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 5E 63 # aldc 24163         # s[24163] = "string_gt_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 189.1-192.63)"
B8 00 5B # invokestatic 91    # string_gt_segs(A, lo1, hi1, B, lo2, hi2, "string_gt_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 189.1-192.63)")
36 07    # vstore 7           # _result = string_gt_segs(A, lo1, hi1, B, lo2, hi2, "string_gt_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 189.1-192.63)");
15 07    # vload 7            # _result
B0       # return             # 


#<string_ge_segs__1>
07                # number of arguments = 7
08                # number of local variables = 8
00 8B             # code length = 139 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <1073:and>
A7 00 22 # goto +34           # goto <1071:cond_false>
# <1073:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <1070:cond_true>
A7 00 18 # goto +24           # goto <1071:cond_false>
# <1070:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <1074:cond_true>
A7 00 08 # goto +8            # goto <1075:cond_false>
# <1074:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1076:cond_end>
# <1075:cond_false>
10 00    # bipush 0           # false
# <1076:cond_end>
A7 00 05 # goto +5            # goto <1072:cond_end>
# <1071:cond_false>
10 00    # bipush 0           # false
# <1072:cond_end>
14 5E AD # aldc 24237         # s[24237] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 197.4-197.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 5F 01 # aldc 24321         # s[24321] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 197.4-197.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <1080:and>
A7 00 22 # goto +34           # goto <1078:cond_false>
# <1080:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <1077:cond_true>
A7 00 18 # goto +24           # goto <1078:cond_false>
# <1077:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <1081:cond_true>
A7 00 08 # goto +8            # goto <1082:cond_false>
# <1081:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1083:cond_end>
# <1082:cond_false>
10 00    # bipush 0           # false
# <1083:cond_end>
A7 00 05 # goto +5            # goto <1079:cond_end>
# <1078:cond_false>
10 00    # bipush 0           # false
# <1079:cond_end>
14 5F 13 # aldc 24339         # s[24339] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 198.4-198.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 5F 67 # aldc 24423         # s[24423] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 198.4-198.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 5F 79 # aldc 24441         # s[24441] = "string_ge_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 195.1-198.63)"
B8 00 5C # invokestatic 92    # string_ge_segs(A, lo1, hi1, B, lo2, hi2, "string_ge_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 195.1-198.63)")
36 07    # vstore 7           # _result = string_ge_segs(A, lo1, hi1, B, lo2, hi2, "string_ge_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 195.1-198.63)");
15 07    # vload 7            # _result
B0       # return             # 


#<string_lt_segs__1>
07                # number of arguments = 7
08                # number of local variables = 8
00 8B             # code length = 139 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <1087:and>
A7 00 22 # goto +34           # goto <1085:cond_false>
# <1087:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <1084:cond_true>
A7 00 18 # goto +24           # goto <1085:cond_false>
# <1084:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <1088:cond_true>
A7 00 08 # goto +8            # goto <1089:cond_false>
# <1088:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1090:cond_end>
# <1089:cond_false>
10 00    # bipush 0           # false
# <1090:cond_end>
A7 00 05 # goto +5            # goto <1086:cond_end>
# <1085:cond_false>
10 00    # bipush 0           # false
# <1086:cond_end>
14 5F C3 # aldc 24515         # s[24515] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 203.4-203.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 60 17 # aldc 24599         # s[24599] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 203.4-203.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <1094:and>
A7 00 22 # goto +34           # goto <1092:cond_false>
# <1094:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <1091:cond_true>
A7 00 18 # goto +24           # goto <1092:cond_false>
# <1091:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <1095:cond_true>
A7 00 08 # goto +8            # goto <1096:cond_false>
# <1095:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1097:cond_end>
# <1096:cond_false>
10 00    # bipush 0           # false
# <1097:cond_end>
A7 00 05 # goto +5            # goto <1093:cond_end>
# <1092:cond_false>
10 00    # bipush 0           # false
# <1093:cond_end>
14 60 29 # aldc 24617         # s[24617] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 204.4-204.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 60 7D # aldc 24701         # s[24701] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 204.4-204.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 60 8F # aldc 24719         # s[24719] = "string_lt_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 201.1-204.63)"
B8 00 5D # invokestatic 93    # string_lt_segs(A, lo1, hi1, B, lo2, hi2, "string_lt_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 201.1-204.63)")
36 07    # vstore 7           # _result = string_lt_segs(A, lo1, hi1, B, lo2, hi2, "string_lt_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 201.1-204.63)");
15 07    # vload 7            # _result
B0       # return             # 


#<string_le_segs__1>
07                # number of arguments = 7
08                # number of local variables = 8
00 8B             # code length = 139 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo1
A4 00 06 # if_icmple +6       # if (0 <= lo1) goto <1101:and>
A7 00 22 # goto +34           # goto <1099:cond_false>
# <1101:and>
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
A4 00 06 # if_icmple +6       # if (lo1 <= hi1) goto <1098:cond_true>
A7 00 18 # goto +24           # goto <1099:cond_false>
# <1098:cond_true>
15 02    # vload 2            # hi1
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi1 <= \length(A)) goto <1102:cond_true>
A7 00 08 # goto +8            # goto <1103:cond_false>
# <1102:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1104:cond_end>
# <1103:cond_false>
10 00    # bipush 0           # false
# <1104:cond_end>
A7 00 05 # goto +5            # goto <1100:cond_end>
# <1099:cond_false>
10 00    # bipush 0           # false
# <1100:cond_end>
14 60 D9 # aldc 24793         # s[24793] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 209.4-209.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 61 2D # aldc 24877         # s[24877] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 209.4-209.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo1) && (lo1 <= hi1)) && (hi1 <= \length(A))) [failure message on stack]
10 00    # bipush 0           # 0
15 04    # vload 4            # lo2
A4 00 06 # if_icmple +6       # if (0 <= lo2) goto <1108:and>
A7 00 22 # goto +34           # goto <1106:cond_false>
# <1108:and>
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
A4 00 06 # if_icmple +6       # if (lo2 <= hi2) goto <1105:cond_true>
A7 00 18 # goto +24           # goto <1106:cond_false>
# <1105:cond_true>
15 05    # vload 5            # hi2
15 03    # vload 3            # B
BE       # arraylength        # \length(B)
A4 00 06 # if_icmple +6       # if (hi2 <= \length(B)) goto <1109:cond_true>
A7 00 08 # goto +8            # goto <1110:cond_false>
# <1109:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1111:cond_end>
# <1110:cond_false>
10 00    # bipush 0           # false
# <1111:cond_end>
A7 00 05 # goto +5            # goto <1107:cond_end>
# <1106:cond_false>
10 00    # bipush 0           # false
# <1107:cond_end>
14 61 3F # aldc 24895         # s[24895] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 210.4-210.57: @requires annotation failed\n"
15 06    # vload 6            # _caller
14 61 93 # aldc 24979         # s[24979] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 210.4-210.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo2) && (lo2 <= hi2)) && (hi2 <= \length(B))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo1
15 02    # vload 2            # hi1
15 03    # vload 3            # B
15 04    # vload 4            # lo2
15 05    # vload 5            # hi2
14 61 A5 # aldc 24997         # s[24997] = "string_le_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 207.1-210.63)"
B8 00 5E # invokestatic 94    # string_le_segs(A, lo1, hi1, B, lo2, hi2, "string_le_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 207.1-210.63)")
36 07    # vstore 7           # _result = string_le_segs(A, lo1, hi1, B, lo2, hi2, "string_le_segs__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 207.1-210.63)");
15 07    # vload 7            # _result
B0       # return             # 


#<string_print_seg__1>
04                # number of arguments = 4
04                # number of local variables = 4
00 4D             # code length = 77 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <1115:and>
A7 00 22 # goto +34           # goto <1113:cond_false>
# <1115:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <1112:cond_true>
A7 00 18 # goto +24           # goto <1113:cond_false>
# <1112:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <1116:cond_true>
A7 00 08 # goto +8            # goto <1117:cond_false>
# <1116:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1118:cond_end>
# <1117:cond_false>
10 00    # bipush 0           # false
# <1118:cond_end>
A7 00 05 # goto +5            # goto <1114:cond_end>
# <1113:cond_false>
10 00    # bipush 0           # false
# <1114:cond_end>
14 61 EF # aldc 25071         # s[25071] = "/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 214.4-214.53: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 62 43 # aldc 25155         # s[25155] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 214.4-214.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # lo
15 02    # vload 2            # hi
14 62 55 # aldc 25173         # s[25173] = "string_print_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 213.1-214.59)"
B8 00 5F # invokestatic 95    # string_print_seg(A, lo, hi, "string_print_seg__1 (/tmp/tmp.s2zpkBvenI/string_arrayutil.c0: 213.1-214.59)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<linsearch>
04                # number of arguments = 4
07                # number of local variables = 7
02 13             # code length = 531 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <1119:cond_true>
A7 00 18 # goto +24           # goto <1120:cond_false>
# <1119:cond_true>
15 02    # vload 2            # n
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (n <= \length(A)) goto <1122:cond_true>
A7 00 08 # goto +8            # goto <1123:cond_false>
# <1122:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1124:cond_end>
# <1123:cond_false>
10 00    # bipush 0           # false
# <1124:cond_end>
A7 00 05 # goto +5            # goto <1121:cond_end>
# <1120:cond_false>
10 00    # bipush 0           # false
# <1121:cond_end>
14 62 A1 # aldc 25249         # s[25249] = "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 12.4-12.39: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 62 EF # aldc 25327         # s[25327] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/stringsearch.c0: 12.4-12.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= \length(A))) [failure message on stack]
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 02    # vload 2            # n
14 63 01 # aldc 25345         # s[25345] = "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 13.13-13.38)"
B8 00 61 # invokestatic 97    # string_is_sorted__1(A, 0, n, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 13.13-13.38)")
14 63 3E # aldc 25406         # s[25406] = "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 13.4-13.39: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 63 8C # aldc 25484         # s[25484] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/stringsearch.c0: 13.4-13.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert string_is_sorted__1(A, 0, n, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 13.13-13.38)") [failure message on stack]
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <1125:loop>
A7 00 03 # goto +3            # goto <1126:body>
# <1126:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <1128:cond_true>
A7 00 17 # goto +23           # goto <1129:cond_false>
# <1128:cond_true>
15 05    # vload 5            # i
15 02    # vload 2            # n
A4 00 06 # if_icmple +6       # if (i <= n) goto <1131:cond_true>
A7 00 08 # goto +8            # goto <1132:cond_false>
# <1131:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1133:cond_end>
# <1132:cond_false>
10 00    # bipush 0           # false
# <1133:cond_end>
A7 00 05 # goto +5            # goto <1130:cond_end>
# <1129:cond_false>
10 00    # bipush 0           # false
# <1130:cond_end>
14 63 9E # aldc 25502         # s[25502] = "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 19.8-19.40: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= i) && (i <= n)) [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 05    # vload 5            # i
14 63 F1 # aldc 25585         # s[25585] = "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 20.23-20.48)"
B8 00 63 # invokestatic 99    # string_gt_seg__1(x, A, 0, i, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 20.23-20.48)")
14 64 2E # aldc 25646         # s[25646] = "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 20.8-20.49: @loop_invariant annotation failed"
CF       # assert             # assert string_gt_seg__1(x, A, 0, i, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 20.23-20.48)") [failure message on stack]
15 05    # vload 5            # i
15 02    # vload 2            # n
A1 00 06 # if_icmplt +6       # if (i < n) goto <1134:then>
A7 01 27 # goto +295          # goto <1135:else>
# <1134:then>
15 01    # vload 1            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
15 00    # vload 0            # x
14 64 81 # aldc 25729         # s[25729] = "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 22.17-22.40)"
B8 00 26 # invokestatic 38    # string_compare__1(A[i], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 22.17-22.40)")
36 06    # vstore 6           # cmp = string_compare__1(A[i], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 22.17-22.40)");
15 06    # vload 6            # cmp
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (cmp == 0) goto <1137:then>
A7 00 5D # goto +93           # goto <1138:else>
# <1137:then>
15 05    # vload 5            # i
36 04    # vstore 4           # _result = i;
10 FF    # bipush -1          # -1
15 04    # vload 4            # _result
9F 00 06 # if_cmpeq +6        # if (-(1) == _result) goto <1143:and>
A7 00 1E # goto +30           # goto <1141:cond_false>
# <1143:and>
15 00    # vload 0            # x
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 02    # vload 2            # n
14 64 BE # aldc 25790         # s[25790] = "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)"
B8 00 60 # invokestatic 96    # string_is_in__1(x, A, 0, n, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)")
10 01    # bipush 1           # true
9F 00 0B # if_cmpeq +11       # if (string_is_in__1(x, A, 0, n, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)") == true) goto <1141:cond_false>
A7 00 03 # goto +3            # goto <1140:cond_true>
# <1140:cond_true>
10 01    # bipush 1           # true
A7 00 2A # goto +42           # goto <1142:cond_end>
# <1141:cond_false>
10 00    # bipush 0           # 0
15 04    # vload 4            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <1147:and>
A7 00 1E # goto +30           # goto <1145:cond_false>
# <1147:and>
15 04    # vload 4            # _result
15 02    # vload 2            # n
A1 00 06 # if_icmplt +6       # if (_result < n) goto <1144:cond_true>
A7 00 14 # goto +20           # goto <1145:cond_false>
# <1144:cond_true>
15 01    # vload 1            # A
15 04    # vload 4            # _result
63       # aadds              # &A[_result]
2F       # amload             # A[_result]
15 00    # vload 0            # x
14 64 FB # aldc 25851         # s[25851] = "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 16.16-16.43)"
B8 00 25 # invokestatic 37    # string_equal__1(A[_result], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 16.16-16.43)")
A7 00 05 # goto +5            # goto <1146:cond_end>
# <1145:cond_false>
10 00    # bipush 0           # false
# <1146:cond_end>
# <1142:cond_end>
14 65 38 # aldc 25912         # s[25912] = "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.4-16.45: @ensures annotation failed"
CF       # assert             # assert (((-(1) == _result) && !(string_is_in__1(x, A, 0, n, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)"))) || (((0 <= _result) && (_result < n)) && string_equal__1(A[_result], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 16.16-16.43)"))) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 
A7 00 88 # goto +136          # goto <1139:endif>
# <1138:else>
15 06    # vload 6            # cmp
10 00    # bipush 0           # 0
A3 00 06 # if_icmpgt +6       # if (cmp > 0) goto <1148:then>
A7 00 7E # goto +126          # goto <1149:else>
# <1148:then>
15 01    # vload 1            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
15 00    # vload 0            # x
14 65 84 # aldc 25988         # s[25988] = "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 26.19-26.42)"
B8 00 26 # invokestatic 38    # string_compare__1(A[i], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 26.19-26.42)")
10 00    # bipush 0           # 0
A3 00 06 # if_icmpgt +6       # if (string_compare__1(A[i], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 26.19-26.42)") > 0) goto <1151:cond_true>
A7 00 08 # goto +8            # goto <1152:cond_false>
# <1151:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1153:cond_end>
# <1152:cond_false>
10 00    # bipush 0           # false
# <1153:cond_end>
14 65 C1 # aldc 26049         # s[26049] = "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 26.12-26.47: @assert annotation failed"
CF       # assert             # assert (string_compare__1(A[i], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 26.19-26.42)") > 0) [failure message on stack]
10 FF    # bipush -1          # -1
36 04    # vstore 4           # _result = -(1);
10 FF    # bipush -1          # -1
15 04    # vload 4            # _result
9F 00 06 # if_cmpeq +6        # if (-(1) == _result) goto <1157:and>
A7 00 1E # goto +30           # goto <1155:cond_false>
# <1157:and>
15 00    # vload 0            # x
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 02    # vload 2            # n
14 66 0D # aldc 26125         # s[26125] = "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)"
B8 00 60 # invokestatic 96    # string_is_in__1(x, A, 0, n, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)")
10 01    # bipush 1           # true
9F 00 0B # if_cmpeq +11       # if (string_is_in__1(x, A, 0, n, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)") == true) goto <1155:cond_false>
A7 00 03 # goto +3            # goto <1154:cond_true>
# <1154:cond_true>
10 01    # bipush 1           # true
A7 00 2A # goto +42           # goto <1156:cond_end>
# <1155:cond_false>
10 00    # bipush 0           # 0
15 04    # vload 4            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <1161:and>
A7 00 1E # goto +30           # goto <1159:cond_false>
# <1161:and>
15 04    # vload 4            # _result
15 02    # vload 2            # n
A1 00 06 # if_icmplt +6       # if (_result < n) goto <1158:cond_true>
A7 00 14 # goto +20           # goto <1159:cond_false>
# <1158:cond_true>
15 01    # vload 1            # A
15 04    # vload 4            # _result
63       # aadds              # &A[_result]
2F       # amload             # A[_result]
15 00    # vload 0            # x
14 66 4A # aldc 26186         # s[26186] = "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 16.16-16.43)"
B8 00 25 # invokestatic 37    # string_equal__1(A[_result], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 16.16-16.43)")
A7 00 05 # goto +5            # goto <1160:cond_end>
# <1159:cond_false>
10 00    # bipush 0           # false
# <1160:cond_end>
# <1156:cond_end>
14 66 87 # aldc 26247         # s[26247] = "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.4-16.45: @ensures annotation failed"
CF       # assert             # assert (((-(1) == _result) && !(string_is_in__1(x, A, 0, n, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)"))) || (((0 <= _result) && (_result < n)) && string_equal__1(A[_result], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 16.16-16.43)"))) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <1150:endif>
# <1149:else>
# <1150:endif>
# <1139:endif>
15 01    # vload 1            # A
15 05    # vload 5            # i
63       # aadds              # &A[i]
2F       # amload             # A[i]
15 00    # vload 0            # x
14 66 D3 # aldc 26323         # s[26323] = "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 29.17-29.40)"
B8 00 26 # invokestatic 38    # string_compare__1(A[i], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 29.17-29.40)")
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (string_compare__1(A[i], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 29.17-29.40)") < 0) goto <1162:cond_true>
A7 00 08 # goto +8            # goto <1163:cond_false>
# <1162:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1164:cond_end>
# <1163:cond_false>
10 00    # bipush 0           # false
# <1164:cond_end>
14 67 10 # aldc 26384         # s[26384] = "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 29.10-29.45: @assert annotation failed"
CF       # assert             # assert (string_compare__1(A[i], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 29.17-29.40)") < 0) [failure message on stack]
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <1136:endif>
# <1135:else>
A7 00 06 # goto +6            # break
# <1136:endif>
A7 FE 96 # goto -362          # goto <1125:loop>
# <1127:exit>
10 FF    # bipush -1          # -1
36 04    # vstore 4           # _result = -(1);
10 FF    # bipush -1          # -1
15 04    # vload 4            # _result
9F 00 06 # if_cmpeq +6        # if (-(1) == _result) goto <1168:and>
A7 00 1E # goto +30           # goto <1166:cond_false>
# <1168:and>
15 00    # vload 0            # x
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 02    # vload 2            # n
14 67 5C # aldc 26460         # s[26460] = "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)"
B8 00 60 # invokestatic 96    # string_is_in__1(x, A, 0, n, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)")
10 01    # bipush 1           # true
9F 00 0B # if_cmpeq +11       # if (string_is_in__1(x, A, 0, n, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)") == true) goto <1166:cond_false>
A7 00 03 # goto +3            # goto <1165:cond_true>
# <1165:cond_true>
10 01    # bipush 1           # true
A7 00 2A # goto +42           # goto <1167:cond_end>
# <1166:cond_false>
10 00    # bipush 0           # 0
15 04    # vload 4            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <1172:and>
A7 00 1E # goto +30           # goto <1170:cond_false>
# <1172:and>
15 04    # vload 4            # _result
15 02    # vload 2            # n
A1 00 06 # if_icmplt +6       # if (_result < n) goto <1169:cond_true>
A7 00 14 # goto +20           # goto <1170:cond_false>
# <1169:cond_true>
15 01    # vload 1            # A
15 04    # vload 4            # _result
63       # aadds              # &A[_result]
2F       # amload             # A[_result]
15 00    # vload 0            # x
14 67 99 # aldc 26521         # s[26521] = "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 16.16-16.43)"
B8 00 25 # invokestatic 37    # string_equal__1(A[_result], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 16.16-16.43)")
A7 00 05 # goto +5            # goto <1171:cond_end>
# <1170:cond_false>
10 00    # bipush 0           # false
# <1171:cond_end>
# <1167:cond_end>
14 67 D6 # aldc 26582         # s[26582] = "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.4-16.45: @ensures annotation failed"
CF       # assert             # assert (((-(1) == _result) && !(string_is_in__1(x, A, 0, n, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 14.31-14.55)"))) || (((0 <= _result) && (_result < n)) && string_equal__1(A[_result], x, "linsearch (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 16.16-16.43)"))) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<linsearch__1>
04                # number of arguments = 4
05                # number of local variables = 5
00 AC             # code length = 172 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <1173:cond_true>
A7 00 18 # goto +24           # goto <1174:cond_false>
# <1173:cond_true>
15 02    # vload 2            # n
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (n <= \length(A)) goto <1176:cond_true>
A7 00 08 # goto +8            # goto <1177:cond_false>
# <1176:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1178:cond_end>
# <1177:cond_false>
10 00    # bipush 0           # false
# <1178:cond_end>
A7 00 05 # goto +5            # goto <1175:cond_end>
# <1174:cond_false>
10 00    # bipush 0           # false
# <1175:cond_end>
14 68 22 # aldc 26658         # s[26658] = "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 41.4-41.39: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 68 70 # aldc 26736         # s[26736] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/stringsearch.c0: 41.4-41.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= \length(A))) [failure message on stack]
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 02    # vload 2            # n
14 68 82 # aldc 26754         # s[26754] = "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 42.13-42.38)"
B8 00 61 # invokestatic 97    # string_is_sorted__1(A, 0, n, "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 42.13-42.38)")
14 68 C2 # aldc 26818         # s[26818] = "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 42.4-42.39: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 69 10 # aldc 26896         # s[26896] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/tmp/tmp.s2zpkBvenI/stringsearch.c0: 42.4-42.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert string_is_sorted__1(A, 0, n, "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 42.13-42.38)") [failure message on stack]
15 00    # vload 0            # x
15 01    # vload 1            # A
15 02    # vload 2            # n
14 69 22 # aldc 26914         # s[26914] = "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 40.1-45.51)"
B8 00 6C # invokestatic 108   # linsearch(x, A, n, "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 40.1-45.51)")
36 04    # vstore 4           # _result = linsearch(x, A, n, "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 40.1-45.51)");
10 FF    # bipush -1          # -1
15 04    # vload 4            # _result
9F 00 06 # if_cmpeq +6        # if (-(1) == _result) goto <1182:and>
A7 00 1E # goto +30           # goto <1180:cond_false>
# <1182:and>
15 00    # vload 0            # x
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 02    # vload 2            # n
14 69 61 # aldc 26977         # s[26977] = "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 43.31-43.55)"
B8 00 60 # invokestatic 96    # string_is_in__1(x, A, 0, n, "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 43.31-43.55)")
10 01    # bipush 1           # true
9F 00 0B # if_cmpeq +11       # if (string_is_in__1(x, A, 0, n, "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 43.31-43.55)") == true) goto <1180:cond_false>
A7 00 03 # goto +3            # goto <1179:cond_true>
# <1179:cond_true>
10 01    # bipush 1           # true
A7 00 2A # goto +42           # goto <1181:cond_end>
# <1180:cond_false>
10 00    # bipush 0           # 0
15 04    # vload 4            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <1186:and>
A7 00 1E # goto +30           # goto <1184:cond_false>
# <1186:and>
15 04    # vload 4            # _result
15 02    # vload 2            # n
A1 00 06 # if_icmplt +6       # if (_result < n) goto <1183:cond_true>
A7 00 14 # goto +20           # goto <1184:cond_false>
# <1183:cond_true>
15 01    # vload 1            # A
15 04    # vload 4            # _result
63       # aadds              # &A[_result]
2F       # amload             # A[_result]
15 00    # vload 0            # x
14 69 A1 # aldc 27041         # s[27041] = "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 45.16-45.43)"
B8 00 25 # invokestatic 37    # string_equal__1(A[_result], x, "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 45.16-45.43)")
A7 00 05 # goto +5            # goto <1185:cond_end>
# <1184:cond_false>
10 00    # bipush 0           # false
# <1185:cond_end>
# <1181:cond_end>
14 69 E1 # aldc 27105         # s[27105] = "/tmp/tmp.s2zpkBvenI/stringsearch.c0: 43.4-45.45: @ensures annotation failed"
CF       # assert             # assert (((-(1) == _result) && !(string_is_in__1(x, A, 0, n, "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 43.31-43.55)"))) || (((0 <= _result) && (_result < n)) && string_equal__1(A[_result], x, "linsearch__1 (/tmp/tmp.s2zpkBvenI/stringsearch.c0: 45.16-45.43)"))) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<parse_bool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 1C # invokenative 28    # parse_bool(s)
36 02    # vstore 2           # _result = parse_bool(s);
15 02    # vload 2            # _result
B0       # return             # 


#<parse_int__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3B             # code length = 59 bytes
10 02    # bipush 2           # 2
15 01    # vload 1            # base
A4 00 06 # if_icmple +6       # if (2 <= base) goto <1187:cond_true>
A7 00 17 # goto +23           # goto <1188:cond_false>
# <1187:cond_true>
15 01    # vload 1            # base
10 24    # bipush 36          # 36
A4 00 06 # if_icmple +6       # if (base <= 36) goto <1190:cond_true>
A7 00 08 # goto +8            # goto <1191:cond_false>
# <1190:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1192:cond_end>
# <1191:cond_false>
10 00    # bipush 0           # false
# <1192:cond_end>
A7 00 05 # goto +5            # goto <1189:cond_end>
# <1188:cond_false>
10 00    # bipush 0           # false
# <1189:cond_end>
14 6A 2D # aldc 27181         # s[27181] = "/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 6A 7E # aldc 27262         # s[27262] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 1D # invokenative 29    # parse_int(s, base)
36 03    # vstore 3           # _result = parse_int(s, base);
15 03    # vload 3            # _result
B0       # return             # 


#<num_tokens__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 1E # invokenative 30    # num_tokens(s)
36 02    # vstore 2           # _result = num_tokens(s);
15 02    # vload 2            # _result
B0       # return             # 


#<int_tokens__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3B             # code length = 59 bytes
10 02    # bipush 2           # 2
15 01    # vload 1            # base
A4 00 06 # if_icmple +6       # if (2 <= base) goto <1193:cond_true>
A7 00 17 # goto +23           # goto <1194:cond_false>
# <1193:cond_true>
15 01    # vload 1            # base
10 24    # bipush 36          # 36
A4 00 06 # if_icmple +6       # if (base <= 36) goto <1196:cond_true>
A7 00 08 # goto +8            # goto <1197:cond_false>
# <1196:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1198:cond_end>
# <1197:cond_false>
10 00    # bipush 0           # false
# <1198:cond_end>
A7 00 05 # goto +5            # goto <1195:cond_end>
# <1194:cond_false>
10 00    # bipush 0           # false
# <1195:cond_end>
14 6A 90 # aldc 27280         # s[27280] = "/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 6A E1 # aldc 27361         # s[27361] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 1F # invokenative 31    # int_tokens(s, base)
36 03    # vstore 3           # _result = int_tokens(s, base);
15 03    # vload 3            # _result
B0       # return             # 


#<parse_tokens__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 26             # code length = 38 bytes
15 00    # vload 0            # s
B7 00 20 # invokenative 32    # parse_tokens(s)
36 02    # vstore 2           # _result = parse_tokens(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 6A F3 # aldc 27379         # s[27379] = "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)"
B8 00 70 # invokestatic 112   # num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")) goto <1199:cond_true>
A7 00 08 # goto +8            # goto <1200:cond_false>
# <1199:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1201:cond_end>
# <1200:cond_false>
10 00    # bipush 0           # false
# <1201:cond_end>
14 6B 39 # aldc 27449         # s[27449] = "/afs/andrew/course/15/122/lib/parse.h0: 23.6-23.48: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<parse_ints__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
15 00    # vload 0            # s
15 01    # vload 1            # base
14 6B 88 # aldc 27528         # s[27528] = "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)"
B8 00 71 # invokestatic 113   # int_tokens__1(s, base, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)")
14 6B CC # aldc 27596         # s[27596] = "/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 6C 1D # aldc 27677         # s[27677] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert int_tokens__1(s, base, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)") [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 21 # invokenative 33    # parse_ints(s, base)
36 03    # vstore 3           # _result = parse_ints(s, base);
15 03    # vload 3            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 6C 2F # aldc 27695         # s[27695] = "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)"
B8 00 70 # invokestatic 112   # num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")) goto <1202:cond_true>
A7 00 08 # goto +8            # goto <1203:cond_false>
# <1202:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1204:cond_end>
# <1203:cond_false>
10 00    # bipush 0           # false
# <1204:cond_end>
14 6C 73 # aldc 27763         # s[27763] = "/afs/andrew/course/15/122/lib/parse.h0: 28.6-28.48: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<printTemp>
04                # number of arguments = 4
05                # number of local variables = 5
00 66             # code length = 102 bytes
10 00    # bipush 0           # 0
36 04    # vstore 4           # i = 0;
# <1205:loop>
A7 00 03 # goto +3            # goto <1206:body>
# <1206:body>
15 04    # vload 4            # i
15 02    # vload 2            # length
A1 00 06 # if_icmplt +6       # if (i < length) goto <1208:then>
A7 00 45 # goto +69           # goto <1209:else>
# <1208:then>
14 6C C2 # aldc 27842         # s[27842] = ""
14 6C C3 # aldc 27843         # s[27843] = "printTemp (doslingos.c0: 10.5-10.41)"
B8 00 01 # invokestatic 1     # print__1("", "printTemp (doslingos.c0: 10.5-10.41)")
57       # pop                # (ignore result)
15 00    # vload 0            # freq
15 04    # vload 4            # i
63       # aadds              # &freq[i]
2E       # imload             # freq[i]
14 6C E8 # aldc 27880         # s[27880] = "printTemp (doslingos.c0: 10.5-10.41)"
B8 00 03 # invokestatic 3     # printint__1(freq[i], "printTemp (doslingos.c0: 10.5-10.41)")
57       # pop                # (ignore result)
14 6D 0D # aldc 27917         # s[27917] = " "
14 6D 0F # aldc 27919         # s[27919] = "printTemp (doslingos.c0: 10.5-10.41)"
B8 00 01 # invokestatic 1     # print__1(" ", "printTemp (doslingos.c0: 10.5-10.41)")
57       # pop                # (ignore result)
15 01    # vload 1            # vocab
15 04    # vload 4            # i
63       # aadds              # &vocab[i]
2F       # amload             # vocab[i]
14 6D 34 # aldc 27956         # s[27956] = "printTemp (doslingos.c0: 10.5-10.41)"
B8 00 01 # invokestatic 1     # print__1(vocab[i], "printTemp (doslingos.c0: 10.5-10.41)")
57       # pop                # (ignore result)
14 6D 59 # aldc 27993         # s[27993] = "\n"
14 6D 5B # aldc 27995         # s[27995] = "printTemp (doslingos.c0: 10.5-10.41)"
B8 00 01 # invokestatic 1     # print__1("\n", "printTemp (doslingos.c0: 10.5-10.41)")
57       # pop                # (ignore result)
15 04    # vload 4            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # i += 1;
A7 00 06 # goto +6            # goto <1210:endif>
# <1209:else>
A7 00 06 # goto +6            # break
# <1210:endif>
A7 FF AE # goto -82           # goto <1205:loop>
# <1207:exit>
14 6D 80 # aldc 28032         # s[28032] = "print done!\n\n"
14 6D 8E # aldc 28046         # s[28046] = "printTemp (doslingos.c0: 12.3-12.28)"
B8 00 01 # invokestatic 1     # print__1("print done!\n\n", "printTemp (doslingos.c0: 12.3-12.28)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<merge>
06                # number of arguments = 6
0E                # number of local variables = 14
02 3D             # code length = 573 bytes
15 00    # vload 0            # vocab
BE       # arraylength        # \length(vocab)
15 01    # vload 1            # freq
BE       # arraylength        # \length(freq)
9F 00 06 # if_cmpeq +6        # if (\length(vocab) == \length(freq)) goto <1211:cond_true>
A7 00 08 # goto +8            # goto <1212:cond_false>
# <1211:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1213:cond_end>
# <1212:cond_false>
10 00    # bipush 0           # false
# <1213:cond_end>
14 6D B3 # aldc 28083         # s[28083] = "doslingos.c0: 18.4-18.45: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 6D EA # aldc 28138         # s[28138] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos.c0: 18.4-18.45: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(vocab) == \length(freq)) [failure message on stack]
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <1218:and>
A7 00 2C # goto +44           # goto <1215:cond_false>
# <1218:and>
15 02    # vload 2            # lo
15 03    # vload 3            # mid
A4 00 06 # if_icmple +6       # if (lo <= mid) goto <1217:and>
A7 00 22 # goto +34           # goto <1215:cond_false>
# <1217:and>
15 03    # vload 3            # mid
15 04    # vload 4            # hi
A4 00 06 # if_icmple +6       # if (mid <= hi) goto <1214:cond_true>
A7 00 18 # goto +24           # goto <1215:cond_false>
# <1214:cond_true>
15 04    # vload 4            # hi
15 00    # vload 0            # vocab
BE       # arraylength        # \length(vocab)
A4 00 06 # if_icmple +6       # if (hi <= \length(vocab)) goto <1219:cond_true>
A7 00 08 # goto +8            # goto <1220:cond_false>
# <1219:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1221:cond_end>
# <1220:cond_false>
10 00    # bipush 0           # false
# <1221:cond_end>
A7 00 05 # goto +5            # goto <1216:cond_end>
# <1215:cond_false>
10 00    # bipush 0           # false
# <1216:cond_end>
14 6D FC # aldc 28156         # s[28156] = "doslingos.c0: 19.4-20.47: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 6E 33 # aldc 28211         # s[28211] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos.c0: 19.4-20.47: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((((0 <= lo) && (lo <= mid)) && (mid <= hi)) && (hi <= \length(vocab))) [failure message on stack]
15 02    # vload 2            # lo
36 06    # vstore 6           # idx1 = lo;
15 03    # vload 3            # mid
36 07    # vstore 7           # idx2 = mid;
10 00    # bipush 0           # 0
36 08    # vstore 8           # currIdx = 0;
15 04    # vload 4            # hi
15 02    # vload 2            # lo
64       # isub               # (hi - lo)
36 09    # vstore 9           # size = (hi - lo);
15 09    # vload 9            # size
BC 04    # newarray 4         # alloc_array(int, size)
36 0A    # vstore 10          # f_tmp = alloc_array(int, size);
15 09    # vload 9            # size
BC 08    # newarray 8         # alloc_array(string, size)
36 0B    # vstore 11          # v_tmp = alloc_array(string, size);
# <1222:loop>
A7 00 03 # goto +3            # goto <1223:body>
# <1223:body>
15 08    # vload 8            # currIdx
15 04    # vload 4            # hi
15 02    # vload 2            # lo
64       # isub               # (hi - lo)
A4 00 06 # if_icmple +6       # if (currIdx <= (hi - lo)) goto <1225:cond_true>
A7 00 08 # goto +8            # goto <1226:cond_false>
# <1225:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1227:cond_end>
# <1226:cond_false>
10 00    # bipush 0           # false
# <1227:cond_end>
14 6E 45 # aldc 28229         # s[28229] = "doslingos.c0: 32.8-32.42: @loop_invariant annotation failed"
CF       # assert             # assert (currIdx <= (hi - lo)) [failure message on stack]
15 02    # vload 2            # lo
15 06    # vload 6            # idx1
A4 00 06 # if_icmple +6       # if (lo <= idx1) goto <1228:cond_true>
A7 00 17 # goto +23           # goto <1229:cond_false>
# <1228:cond_true>
15 06    # vload 6            # idx1
15 03    # vload 3            # mid
A4 00 06 # if_icmple +6       # if (idx1 <= mid) goto <1231:cond_true>
A7 00 08 # goto +8            # goto <1232:cond_false>
# <1231:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1233:cond_end>
# <1232:cond_false>
10 00    # bipush 0           # false
# <1233:cond_end>
A7 00 05 # goto +5            # goto <1230:cond_end>
# <1229:cond_false>
10 00    # bipush 0           # false
# <1230:cond_end>
14 6E 81 # aldc 28289         # s[28289] = "doslingos.c0: 33.8-33.49: @loop_invariant annotation failed"
CF       # assert             # assert ((lo <= idx1) && (idx1 <= mid)) [failure message on stack]
15 03    # vload 3            # mid
15 07    # vload 7            # idx2
A4 00 06 # if_icmple +6       # if (mid <= idx2) goto <1234:cond_true>
A7 00 17 # goto +23           # goto <1235:cond_false>
# <1234:cond_true>
15 07    # vload 7            # idx2
15 04    # vload 4            # hi
A4 00 06 # if_icmple +6       # if (idx2 <= hi) goto <1237:cond_true>
A7 00 08 # goto +8            # goto <1238:cond_false>
# <1237:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1239:cond_end>
# <1238:cond_false>
10 00    # bipush 0           # false
# <1239:cond_end>
A7 00 05 # goto +5            # goto <1236:cond_end>
# <1235:cond_false>
10 00    # bipush 0           # false
# <1236:cond_end>
14 6E BD # aldc 28349         # s[28349] = "doslingos.c0: 34.8-34.49: @loop_invariant annotation failed"
CF       # assert             # assert ((mid <= idx2) && (idx2 <= hi)) [failure message on stack]
15 06    # vload 6            # idx1
15 03    # vload 3            # mid
A1 00 06 # if_icmplt +6       # if (idx1 < mid) goto <1243:and>
A7 00 6A # goto +106          # goto <1241:else>
# <1243:and>
15 07    # vload 7            # idx2
15 04    # vload 4            # hi
A1 00 06 # if_icmplt +6       # if (idx2 < hi) goto <1240:then>
A7 00 60 # goto +96           # goto <1241:else>
# <1240:then>
15 01    # vload 1            # freq
15 06    # vload 6            # idx1
63       # aadds              # &freq[idx1]
2E       # imload             # freq[idx1]
36 0C    # vstore 12          # compF1 = freq[idx1];
15 01    # vload 1            # freq
15 07    # vload 7            # idx2
63       # aadds              # &freq[idx2]
2E       # imload             # freq[idx2]
36 0D    # vstore 13          # compF2 = freq[idx2];
15 0C    # vload 12           # compF1
15 0D    # vload 13           # compF2
A3 00 06 # if_icmpgt +6       # if (compF1 > compF2) goto <1244:then>
A7 00 21 # goto +33           # goto <1245:else>
# <1244:then>
15 0A    # vload 10           # f_tmp
15 08    # vload 8            # currIdx
63       # aadds              # &f_tmp[currIdx]
15 0D    # vload 13           # compF2
4E       # imstore            # f_tmp[currIdx] = compF2;
15 0B    # vload 11           # v_tmp
15 08    # vload 8            # currIdx
63       # aadds              # &v_tmp[currIdx]
15 00    # vload 0            # vocab
15 07    # vload 7            # idx2
63       # aadds              # &vocab[idx2]
2F       # amload             # vocab[idx2]
4F       # amstore            # v_tmp[currIdx] = vocab[idx2];
15 07    # vload 7            # idx2
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # idx2 += 1;
A7 00 1E # goto +30           # goto <1246:endif>
# <1245:else>
15 0A    # vload 10           # f_tmp
15 08    # vload 8            # currIdx
63       # aadds              # &f_tmp[currIdx]
15 0C    # vload 12           # compF1
4E       # imstore            # f_tmp[currIdx] = compF1;
15 0B    # vload 11           # v_tmp
15 08    # vload 8            # currIdx
63       # aadds              # &v_tmp[currIdx]
15 00    # vload 0            # vocab
15 06    # vload 6            # idx1
63       # aadds              # &vocab[idx1]
2F       # amload             # vocab[idx1]
4F       # amstore            # v_tmp[currIdx] = vocab[idx1];
15 06    # vload 6            # idx1
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # idx1 += 1;
# <1246:endif>
15 08    # vload 8            # currIdx
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # currIdx += 1;
A7 00 06 # goto +6            # goto <1242:endif>
# <1241:else>
A7 00 06 # goto +6            # break
# <1242:endif>
A7 FF 29 # goto -215          # goto <1222:loop>
# <1224:exit>
15 06    # vload 6            # idx1
15 03    # vload 3            # mid
9F 00 06 # if_cmpeq +6        # if (idx1 == mid) goto <1247:cond_true>
A7 00 08 # goto +8            # goto <1248:cond_false>
# <1247:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <1249:cond_end>
# <1248:cond_false>
15 07    # vload 7            # idx2
15 04    # vload 4            # hi
9F 00 06 # if_cmpeq +6        # if (idx2 == hi) goto <1250:cond_true>
A7 00 08 # goto +8            # goto <1251:cond_false>
# <1250:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1252:cond_end>
# <1251:cond_false>
10 00    # bipush 0           # false
# <1252:cond_end>
# <1249:cond_end>
14 6E F9 # aldc 28409         # s[28409] = "doslingos.c0: 54.8-54.41: @assert annotation failed"
CF       # assert             # assert ((idx1 == mid) || (idx2 == hi)) [failure message on stack]
# <1253:loop>
A7 00 03 # goto +3            # goto <1254:body>
# <1254:body>
15 06    # vload 6            # idx1
15 03    # vload 3            # mid
A1 00 06 # if_icmplt +6       # if (idx1 < mid) goto <1256:then>
A7 00 2C # goto +44           # goto <1257:else>
# <1256:then>
15 0A    # vload 10           # f_tmp
15 08    # vload 8            # currIdx
63       # aadds              # &f_tmp[currIdx]
15 01    # vload 1            # freq
15 06    # vload 6            # idx1
63       # aadds              # &freq[idx1]
2E       # imload             # freq[idx1]
4E       # imstore            # f_tmp[currIdx] = freq[idx1];
15 0B    # vload 11           # v_tmp
15 08    # vload 8            # currIdx
63       # aadds              # &v_tmp[currIdx]
15 00    # vload 0            # vocab
15 06    # vload 6            # idx1
63       # aadds              # &vocab[idx1]
2F       # amload             # vocab[idx1]
4F       # amstore            # v_tmp[currIdx] = vocab[idx1];
15 06    # vload 6            # idx1
10 01    # bipush 1           # 1
60       # iadd               # 
36 06    # vstore 6           # idx1 += 1;
15 08    # vload 8            # currIdx
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # currIdx += 1;
A7 00 06 # goto +6            # goto <1258:endif>
# <1257:else>
A7 00 06 # goto +6            # break
# <1258:endif>
A7 FF C7 # goto -57           # goto <1253:loop>
# <1255:exit>
# <1259:loop>
A7 00 03 # goto +3            # goto <1260:body>
# <1260:body>
15 07    # vload 7            # idx2
15 04    # vload 4            # hi
A1 00 06 # if_icmplt +6       # if (idx2 < hi) goto <1262:then>
A7 00 2C # goto +44           # goto <1263:else>
# <1262:then>
15 0A    # vload 10           # f_tmp
15 08    # vload 8            # currIdx
63       # aadds              # &f_tmp[currIdx]
15 01    # vload 1            # freq
15 07    # vload 7            # idx2
63       # aadds              # &freq[idx2]
2E       # imload             # freq[idx2]
4E       # imstore            # f_tmp[currIdx] = freq[idx2];
15 0B    # vload 11           # v_tmp
15 08    # vload 8            # currIdx
63       # aadds              # &v_tmp[currIdx]
15 00    # vload 0            # vocab
15 07    # vload 7            # idx2
63       # aadds              # &vocab[idx2]
2F       # amload             # vocab[idx2]
4F       # amstore            # v_tmp[currIdx] = vocab[idx2];
15 07    # vload 7            # idx2
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # idx2 += 1;
15 08    # vload 8            # currIdx
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # currIdx += 1;
A7 00 06 # goto +6            # goto <1264:endif>
# <1263:else>
A7 00 06 # goto +6            # break
# <1264:endif>
A7 FF C7 # goto -57           # goto <1259:loop>
# <1261:exit>
10 00    # bipush 0           # 0
36 0C    # vstore 12          # i = 0;
# <1265:loop>
A7 00 03 # goto +3            # goto <1266:body>
# <1266:body>
15 0C    # vload 12           # i
15 09    # vload 9            # size
A1 00 06 # if_icmplt +6       # if (i < size) goto <1268:then>
A7 00 2B # goto +43           # goto <1269:else>
# <1268:then>
15 00    # vload 0            # vocab
15 02    # vload 2            # lo
15 0C    # vload 12           # i
60       # iadd               # (lo + i)
63       # aadds              # &vocab[(lo + i)]
15 0B    # vload 11           # v_tmp
15 0C    # vload 12           # i
63       # aadds              # &v_tmp[i]
2F       # amload             # v_tmp[i]
4F       # amstore            # vocab[(lo + i)] = v_tmp[i];
15 01    # vload 1            # freq
15 02    # vload 2            # lo
15 0C    # vload 12           # i
60       # iadd               # (lo + i)
63       # aadds              # &freq[(lo + i)]
15 0A    # vload 10           # f_tmp
15 0C    # vload 12           # i
63       # aadds              # &f_tmp[i]
2E       # imload             # f_tmp[i]
4E       # imstore            # freq[(lo + i)] = f_tmp[i];
15 0C    # vload 12           # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 0C    # vstore 12          # i += 1;
A7 00 06 # goto +6            # goto <1270:endif>
# <1269:else>
A7 00 06 # goto +6            # break
# <1270:endif>
A7 FF C8 # goto -56           # goto <1265:loop>
# <1267:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<mergesort>
06                # number of arguments = 6
07                # number of local variables = 7
00 AF             # code length = 175 bytes
15 00    # vload 0            # vocab
BE       # arraylength        # \length(vocab)
15 01    # vload 1            # freq
BE       # arraylength        # \length(freq)
9F 00 06 # if_cmpeq +6        # if (\length(vocab) == \length(freq)) goto <1271:cond_true>
A7 00 08 # goto +8            # goto <1272:cond_false>
# <1271:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1273:cond_end>
# <1272:cond_false>
10 00    # bipush 0           # false
# <1273:cond_end>
14 6F 2D # aldc 28461         # s[28461] = "doslingos.c0: 84.4-84.45: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 6F 64 # aldc 28516         # s[28516] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos.c0: 84.4-84.45: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(vocab) == \length(freq)) [failure message on stack]
10 00    # bipush 0           # 0
15 02    # vload 2            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <1277:and>
A7 00 22 # goto +34           # goto <1275:cond_false>
# <1277:and>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <1274:cond_true>
A7 00 18 # goto +24           # goto <1275:cond_false>
# <1274:cond_true>
15 03    # vload 3            # hi
15 00    # vload 0            # vocab
BE       # arraylength        # \length(vocab)
A4 00 06 # if_icmple +6       # if (hi <= \length(vocab)) goto <1278:cond_true>
A7 00 08 # goto +8            # goto <1279:cond_false>
# <1278:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1280:cond_end>
# <1279:cond_false>
10 00    # bipush 0           # false
# <1280:cond_end>
A7 00 05 # goto +5            # goto <1276:cond_end>
# <1275:cond_false>
10 00    # bipush 0           # false
# <1276:cond_end>
14 6F 76 # aldc 28534         # s[28534] = "doslingos.c0: 85.4-85.57: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 6F AD # aldc 28589         # s[28589] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos.c0: 85.4-85.57: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(vocab))) [failure message on stack]
15 03    # vload 3            # hi
15 02    # vload 2            # lo
64       # isub               # (hi - lo)
10 01    # bipush 1           # 1
A4 00 06 # if_icmple +6       # if ((hi - lo) <= 1) goto <1281:then>
A7 00 09 # goto +9            # goto <1282:else>
# <1281:then>
10 00    # bipush 0           # dummy return value
B0       # return             # 
A7 00 03 # goto +3            # goto <1283:endif>
# <1282:else>
# <1283:endif>
15 02    # vload 2            # lo
15 03    # vload 3            # hi
60       # iadd               # (lo + hi)
10 02    # bipush 2           # 2
6C       # idiv               # ((lo + hi) / 2)
36 06    # vstore 6           # mid = ((lo + hi) / 2);
15 00    # vload 0            # vocab
15 01    # vload 1            # freq
15 02    # vload 2            # lo
15 06    # vload 6            # mid
15 04    # vload 4            # length
14 6F BF # aldc 28607         # s[28607] = "mergesort (doslingos.c0: 90.5-90.44)"
B8 00 76 # invokestatic 118   # mergesort(vocab, freq, lo, mid, length, "mergesort (doslingos.c0: 90.5-90.44)")
57       # pop                # (ignore result)
15 00    # vload 0            # vocab
15 01    # vload 1            # freq
15 06    # vload 6            # mid
15 03    # vload 3            # hi
15 04    # vload 4            # length
14 6F E4 # aldc 28644         # s[28644] = "mergesort (doslingos.c0: 91.5-91.44)"
B8 00 76 # invokestatic 118   # mergesort(vocab, freq, mid, hi, length, "mergesort (doslingos.c0: 91.5-91.44)")
57       # pop                # (ignore result)
15 00    # vload 0            # vocab
15 01    # vload 1            # freq
15 02    # vload 2            # lo
15 06    # vload 6            # mid
15 03    # vload 3            # hi
14 70 09 # aldc 28681         # s[28681] = "mergesort (doslingos.c0: 93.5-93.36)"
B8 00 75 # invokestatic 117   # merge(vocab, freq, lo, mid, hi, "mergesort (doslingos.c0: 93.5-93.36)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<binsearch>
04                # number of arguments = 4
08                # number of local variables = 8
01 96             # code length = 406 bytes
10 00    # bipush 0           # 0
15 02    # vload 2            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <1284:cond_true>
A7 00 18 # goto +24           # goto <1285:cond_false>
# <1284:cond_true>
15 02    # vload 2            # n
15 01    # vload 1            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (n <= \length(A)) goto <1287:cond_true>
A7 00 08 # goto +8            # goto <1288:cond_false>
# <1287:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1289:cond_end>
# <1288:cond_false>
10 00    # bipush 0           # false
# <1289:cond_end>
A7 00 05 # goto +5            # goto <1286:cond_end>
# <1285:cond_false>
10 00    # bipush 0           # false
# <1286:cond_end>
14 70 2E # aldc 28718         # s[28718] = "doslingos.c0: 98.4-98.39: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 70 65 # aldc 28773         # s[28773] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos.c0: 98.4-98.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= \length(A))) [failure message on stack]
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 02    # vload 2            # n
14 70 77 # aldc 28791         # s[28791] = "binsearch (doslingos.c0: 99.13-99.38)"
B8 00 61 # invokestatic 97    # string_is_sorted__1(A, 0, n, "binsearch (doslingos.c0: 99.13-99.38)")
14 70 9D # aldc 28829         # s[28829] = "doslingos.c0: 99.4-99.39: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 70 D4 # aldc 28884         # s[28884] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos.c0: 99.4-99.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert string_is_sorted__1(A, 0, n, "binsearch (doslingos.c0: 99.13-99.38)") [failure message on stack]
10 00    # bipush 0           # 0
36 05    # vstore 5           # lo = 0;
15 02    # vload 2            # n
36 06    # vstore 6           # hi = n;
15 05    # vload 5            # lo
15 06    # vload 6            # hi
60       # iadd               # (lo + hi)
10 02    # bipush 2           # 2
6C       # idiv               # ((lo + hi) / 2)
36 07    # vstore 7           # mid = ((lo + hi) / 2);
# <1290:loop>
A7 00 03 # goto +3            # goto <1291:body>
# <1291:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <1296:and>
A7 00 21 # goto +33           # goto <1294:cond_false>
# <1296:and>
15 05    # vload 5            # lo
15 06    # vload 6            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <1293:cond_true>
A7 00 17 # goto +23           # goto <1294:cond_false>
# <1293:cond_true>
15 06    # vload 6            # hi
15 02    # vload 2            # n
A4 00 06 # if_icmple +6       # if (hi <= n) goto <1297:cond_true>
A7 00 08 # goto +8            # goto <1298:cond_false>
# <1297:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1299:cond_end>
# <1298:cond_false>
10 00    # bipush 0           # false
# <1299:cond_end>
A7 00 05 # goto +5            # goto <1295:cond_end>
# <1294:cond_false>
10 00    # bipush 0           # false
# <1295:cond_end>
14 70 E6 # aldc 28902         # s[28902] = "doslingos.c0: 111.8-111.54: @loop_invariant annotation failed"
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= n)) [failure message on stack]
15 05    # vload 5            # lo
15 06    # vload 6            # hi
A1 00 06 # if_icmplt +6       # if (lo < hi) goto <1300:then>
A7 00 A4 # goto +164          # goto <1301:else>
# <1300:then>
15 01    # vload 1            # A
15 07    # vload 7            # mid
63       # aadds              # &A[mid]
2F       # amload             # A[mid]
15 00    # vload 0            # x
14 71 24 # aldc 28964         # s[28964] = "binsearch (doslingos.c0: 113.12-113.35)"
B8 00 25 # invokestatic 37    # string_equal__1(A[mid], x, "binsearch (doslingos.c0: 113.12-113.35)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(A[mid], x, "binsearch (doslingos.c0: 113.12-113.35)") == true) goto <1303:then>
A7 00 5D # goto +93           # goto <1304:else>
# <1303:then>
15 07    # vload 7            # mid
36 04    # vstore 4           # _result = mid;
10 FF    # bipush -1          # -1
15 04    # vload 4            # _result
9F 00 06 # if_cmpeq +6        # if (-(1) == _result) goto <1309:and>
A7 00 1E # goto +30           # goto <1307:cond_false>
# <1309:and>
15 00    # vload 0            # x
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 02    # vload 2            # n
14 71 4C # aldc 29004         # s[29004] = "binsearch (doslingos.c0: 100.31-100.55)"
B8 00 60 # invokestatic 96    # string_is_in__1(x, A, 0, n, "binsearch (doslingos.c0: 100.31-100.55)")
10 01    # bipush 1           # true
9F 00 0B # if_cmpeq +11       # if (string_is_in__1(x, A, 0, n, "binsearch (doslingos.c0: 100.31-100.55)") == true) goto <1307:cond_false>
A7 00 03 # goto +3            # goto <1306:cond_true>
# <1306:cond_true>
10 01    # bipush 1           # true
A7 00 2A # goto +42           # goto <1308:cond_end>
# <1307:cond_false>
10 00    # bipush 0           # 0
15 04    # vload 4            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <1313:and>
A7 00 1E # goto +30           # goto <1311:cond_false>
# <1313:and>
15 04    # vload 4            # _result
15 02    # vload 2            # n
A1 00 06 # if_icmplt +6       # if (_result < n) goto <1310:cond_true>
A7 00 14 # goto +20           # goto <1311:cond_false>
# <1310:cond_true>
15 01    # vload 1            # A
15 04    # vload 4            # _result
63       # aadds              # &A[_result]
2F       # amload             # A[_result]
15 00    # vload 0            # x
14 71 74 # aldc 29044         # s[29044] = "binsearch (doslingos.c0: 102.16-102.43)"
B8 00 25 # invokestatic 37    # string_equal__1(A[_result], x, "binsearch (doslingos.c0: 102.16-102.43)")
A7 00 05 # goto +5            # goto <1312:cond_end>
# <1311:cond_false>
10 00    # bipush 0           # false
# <1312:cond_end>
# <1308:cond_end>
14 71 9C # aldc 29084         # s[29084] = "doslingos.c0: 100.4-102.45: @ensures annotation failed"
CF       # assert             # assert (((-(1) == _result) && !(string_is_in__1(x, A, 0, n, "binsearch (doslingos.c0: 100.31-100.55)"))) || (((0 <= _result) && (_result < n)) && string_equal__1(A[_result], x, "binsearch (doslingos.c0: 102.16-102.43)"))) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 
A7 00 31 # goto +49           # goto <1305:endif>
# <1304:else>
15 01    # vload 1            # A
15 07    # vload 7            # mid
63       # aadds              # &A[mid]
2F       # amload             # A[mid]
15 00    # vload 0            # x
14 71 D3 # aldc 29139         # s[29139] = "binsearch (doslingos.c0: 116.16-116.41)"
B8 00 26 # invokestatic 38    # string_compare__1(A[mid], x, "binsearch (doslingos.c0: 116.16-116.41)")
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (string_compare__1(A[mid], x, "binsearch (doslingos.c0: 116.16-116.41)") < 0) goto <1314:then>
A7 00 0D # goto +13           # goto <1315:else>
# <1314:then>
15 07    # vload 7            # mid
10 01    # bipush 1           # 1
60       # iadd               # (mid + 1)
36 05    # vstore 5           # lo = (mid + 1);
A7 00 07 # goto +7            # goto <1316:endif>
# <1315:else>
15 07    # vload 7            # mid
36 06    # vstore 6           # hi = mid;
# <1316:endif>
15 05    # vload 5            # lo
15 06    # vload 6            # hi
60       # iadd               # (lo + hi)
10 02    # bipush 2           # 2
6C       # idiv               # ((lo + hi) / 2)
36 07    # vstore 7           # mid = ((lo + hi) / 2);
# <1305:endif>
A7 00 06 # goto +6            # goto <1302:endif>
# <1301:else>
A7 00 06 # goto +6            # break
# <1302:endif>
A7 FF 21 # goto -223          # goto <1290:loop>
# <1292:exit>
10 FF    # bipush -1          # -1
36 04    # vstore 4           # _result = -(1);
10 FF    # bipush -1          # -1
15 04    # vload 4            # _result
9F 00 06 # if_cmpeq +6        # if (-(1) == _result) goto <1320:and>
A7 00 1E # goto +30           # goto <1318:cond_false>
# <1320:and>
15 00    # vload 0            # x
15 01    # vload 1            # A
10 00    # bipush 0           # 0
15 02    # vload 2            # n
14 71 FB # aldc 29179         # s[29179] = "binsearch (doslingos.c0: 100.31-100.55)"
B8 00 60 # invokestatic 96    # string_is_in__1(x, A, 0, n, "binsearch (doslingos.c0: 100.31-100.55)")
10 01    # bipush 1           # true
9F 00 0B # if_cmpeq +11       # if (string_is_in__1(x, A, 0, n, "binsearch (doslingos.c0: 100.31-100.55)") == true) goto <1318:cond_false>
A7 00 03 # goto +3            # goto <1317:cond_true>
# <1317:cond_true>
10 01    # bipush 1           # true
A7 00 2A # goto +42           # goto <1319:cond_end>
# <1318:cond_false>
10 00    # bipush 0           # 0
15 04    # vload 4            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <1324:and>
A7 00 1E # goto +30           # goto <1322:cond_false>
# <1324:and>
15 04    # vload 4            # _result
15 02    # vload 2            # n
A1 00 06 # if_icmplt +6       # if (_result < n) goto <1321:cond_true>
A7 00 14 # goto +20           # goto <1322:cond_false>
# <1321:cond_true>
15 01    # vload 1            # A
15 04    # vload 4            # _result
63       # aadds              # &A[_result]
2F       # amload             # A[_result]
15 00    # vload 0            # x
14 72 23 # aldc 29219         # s[29219] = "binsearch (doslingos.c0: 102.16-102.43)"
B8 00 25 # invokestatic 37    # string_equal__1(A[_result], x, "binsearch (doslingos.c0: 102.16-102.43)")
A7 00 05 # goto +5            # goto <1323:cond_end>
# <1322:cond_false>
10 00    # bipush 0           # false
# <1323:cond_end>
# <1319:cond_end>
14 72 4B # aldc 29259         # s[29259] = "doslingos.c0: 100.4-102.45: @ensures annotation failed"
CF       # assert             # assert (((-(1) == _result) && !(string_is_in__1(x, A, 0, n, "binsearch (doslingos.c0: 100.31-100.55)"))) || (((0 <= _result) && (_result < n)) && string_equal__1(A[_result], x, "binsearch (doslingos.c0: 102.16-102.43)"))) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<no_dupes>
04                # number of arguments = 4
09                # number of local variables = 9
00 BC             # code length = 188 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # lo
A4 00 06 # if_icmple +6       # if (0 <= lo) goto <1328:and>
A7 00 22 # goto +34           # goto <1326:cond_false>
# <1328:and>
15 01    # vload 1            # lo
15 02    # vload 2            # hi
A4 00 06 # if_icmple +6       # if (lo <= hi) goto <1325:cond_true>
A7 00 18 # goto +24           # goto <1326:cond_false>
# <1325:cond_true>
15 02    # vload 2            # hi
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (hi <= \length(A)) goto <1329:cond_true>
A7 00 08 # goto +8            # goto <1330:cond_false>
# <1329:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1331:cond_end>
# <1330:cond_false>
10 00    # bipush 0           # false
# <1331:cond_end>
A7 00 05 # goto +5            # goto <1327:cond_end>
# <1326:cond_false>
10 00    # bipush 0           # false
# <1327:cond_end>
14 72 82 # aldc 29314         # s[29314] = "doslingos.c0: 125.4-125.53: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 72 BB # aldc 29371         # s[29371] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos.c0: 125.4-125.53: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= lo) && (lo <= hi)) && (hi <= \length(A))) [failure message on stack]
14 72 CD # aldc 29389         # s[29389] = ""
36 05    # vstore 5           # currStr = "";
14 72 CE # aldc 29390         # s[29390] = ""
36 06    # vstore 6           # cmpStr = "";
15 01    # vload 1            # lo
10 01    # bipush 1           # 1
60       # iadd               # (lo + 1)
36 07    # vstore 7           # curr = (lo + 1);
# <1332:loop>
A7 00 03 # goto +3            # goto <1333:body>
# <1333:body>
15 07    # vload 7            # curr
15 02    # vload 2            # hi
A1 00 06 # if_icmplt +6       # if (curr < hi) goto <1335:then>
A7 00 5A # goto +90           # goto <1336:else>
# <1335:then>
15 00    # vload 0            # A
15 07    # vload 7            # curr
63       # aadds              # &A[curr]
2F       # amload             # A[curr]
36 05    # vstore 5           # currStr = A[curr];
15 01    # vload 1            # lo
36 08    # vstore 8           # idx = lo;
# <1338:loop>
A7 00 03 # goto +3            # goto <1339:body>
# <1339:body>
15 08    # vload 8            # idx
15 07    # vload 7            # curr
A1 00 06 # if_icmplt +6       # if (idx < curr) goto <1341:then>
A7 00 31 # goto +49           # goto <1342:else>
# <1341:then>
15 00    # vload 0            # A
15 08    # vload 8            # idx
63       # aadds              # &A[idx]
2F       # amload             # A[idx]
36 06    # vstore 6           # cmpStr = A[idx];
15 05    # vload 5            # currStr
15 06    # vload 6            # cmpStr
14 72 CF # aldc 29391         # s[29391] = "no_dupes (doslingos.c0: 135.16-135.45)"
B8 00 25 # invokestatic 37    # string_equal__1(currStr, cmpStr, "no_dupes (doslingos.c0: 135.16-135.45)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(currStr, cmpStr, "no_dupes (doslingos.c0: 135.16-135.45)") == true) goto <1344:then>
A7 00 0D # goto +13           # goto <1345:else>
# <1344:then>
10 00    # bipush 0           # false
36 04    # vstore 4           # _result = false;
15 04    # vload 4            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <1346:endif>
# <1345:else>
# <1346:endif>
15 08    # vload 8            # idx
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # idx += 1;
A7 00 06 # goto +6            # goto <1343:endif>
# <1342:else>
A7 00 06 # goto +6            # break
# <1343:endif>
A7 FF C2 # goto -62           # goto <1338:loop>
# <1340:exit>
15 07    # vload 7            # curr
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # curr += 1;
A7 00 06 # goto +6            # goto <1337:endif>
# <1336:else>
A7 00 06 # goto +6            # break
# <1337:endif>
A7 FF 99 # goto -103          # goto <1332:loop>
# <1334:exit>
10 01    # bipush 1           # true
36 04    # vstore 4           # _result = true;
15 04    # vload 4            # _result
B0       # return             # 


#<count_vocab>
06                # number of arguments = 6
0E                # number of local variables = 14
01 05             # code length = 261 bytes
15 02    # vload 2            # v
15 00    # vload 0            # vocab
BE       # arraylength        # \length(vocab)
9F 00 06 # if_cmpeq +6        # if (v == \length(vocab)) goto <1347:cond_true>
A7 00 18 # goto +24           # goto <1348:cond_false>
# <1347:cond_true>
15 02    # vload 2            # v
15 01    # vload 1            # freq
BE       # arraylength        # \length(freq)
9F 00 06 # if_cmpeq +6        # if (v == \length(freq)) goto <1350:cond_true>
A7 00 08 # goto +8            # goto <1351:cond_false>
# <1350:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1352:cond_end>
# <1351:cond_false>
10 00    # bipush 0           # false
# <1352:cond_end>
A7 00 05 # goto +5            # goto <1349:cond_end>
# <1348:cond_false>
10 00    # bipush 0           # false
# <1349:cond_end>
14 72 F6 # aldc 29430         # s[29430] = "doslingos.c0: 145.4-145.55: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 73 2F # aldc 29487         # s[29487] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos.c0: 145.4-145.55: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((v == \length(vocab)) && (v == \length(freq))) [failure message on stack]
15 00    # vload 0            # vocab
10 00    # bipush 0           # 0
15 02    # vload 2            # v
14 73 41 # aldc 29505         # s[29505] = "count_vocab (doslingos.c0: 146.13-146.42)"
B8 00 61 # invokestatic 97    # string_is_sorted__1(vocab, 0, v, "count_vocab (doslingos.c0: 146.13-146.42)")
14 73 6B # aldc 29547         # s[29547] = "doslingos.c0: 146.4-146.43: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 73 A4 # aldc 29604         # s[29604] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos.c0: 146.4-146.43: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert string_is_sorted__1(vocab, 0, v, "count_vocab (doslingos.c0: 146.13-146.42)") [failure message on stack]
15 00    # vload 0            # vocab
10 00    # bipush 0           # 0
15 02    # vload 2            # v
14 73 B6 # aldc 29622         # s[29622] = "count_vocab (doslingos.c0: 147.13-147.34)"
B8 00 78 # invokestatic 120   # no_dupes(vocab, 0, v, "count_vocab (doslingos.c0: 147.13-147.34)")
14 73 E0 # aldc 29664         # s[29664] = "doslingos.c0: 147.4-147.35: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 74 19 # aldc 29721         # s[29721] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos.c0: 147.4-147.35: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert no_dupes(vocab, 0, v, "count_vocab (doslingos.c0: 147.13-147.34)") [failure message on stack]
10 00    # bipush 0           # 0
36 07    # vstore 7           # notFound = 0;
10 00    # bipush 0           # 0
36 08    # vstore 8           # foundIdx = 0;
15 03    # vload 3            # corpus
14 74 2B # aldc 29739         # s[29739] = "count_vocab (doslingos.c0: 154.22-154.40)"
B8 00 52 # invokestatic 82    # read_words(corpus, "count_vocab (doslingos.c0: 154.22-154.40)")
36 09    # vstore 9           # words = read_words(corpus, "count_vocab (doslingos.c0: 154.22-154.40)");
15 09    # vload 9            # words
14 74 55 # aldc 29781         # s[29781] = "count_vocab (doslingos.c0: 155.18-155.45)"
B8 00 51 # invokestatic 81    # string_bundle_length(words, "count_vocab (doslingos.c0: 155.18-155.45)")
36 0A    # vstore 10          # length = string_bundle_length(words, "count_vocab (doslingos.c0: 155.18-155.45)");
15 09    # vload 9            # words
14 74 7F # aldc 29823         # s[29823] = "count_vocab (doslingos.c0: 156.28-156.54)"
B8 00 53 # invokestatic 83    # string_bundle_array__1(words, "count_vocab (doslingos.c0: 156.28-156.54)")
36 0B    # vstore 11          # corpusWords = string_bundle_array__1(words, "count_vocab (doslingos.c0: 156.28-156.54)");
10 00    # bipush 0           # 0
36 0C    # vstore 12          # idx = 0;
# <1353:loop>
A7 00 03 # goto +3            # goto <1354:body>
# <1354:body>
15 0C    # vload 12           # idx
15 0A    # vload 10           # length
A1 00 06 # if_icmplt +6       # if (idx < length) goto <1356:then>
A7 00 5D # goto +93           # goto <1357:else>
# <1356:then>
15 0B    # vload 11           # corpusWords
15 0C    # vload 12           # idx
63       # aadds              # &corpusWords[idx]
2F       # amload             # corpusWords[idx]
36 0D    # vstore 13          # currStr = corpusWords[idx];
15 04    # vload 4            # fast
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (fast == true) goto <1359:then>
A7 00 14 # goto +20           # goto <1360:else>
# <1359:then>
15 0D    # vload 13           # currStr
15 00    # vload 0            # vocab
15 02    # vload 2            # v
14 74 A9 # aldc 29865         # s[29865] = "count_vocab (doslingos.c0: 163.29-163.57)"
B8 00 77 # invokestatic 119   # binsearch(currStr, vocab, v, "count_vocab (doslingos.c0: 163.29-163.57)")
36 08    # vstore 8           # foundIdx = binsearch(currStr, vocab, v, "count_vocab (doslingos.c0: 163.29-163.57)");
A7 00 11 # goto +17           # goto <1361:endif>
# <1360:else>
15 0D    # vload 13           # currStr
15 00    # vload 0            # vocab
15 02    # vload 2            # v
14 74 D3 # aldc 29907         # s[29907] = "count_vocab (doslingos.c0: 164.25-164.53)"
B8 00 6D # invokestatic 109   # linsearch__1(currStr, vocab, v, "count_vocab (doslingos.c0: 164.25-164.53)")
36 08    # vstore 8           # foundIdx = linsearch__1(currStr, vocab, v, "count_vocab (doslingos.c0: 164.25-164.53)");
# <1361:endif>
15 08    # vload 8            # foundIdx
10 FF    # bipush -1          # -1
9F 00 06 # if_cmpeq +6        # if (foundIdx == -(1)) goto <1362:then>
A7 00 0D # goto +13           # goto <1363:else>
# <1362:then>
15 07    # vload 7            # notFound
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # notFound += 1;
A7 00 0E # goto +14           # goto <1364:endif>
# <1363:else>
15 01    # vload 1            # freq
15 08    # vload 8            # foundIdx
63       # aadds              # &freq[foundIdx]
59       # dup                # (save &freq[foundIdx])
2E       # imload             # freq[foundIdx]
10 01    # bipush 1           # 1
60       # iadd               # 
4E       # imstore            # freq[foundIdx] += 1;
# <1364:endif>
15 0C    # vload 12           # idx
10 01    # bipush 1           # 1
60       # iadd               # 
36 0C    # vstore 12          # idx += 1;
A7 00 06 # goto +6            # goto <1358:endif>
# <1357:else>
A7 00 06 # goto +6            # break
# <1358:endif>
A7 FF 96 # goto -106          # goto <1353:loop>
# <1355:exit>
15 07    # vload 7            # notFound
36 06    # vstore 6           # _result = notFound;
15 06    # vload 6            # _result
B0       # return             # 


#<sort_by_freq>
04                # number of arguments = 4
04                # number of local variables = 4
00 55             # code length = 85 bytes
15 02    # vload 2            # v
15 00    # vload 0            # vocab
BE       # arraylength        # \length(vocab)
9F 00 06 # if_cmpeq +6        # if (v == \length(vocab)) goto <1365:cond_true>
A7 00 18 # goto +24           # goto <1366:cond_false>
# <1365:cond_true>
15 02    # vload 2            # v
15 01    # vload 1            # freq
BE       # arraylength        # \length(freq)
9F 00 06 # if_cmpeq +6        # if (v == \length(freq)) goto <1368:cond_true>
A7 00 08 # goto +8            # goto <1369:cond_false>
# <1368:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1370:cond_end>
# <1369:cond_false>
10 00    # bipush 0           # false
# <1370:cond_end>
A7 00 05 # goto +5            # goto <1367:cond_end>
# <1366:cond_false>
10 00    # bipush 0           # false
# <1367:cond_end>
14 74 FD # aldc 29949         # s[29949] = "doslingos.c0: 176.4-176.55: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 75 36 # aldc 30006         # s[30006] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos.c0: 176.4-176.55: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((v == \length(vocab)) && (v == \length(freq))) [failure message on stack]
15 00    # vload 0            # vocab
15 01    # vload 1            # freq
10 00    # bipush 0           # 0
15 02    # vload 2            # v
15 02    # vload 2            # v
14 75 48 # aldc 30024         # s[30024] = "sort_by_freq (doslingos.c0: 181.5-181.36)"
B8 00 76 # invokestatic 118   # mergesort(vocab, freq, 0, v, v, "sort_by_freq (doslingos.c0: 181.5-181.36)")
57       # pop                # (ignore result)
15 01    # vload 1            # freq
10 00    # bipush 0           # 0
15 02    # vload 2            # v
14 75 72 # aldc 30066         # s[30066] = "sort_by_freq (doslingos.c0: 177.12-177.37)"
B8 00 16 # invokestatic 22    # int_is_sorted__1(freq, 0, v, "sort_by_freq (doslingos.c0: 177.12-177.37)")
14 75 9D # aldc 30109         # s[30109] = "doslingos.c0: 177.4-177.38: @ensures annotation failed"
CF       # assert             # assert int_is_sorted__1(freq, 0, v, "sort_by_freq (doslingos.c0: 177.12-177.37)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printFreq>
04                # number of arguments = 4
05                # number of local variables = 5
00 87             # code length = 135 bytes
15 02    # vload 2            # length
15 00    # vload 0            # freq
BE       # arraylength        # \length(freq)
9F 00 06 # if_cmpeq +6        # if (length == \length(freq)) goto <1371:cond_true>
A7 00 08 # goto +8            # goto <1372:cond_false>
# <1371:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1373:cond_end>
# <1372:cond_false>
10 00    # bipush 0           # false
# <1373:cond_end>
14 75 D4 # aldc 30164         # s[30164] = "doslingos-test.c0: 10.4-10.37: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 76 10 # aldc 30224         # s[30224] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos-test.c0: 10.4-10.37: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (length == \length(freq)) [failure message on stack]
10 00    # bipush 0           # 0
36 04    # vstore 4           # i = 0;
# <1374:loop>
A7 00 03 # goto +3            # goto <1375:body>
# <1375:body>
15 04    # vload 4            # i
15 02    # vload 2            # length
A1 00 06 # if_icmplt +6       # if (i < length) goto <1377:then>
A7 00 45 # goto +69           # goto <1378:else>
# <1377:then>
14 76 22 # aldc 30242         # s[30242] = ""
14 76 23 # aldc 30243         # s[30243] = "printFreq (doslingos-test.c0: 14.5-14.41)"
B8 00 01 # invokestatic 1     # print__1("", "printFreq (doslingos-test.c0: 14.5-14.41)")
57       # pop                # (ignore result)
15 00    # vload 0            # freq
15 04    # vload 4            # i
63       # aadds              # &freq[i]
2E       # imload             # freq[i]
14 76 4D # aldc 30285         # s[30285] = "printFreq (doslingos-test.c0: 14.5-14.41)"
B8 00 03 # invokestatic 3     # printint__1(freq[i], "printFreq (doslingos-test.c0: 14.5-14.41)")
57       # pop                # (ignore result)
14 76 77 # aldc 30327         # s[30327] = " "
14 76 79 # aldc 30329         # s[30329] = "printFreq (doslingos-test.c0: 14.5-14.41)"
B8 00 01 # invokestatic 1     # print__1(" ", "printFreq (doslingos-test.c0: 14.5-14.41)")
57       # pop                # (ignore result)
15 01    # vload 1            # vocab
15 04    # vload 4            # i
63       # aadds              # &vocab[i]
2F       # amload             # vocab[i]
14 76 A3 # aldc 30371         # s[30371] = "printFreq (doslingos-test.c0: 14.5-14.41)"
B8 00 01 # invokestatic 1     # print__1(vocab[i], "printFreq (doslingos-test.c0: 14.5-14.41)")
57       # pop                # (ignore result)
14 76 CD # aldc 30413         # s[30413] = "\n"
14 76 CF # aldc 30415         # s[30415] = "printFreq (doslingos-test.c0: 14.5-14.41)"
B8 00 01 # invokestatic 1     # print__1("\n", "printFreq (doslingos-test.c0: 14.5-14.41)")
57       # pop                # (ignore result)
15 04    # vload 4            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 04    # vstore 4           # i += 1;
A7 00 06 # goto +6            # goto <1379:endif>
# <1378:else>
A7 00 06 # goto +6            # break
# <1379:endif>
A7 FF AE # goto -82           # goto <1374:loop>
# <1376:exit>
14 76 F9 # aldc 30457         # s[30457] = "print done!\n\n"
14 77 07 # aldc 30471         # s[30471] = "printFreq (doslingos-test.c0: 16.3-16.28)"
B8 00 01 # invokestatic 1     # print__1("print done!\n\n", "printFreq (doslingos-test.c0: 16.3-16.28)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<equal_array>
06                # number of arguments = 6
08                # number of local variables = 8
00 DE             # code length = 222 bytes
15 00    # vload 0            # vocab
BE       # arraylength        # \length(vocab)
15 02    # vload 2            # freq
BE       # arraylength        # \length(freq)
9F 00 06 # if_cmpeq +6        # if (\length(vocab) == \length(freq)) goto <1380:cond_true>
A7 00 18 # goto +24           # goto <1381:cond_false>
# <1380:cond_true>
15 00    # vload 0            # vocab
BE       # arraylength        # \length(vocab)
15 04    # vload 4            # l
9F 00 06 # if_cmpeq +6        # if (\length(vocab) == l) goto <1383:cond_true>
A7 00 08 # goto +8            # goto <1384:cond_false>
# <1383:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1385:cond_end>
# <1384:cond_false>
10 00    # bipush 0           # false
# <1385:cond_end>
A7 00 05 # goto +5            # goto <1382:cond_end>
# <1381:cond_false>
10 00    # bipush 0           # false
# <1382:cond_end>
14 77 31 # aldc 30513         # s[30513] = "doslingos-test.c0: 20.4-20.68: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 77 6D # aldc 30573         # s[30573] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos-test.c0: 20.4-20.68: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((\length(vocab) == \length(freq)) && (\length(vocab) == l)) [failure message on stack]
15 02    # vload 2            # freq
BE       # arraylength        # \length(freq)
15 03    # vload 3            # checkF
BE       # arraylength        # \length(checkF)
9F 00 06 # if_cmpeq +6        # if (\length(freq) == \length(checkF)) goto <1386:cond_true>
A7 00 08 # goto +8            # goto <1387:cond_false>
# <1386:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1388:cond_end>
# <1387:cond_false>
10 00    # bipush 0           # false
# <1388:cond_end>
14 77 7F # aldc 30591         # s[30591] = "doslingos-test.c0: 21.4-21.46: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 77 BB # aldc 30651         # s[30651] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos-test.c0: 21.4-21.46: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(freq) == \length(checkF)) [failure message on stack]
15 00    # vload 0            # vocab
BE       # arraylength        # \length(vocab)
15 01    # vload 1            # checkV
BE       # arraylength        # \length(checkV)
9F 00 06 # if_cmpeq +6        # if (\length(vocab) == \length(checkV)) goto <1389:cond_true>
A7 00 08 # goto +8            # goto <1390:cond_false>
# <1389:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <1391:cond_end>
# <1390:cond_false>
10 00    # bipush 0           # false
# <1391:cond_end>
14 77 CD # aldc 30669         # s[30669] = "doslingos-test.c0: 22.4-22.47: @requires annotation failed\n"
15 05    # vload 5            # _caller
14 78 09 # aldc 30729         # s[30729] = ": caller location"
B7 00 07 # invokenative 7     # string_join(_caller, ": caller location")
B7 00 07 # invokenative 7     # string_join("doslingos-test.c0: 22.4-22.47: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (\length(vocab) == \length(checkV)) [failure message on stack]
10 00    # bipush 0           # 0
36 07    # vstore 7           # i = 0;
# <1392:loop>
A7 00 03 # goto +3            # goto <1393:body>
# <1393:body>
15 07    # vload 7            # i
15 04    # vload 4            # l
A1 00 06 # if_icmplt +6       # if (i < l) goto <1395:then>
A7 00 4D # goto +77           # goto <1396:else>
# <1395:then>
15 00    # vload 0            # vocab
15 07    # vload 7            # i
63       # aadds              # &vocab[i]
2F       # amload             # vocab[i]
15 01    # vload 1            # checkV
15 07    # vload 7            # i
63       # aadds              # &checkV[i]
2F       # amload             # checkV[i]
14 78 1B # aldc 30747         # s[30747] = "equal_array (doslingos-test.c0: 26.9-26.42)"
B8 00 25 # invokestatic 37    # string_equal__1(vocab[i], checkV[i], "equal_array (doslingos-test.c0: 26.9-26.42)")
10 01    # bipush 1           # true
9F 00 10 # if_cmpeq +16       # if (string_equal__1(vocab[i], checkV[i], "equal_array (doslingos-test.c0: 26.9-26.42)") == true) goto <1399:else>
A7 00 03 # goto +3            # goto <1398:then>
# <1398:then>
10 00    # bipush 0           # false
36 06    # vstore 6           # _result = false;
15 06    # vload 6            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <1400:endif>
# <1399:else>
# <1400:endif>
15 02    # vload 2            # freq
15 07    # vload 7            # i
63       # aadds              # &freq[i]
2E       # imload             # freq[i]
15 03    # vload 3            # checkF
15 07    # vload 7            # i
63       # aadds              # &checkF[i]
2E       # imload             # checkF[i]
A0 00 06 # if_cmpne +6        # if (freq[i] != checkF[i]) goto <1401:then>
A7 00 0D # goto +13           # goto <1402:else>
# <1401:then>
10 00    # bipush 0           # false
36 06    # vstore 6           # _result = false;
15 06    # vload 6            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <1403:endif>
# <1402:else>
# <1403:endif>
15 07    # vload 7            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # i += 1;
A7 00 06 # goto +6            # goto <1397:endif>
# <1396:else>
A7 00 06 # goto +6            # break
# <1397:endif>
A7 FF A6 # goto -90           # goto <1392:loop>
# <1394:exit>
10 01    # bipush 1           # true
36 06    # vstore 6           # _result = true;
15 06    # vload 6            # _result
B0       # return             # 

00 22             # native count
# native pool
00 01 00 06       # print
00 01 00 0A       # println
00 01 00 09       # printint
00 01 00 07       # printbool
00 01 00 08       # printchar
00 00 00 05       # flush
00 00 00 04       # eof
00 02 00 64       # string_join
00 00 00 0B       # readline
00 01 00 65       # string_length
00 02 00 5D       # string_charat
00 03 00 66       # string_sub
00 02 00 5F       # string_equal
00 02 00 5E       # string_compare
00 01 00 63       # string_fromint
00 01 00 61       # string_frombool
00 01 00 62       # string_fromchar
00 01 00 69       # string_tolower
00 02 00 67       # string_terminated
00 01 00 68       # string_to_chararray
00 01 00 60       # string_from_chararray
00 01 00 5C       # char_ord
00 01 00 5B       # char_chr
00 01 00 3F       # file_closed
00 01 00 41       # file_read
00 01 00 3E       # file_close
00 01 00 40       # file_eof
00 01 00 42       # file_readline
00 01 00 57       # parse_bool
00 02 00 58       # parse_int
00 01 00 56       # num_tokens
00 02 00 55       # int_tokens
00 01 00 5A       # parse_tokens
00 02 00 59       # parse_ints

